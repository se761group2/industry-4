{"ast":null,"code":"import { __awaiter, __extends, __generator, __spreadArrays } from \"tslib\";\nvar NAMESPACE = 'ionic';\nvar scopeId;\nvar contentRef;\nvar hostTagName;\nvar useNativeShadowDom = false;\nvar checkSlotFallbackVisibility = false;\nvar checkSlotRelocate = false;\nvar isSvgMode = false;\nvar queueCongestion = 0;\nvar queuePending = false;\nvar win = typeof window !== 'undefined' ? window : {};\nvar CSS = win.CSS;\nvar doc = win.document || {\n  head: {}\n};\nvar plt = {\n  $flags$: 0,\n  $resourcesUrl$: '',\n  jmp: function (h) {\n    return h();\n  },\n  raf: function (h) {\n    return requestAnimationFrame(h);\n  },\n  ael: function (el, eventName, listener, opts) {\n    return el.addEventListener(eventName, listener, opts);\n  },\n  rel: function (el, eventName, listener, opts) {\n    return el.removeEventListener(eventName, listener, opts);\n  },\n  ce: function (eventName, opts) {\n    return new CustomEvent(eventName, opts);\n  }\n};\n\nvar supportsShadow = /*@__PURE__*/function () {\n  return (doc.head.attachShadow + '').indexOf('[native') > -1;\n}();\n\nvar promiseResolve = function (v) {\n  return Promise.resolve(v);\n};\n\nvar supportsConstructibleStylesheets = /*@__PURE__*/function () {\n  try {\n    new CSSStyleSheet();\n    return true;\n  } catch (e) {}\n\n  return false;\n}();\n\nvar addHostEventListeners = function (elm, hostRef, listeners, attachParentListeners) {\n  if (listeners) {\n    listeners.map(function (_a) {\n      var flags = _a[0],\n          name = _a[1],\n          method = _a[2];\n      var target = getHostListenerTarget(elm, flags);\n      var handler = hostListenerProxy(hostRef, method);\n      var opts = hostListenerOpts(flags);\n      plt.ael(target, name, handler, opts);\n      (hostRef.$rmListeners$ = hostRef.$rmListeners$ || []).push(function () {\n        return plt.rel(target, name, handler, opts);\n      });\n    });\n  }\n};\n\nvar hostListenerProxy = function (hostRef, methodName) {\n  return function (ev) {\n    {\n      if (hostRef.$flags$ & 256\n      /* isListenReady */\n      ) {\n          // instance is ready, let's call it's member method for this event\n          hostRef.$lazyInstance$[methodName](ev);\n        } else {\n        (hostRef.$queuedListeners$ = hostRef.$queuedListeners$ || []).push([methodName, ev]);\n      }\n    }\n  };\n};\n\nvar getHostListenerTarget = function (elm, flags) {\n  if (flags & 4\n  /* TargetDocument */\n  ) return doc;\n  if (flags & 8\n  /* TargetWindow */\n  ) return win;\n  if (flags & 32\n  /* TargetBody */\n  ) return doc.body;\n  return elm;\n}; // prettier-ignore\n\n\nvar hostListenerOpts = function (flags) {\n  return (flags & 2\n  /* Capture */\n  ) !== 0;\n};\n\nvar CONTENT_REF_ID = 'r';\nvar ORG_LOCATION_ID = 'o';\nvar SLOT_NODE_ID = 's';\nvar TEXT_NODE_ID = 't';\nvar HYDRATE_ID = 's-id';\nvar HYDRATED_STYLE_ID = 'sty-id';\nvar HYDRATE_CHILD_ID = 'c-id';\nvar HYDRATED_CSS = '{visibility:hidden}.hydrated{visibility:inherit}';\nvar XLINK_NS = 'http://www.w3.org/1999/xlink';\n\nvar createTime = function (fnName, tagName) {\n  if (tagName === void 0) {\n    tagName = '';\n  }\n\n  {\n    return function () {\n      return;\n    };\n  }\n};\n\nvar uniqueTime = function (key, measureText) {\n  {\n    return function () {\n      return;\n    };\n  }\n};\n\nvar rootAppliedStyles = new WeakMap();\n\nvar registerStyle = function (scopeId, cssText, allowCS) {\n  var style = styles.get(scopeId);\n\n  if (supportsConstructibleStylesheets && allowCS) {\n    style = style || new CSSStyleSheet();\n    style.replace(cssText);\n  } else {\n    style = cssText;\n  }\n\n  styles.set(scopeId, style);\n};\n\nvar addStyle = function (styleContainerNode, cmpMeta, mode, hostElm) {\n  var scopeId = getScopeId(cmpMeta, mode);\n  var style = styles.get(scopeId); // if an element is NOT connected then getRootNode() will return the wrong root node\n  // so the fallback is to always use the document for the root node in those cases\n\n  styleContainerNode = styleContainerNode.nodeType === 11\n  /* DocumentFragment */\n  ? styleContainerNode : doc;\n\n  if (style) {\n    if (typeof style === 'string') {\n      styleContainerNode = styleContainerNode.head || styleContainerNode;\n      var appliedStyles = rootAppliedStyles.get(styleContainerNode);\n      var styleElm = void 0;\n\n      if (!appliedStyles) {\n        rootAppliedStyles.set(styleContainerNode, appliedStyles = new Set());\n      }\n\n      if (!appliedStyles.has(scopeId)) {\n        if (styleContainerNode.host && (styleElm = styleContainerNode.querySelector(\"[\" + HYDRATED_STYLE_ID + \"=\\\"\" + scopeId + \"\\\"]\"))) {\n          // This is only happening on native shadow-dom, do not needs CSS var shim\n          styleElm.innerHTML = style;\n        } else {\n          if (plt.$cssShim$) {\n            styleElm = plt.$cssShim$.createHostStyle(hostElm, scopeId, style, !!(cmpMeta.$flags$ & 10\n            /* needsScopedEncapsulation */\n            ));\n            var newScopeId = styleElm['s-sc'];\n\n            if (newScopeId) {\n              scopeId = newScopeId; // we don't want to add this styleID to the appliedStyles Set\n              // since the cssVarShim might need to apply several different\n              // stylesheets for the same component\n\n              appliedStyles = null;\n            }\n          } else {\n            styleElm = doc.createElement('style');\n            styleElm.innerHTML = style;\n          }\n\n          styleContainerNode.insertBefore(styleElm, styleContainerNode.querySelector('link'));\n        }\n\n        if (appliedStyles) {\n          appliedStyles.add(scopeId);\n        }\n      }\n    } else if (!styleContainerNode.adoptedStyleSheets.includes(style)) {\n      styleContainerNode.adoptedStyleSheets = __spreadArrays(styleContainerNode.adoptedStyleSheets, [style]);\n    }\n  }\n\n  return scopeId;\n};\n\nvar attachStyles = function (hostRef) {\n  var cmpMeta = hostRef.$cmpMeta$;\n  var elm = hostRef.$hostElement$;\n  var flags = cmpMeta.$flags$;\n  var endAttachStyles = createTime('attachStyles', cmpMeta.$tagName$);\n  var scopeId = addStyle(supportsShadow && elm.shadowRoot ? elm.shadowRoot : elm.getRootNode(), cmpMeta, hostRef.$modeName$, elm);\n\n  if (flags & 10\n  /* needsScopedEncapsulation */\n  ) {\n      // only required when we're NOT using native shadow dom (slot)\n      // or this browser doesn't support native shadow dom\n      // and this host element was NOT created with SSR\n      // let's pick out the inner content for slot projection\n      // create a node to represent where the original\n      // content was first placed, which is useful later on\n      // DOM WRITE!!\n      elm['s-sc'] = scopeId;\n      elm.classList.add(scopeId + '-h');\n\n      if (flags & 2\n      /* scopedCssEncapsulation */\n      ) {\n          elm.classList.add(scopeId + '-s');\n        }\n    }\n\n  endAttachStyles();\n};\n\nvar getScopeId = function (cmp, mode) {\n  return 'sc-' + (mode && cmp.$flags$ & 32\n  /* hasMode */\n  ? cmp.$tagName$ + '-' + mode : cmp.$tagName$);\n};\n\nvar convertScopedToShadow = function (css) {\n  return css.replace(/\\/\\*!@([^\\/]+)\\*\\/[^\\{]+\\{/g, '$1{');\n}; // Private\n\n\nvar computeMode = function (elm) {\n  return modeResolutionChain.map(function (h) {\n    return h(elm);\n  }).find(function (m) {\n    return !!m;\n  });\n}; // Public\n\n\nvar setMode = function (handler) {\n  return modeResolutionChain.push(handler);\n};\n\nvar getMode = function (ref) {\n  return getHostRef(ref).$modeName$;\n};\n/**\n * Default style mode id\n */\n\n/**\n * Reusable empty obj/array\n * Don't add values to these!!\n */\n\n\nvar EMPTY_OBJ = {};\n/**\n * Namespaces\n */\n\nvar SVG_NS = 'http://www.w3.org/2000/svg';\nvar HTML_NS = 'http://www.w3.org/1999/xhtml';\n\nvar isDef = function (v) {\n  return v != null;\n};\n\nvar noop = function () {\n  /* noop*/\n};\n\nvar isComplexType = function (o) {\n  // https://jsperf.com/typeof-fn-object/5\n  o = typeof o;\n  return o === 'object' || o === 'function';\n};\n\nvar IS_DENO_ENV = typeof Deno !== 'undefined';\nvar IS_NODE_ENV = !IS_DENO_ENV && typeof global !== 'undefined' && typeof require === 'function' && !!global.process && typeof __filename === 'string' && (!global.origin || typeof global.origin !== 'string');\nvar IS_DENO_WINDOWS_ENV = IS_DENO_ENV && Deno.build.os === 'windows';\nvar getCurrentDirectory = IS_NODE_ENV ? process.cwd : IS_DENO_ENV ? Deno.cwd : function () {\n  return '/';\n};\nvar exit = IS_NODE_ENV ? process.exit : IS_DENO_ENV ? Deno.exit : noop;\n/**\n * Production h() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\n// const stack: any[] = [];\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, child?: d.ChildType): d.VNode;\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, ...children: d.ChildType[]): d.VNode;\n\nvar h = function (nodeName, vnodeData) {\n  var children = [];\n\n  for (var _i = 2; _i < arguments.length; _i++) {\n    children[_i - 2] = arguments[_i];\n  }\n\n  var child = null;\n  var key = null;\n  var slotName = null;\n  var simple = false;\n  var lastSimple = false;\n  var vNodeChildren = [];\n\n  var walk = function (c) {\n    for (var i = 0; i < c.length; i++) {\n      child = c[i];\n\n      if (Array.isArray(child)) {\n        walk(child);\n      } else if (child != null && typeof child !== 'boolean') {\n        if (simple = typeof nodeName !== 'function' && !isComplexType(child)) {\n          child = String(child);\n        }\n\n        if (simple && lastSimple) {\n          // If the previous child was simple (string), we merge both\n          vNodeChildren[vNodeChildren.length - 1].$text$ += child;\n        } else {\n          // Append a new vNode, if it's text, we create a text vNode\n          vNodeChildren.push(simple ? newVNode(null, child) : child);\n        }\n\n        lastSimple = simple;\n      }\n    }\n  };\n\n  walk(children);\n\n  if (vnodeData) {\n    // normalize class / classname attributes\n    if (vnodeData.key) {\n      key = vnodeData.key;\n    }\n\n    if (vnodeData.name) {\n      slotName = vnodeData.name;\n    }\n\n    {\n      var classData_1 = vnodeData.className || vnodeData.class;\n\n      if (classData_1) {\n        vnodeData.class = typeof classData_1 !== 'object' ? classData_1 : Object.keys(classData_1).filter(function (k) {\n          return classData_1[k];\n        }).join(' ');\n      }\n    }\n  }\n\n  if (typeof nodeName === 'function') {\n    // nodeName is a functional component\n    return nodeName(vnodeData === null ? {} : vnodeData, vNodeChildren, vdomFnUtils);\n  }\n\n  var vnode = newVNode(nodeName, null);\n  vnode.$attrs$ = vnodeData;\n\n  if (vNodeChildren.length > 0) {\n    vnode.$children$ = vNodeChildren;\n  }\n\n  {\n    vnode.$key$ = key;\n  }\n  {\n    vnode.$name$ = slotName;\n  }\n  return vnode;\n};\n\nvar newVNode = function (tag, text) {\n  var vnode = {\n    $flags$: 0,\n    $tag$: tag,\n    $text$: text,\n    $elm$: null,\n    $children$: null\n  };\n  {\n    vnode.$attrs$ = null;\n  }\n  {\n    vnode.$key$ = null;\n  }\n  {\n    vnode.$name$ = null;\n  }\n  return vnode;\n};\n\nvar Host = {};\n\nvar isHost = function (node) {\n  return node && node.$tag$ === Host;\n};\n\nvar vdomFnUtils = {\n  forEach: function (children, cb) {\n    return children.map(convertToPublic).forEach(cb);\n  },\n  map: function (children, cb) {\n    return children.map(convertToPublic).map(cb).map(convertToPrivate);\n  }\n};\n\nvar convertToPublic = function (node) {\n  return {\n    vattrs: node.$attrs$,\n    vchildren: node.$children$,\n    vkey: node.$key$,\n    vname: node.$name$,\n    vtag: node.$tag$,\n    vtext: node.$text$\n  };\n};\n\nvar convertToPrivate = function (node) {\n  if (typeof node.vtag === 'function') {\n    var vnodeData = Object.assign({}, node.vattrs);\n\n    if (node.vkey) {\n      vnodeData.key = node.vkey;\n    }\n\n    if (node.vname) {\n      vnodeData.name = node.vname;\n    }\n\n    return h.apply(void 0, __spreadArrays([node.vtag, vnodeData], node.vchildren || []));\n  }\n\n  var vnode = newVNode(node.vtag, node.vtext);\n  vnode.$attrs$ = node.vattrs;\n  vnode.$children$ = node.vchildren;\n  vnode.$key$ = node.vkey;\n  vnode.$name$ = node.vname;\n  return vnode;\n};\n/**\n * Production setAccessor() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\n\n\nvar setAccessor = function (elm, memberName, oldValue, newValue, isSvg, flags) {\n  if (oldValue !== newValue) {\n    var isProp = isMemberInElement(elm, memberName);\n    var ln = memberName.toLowerCase();\n\n    if (memberName === 'class') {\n      var classList = elm.classList;\n      var oldClasses_1 = parseClassList(oldValue);\n      var newClasses_1 = parseClassList(newValue);\n      classList.remove.apply(classList, oldClasses_1.filter(function (c) {\n        return c && !newClasses_1.includes(c);\n      }));\n      classList.add.apply(classList, newClasses_1.filter(function (c) {\n        return c && !oldClasses_1.includes(c);\n      }));\n    } else if (memberName === 'style') {\n      // update style attribute, css properties and values\n      {\n        for (var prop in oldValue) {\n          if (!newValue || newValue[prop] == null) {\n            if (prop.includes('-')) {\n              elm.style.removeProperty(prop);\n            } else {\n              elm.style[prop] = '';\n            }\n          }\n        }\n      }\n\n      for (var prop in newValue) {\n        if (!oldValue || newValue[prop] !== oldValue[prop]) {\n          if (prop.includes('-')) {\n            elm.style.setProperty(prop, newValue[prop]);\n          } else {\n            elm.style[prop] = newValue[prop];\n          }\n        }\n      }\n    } else if (memberName === 'key') ;else if (memberName === 'ref') {\n      // minifier will clean this up\n      if (newValue) {\n        newValue(elm);\n      }\n    } else if (!isProp && memberName[0] === 'o' && memberName[1] === 'n') {\n      // Event Handlers\n      // so if the member name starts with \"on\" and the 3rd characters is\n      // a capital letter, and it's not already a member on the element,\n      // then we're assuming it's an event listener\n      if (memberName[2] === '-') {\n        // on- prefixed events\n        // allows to be explicit about the dom event to listen without any magic\n        // under the hood:\n        // <my-cmp on-click> // listens for \"click\"\n        // <my-cmp on-Click> // listens for \"Click\"\n        // <my-cmp on-ionChange> // listens for \"ionChange\"\n        // <my-cmp on-EVENTS> // listens for \"EVENTS\"\n        memberName = memberName.slice(3);\n      } else if (isMemberInElement(win, ln)) {\n        // standard event\n        // the JSX attribute could have been \"onMouseOver\" and the\n        // member name \"onmouseover\" is on the window's prototype\n        // so let's add the listener \"mouseover\", which is all lowercased\n        memberName = ln.slice(2);\n      } else {\n        // custom event\n        // the JSX attribute could have been \"onMyCustomEvent\"\n        // so let's trim off the \"on\" prefix and lowercase the first character\n        // and add the listener \"myCustomEvent\"\n        // except for the first character, we keep the event name case\n        memberName = ln[2] + memberName.slice(3);\n      }\n\n      if (oldValue) {\n        plt.rel(elm, memberName, oldValue, false);\n      }\n\n      if (newValue) {\n        plt.ael(elm, memberName, newValue, false);\n      }\n    } else {\n      // Set property if it exists and it's not a SVG\n      var isComplex = isComplexType(newValue);\n\n      if ((isProp || isComplex && newValue !== null) && !isSvg) {\n        try {\n          if (!elm.tagName.includes('-')) {\n            var n = newValue == null ? '' : newValue; // Workaround for Safari, moving the <input> caret when re-assigning the same valued\n\n            if (memberName === 'list') {\n              isProp = false; // tslint:disable-next-line: triple-equals\n            } else if (oldValue == null || elm[memberName] != n) {\n              elm[memberName] = n;\n            }\n          } else {\n            elm[memberName] = newValue;\n          }\n        } catch (e) {}\n      }\n      /**\n       * Need to manually update attribute if:\n       * - memberName is not an attribute\n       * - if we are rendering the host element in order to reflect attribute\n       * - if it's a SVG, since properties might not work in <svg>\n       * - if the newValue is null/undefined or 'false'.\n       */\n\n\n      var xlink = false;\n      {\n        if (ln !== (ln = ln.replace(/^xlink\\:?/, ''))) {\n          memberName = ln;\n          xlink = true;\n        }\n      }\n\n      if (newValue == null || newValue === false) {\n        if (newValue !== false || elm.getAttribute(memberName) === '') {\n          if (xlink) {\n            elm.removeAttributeNS(XLINK_NS, memberName);\n          } else {\n            elm.removeAttribute(memberName);\n          }\n        }\n      } else if ((!isProp || flags & 4\n      /* isHost */\n      || isSvg) && !isComplex) {\n        newValue = newValue === true ? '' : newValue;\n\n        if (xlink) {\n          elm.setAttributeNS(XLINK_NS, memberName, newValue);\n        } else {\n          elm.setAttribute(memberName, newValue);\n        }\n      }\n    }\n  }\n};\n\nvar parseClassListRegex = /\\s/;\n\nvar parseClassList = function (value) {\n  return !value ? [] : value.split(parseClassListRegex);\n};\n\nvar updateElement = function (oldVnode, newVnode, isSvgMode, memberName) {\n  // if the element passed in is a shadow root, which is a document fragment\n  // then we want to be adding attrs/props to the shadow root's \"host\" element\n  // if it's not a shadow root, then we add attrs/props to the same element\n  var elm = newVnode.$elm$.nodeType === 11\n  /* DocumentFragment */\n  && newVnode.$elm$.host ? newVnode.$elm$.host : newVnode.$elm$;\n  var oldVnodeAttrs = oldVnode && oldVnode.$attrs$ || EMPTY_OBJ;\n  var newVnodeAttrs = newVnode.$attrs$ || EMPTY_OBJ;\n  {\n    // remove attributes no longer present on the vnode by setting them to undefined\n    for (memberName in oldVnodeAttrs) {\n      if (!(memberName in newVnodeAttrs)) {\n        setAccessor(elm, memberName, oldVnodeAttrs[memberName], undefined, isSvgMode, newVnode.$flags$);\n      }\n    }\n  } // add new & update changed attributes\n\n  for (memberName in newVnodeAttrs) {\n    setAccessor(elm, memberName, oldVnodeAttrs[memberName], newVnodeAttrs[memberName], isSvgMode, newVnode.$flags$);\n  }\n};\n\nvar createElm = function (oldParentVNode, newParentVNode, childIndex, parentElm) {\n  // tslint:disable-next-line: prefer-const\n  var newVNode = newParentVNode.$children$[childIndex];\n  var i = 0;\n  var elm;\n  var childNode;\n  var oldVNode;\n\n  if (!useNativeShadowDom) {\n    // remember for later we need to check to relocate nodes\n    checkSlotRelocate = true;\n\n    if (newVNode.$tag$ === 'slot') {\n      if (scopeId) {\n        // scoped css needs to add its scoped id to the parent element\n        parentElm.classList.add(scopeId + '-s');\n      }\n\n      newVNode.$flags$ |= newVNode.$children$ ? // slot element has fallback content\n      2\n      /* isSlotFallback */\n      : // slot element does not have fallback content\n      1\n      /* isSlotReference */\n      ;\n    }\n  }\n\n  if (newVNode.$text$ !== null) {\n    // create text node\n    elm = newVNode.$elm$ = doc.createTextNode(newVNode.$text$);\n  } else if (newVNode.$flags$ & 1\n  /* isSlotReference */\n  ) {\n      // create a slot reference node\n      elm = newVNode.$elm$ = doc.createTextNode('');\n    } else {\n    if (!isSvgMode) {\n      isSvgMode = newVNode.$tag$ === 'svg';\n    } // create element\n\n\n    elm = newVNode.$elm$ = doc.createElementNS(isSvgMode ? SVG_NS : HTML_NS, newVNode.$flags$ & 2\n    /* isSlotFallback */\n    ? 'slot-fb' : newVNode.$tag$);\n\n    if (isSvgMode && newVNode.$tag$ === 'foreignObject') {\n      isSvgMode = false;\n    } // add css classes, attrs, props, listeners, etc.\n\n\n    {\n      updateElement(null, newVNode, isSvgMode);\n    }\n\n    if (isDef(scopeId) && elm['s-si'] !== scopeId) {\n      // if there is a scopeId and this is the initial render\n      // then let's add the scopeId as a css class\n      elm.classList.add(elm['s-si'] = scopeId);\n    }\n\n    if (newVNode.$children$) {\n      for (i = 0; i < newVNode.$children$.length; ++i) {\n        // create the node\n        childNode = createElm(oldParentVNode, newVNode, i, elm); // return node could have been null\n\n        if (childNode) {\n          // append our new node\n          elm.appendChild(childNode);\n        }\n      }\n    }\n\n    {\n      if (newVNode.$tag$ === 'svg') {\n        // Only reset the SVG context when we're exiting <svg> element\n        isSvgMode = false;\n      } else if (elm.tagName === 'foreignObject') {\n        // Reenter SVG context when we're exiting <foreignObject> element\n        isSvgMode = true;\n      }\n    }\n  }\n\n  {\n    elm['s-hn'] = hostTagName;\n\n    if (newVNode.$flags$ & (2\n    /* isSlotFallback */\n    | 1\n    /* isSlotReference */\n    )) {\n      // remember the content reference comment\n      elm['s-sr'] = true; // remember the content reference comment\n\n      elm['s-cr'] = contentRef; // remember the slot name, or empty string for default slot\n\n      elm['s-sn'] = newVNode.$name$ || ''; // check if we've got an old vnode for this slot\n\n      oldVNode = oldParentVNode && oldParentVNode.$children$ && oldParentVNode.$children$[childIndex];\n\n      if (oldVNode && oldVNode.$tag$ === newVNode.$tag$ && oldParentVNode.$elm$) {\n        // we've got an old slot vnode and the wrapper is being replaced\n        // so let's move the old slot content back to it's original location\n        putBackInOriginalLocation(oldParentVNode.$elm$, false);\n      }\n    }\n  }\n  return elm;\n};\n\nvar putBackInOriginalLocation = function (parentElm, recursive) {\n  plt.$flags$ |= 1\n  /* isTmpDisconnected */\n  ;\n  var oldSlotChildNodes = parentElm.childNodes;\n\n  for (var i = oldSlotChildNodes.length - 1; i >= 0; i--) {\n    var childNode = oldSlotChildNodes[i];\n\n    if (childNode['s-hn'] !== hostTagName && childNode['s-ol']) {\n      // // this child node in the old element is from another component\n      // // remove this node from the old slot's parent\n      // childNode.remove();\n      // and relocate it back to it's original location\n      parentReferenceNode(childNode).insertBefore(childNode, referenceNode(childNode)); // remove the old original location comment entirely\n      // later on the patch function will know what to do\n      // and move this to the correct spot in need be\n\n      childNode['s-ol'].remove();\n      childNode['s-ol'] = undefined;\n      checkSlotRelocate = true;\n    }\n\n    if (recursive) {\n      putBackInOriginalLocation(childNode, recursive);\n    }\n  }\n\n  plt.$flags$ &= ~1\n  /* isTmpDisconnected */\n  ;\n};\n\nvar addVnodes = function (parentElm, before, parentVNode, vnodes, startIdx, endIdx) {\n  var containerElm = parentElm['s-cr'] && parentElm['s-cr'].parentNode || parentElm;\n  var childNode;\n\n  if (containerElm.shadowRoot && containerElm.tagName === hostTagName) {\n    containerElm = containerElm.shadowRoot;\n  }\n\n  for (; startIdx <= endIdx; ++startIdx) {\n    if (vnodes[startIdx]) {\n      childNode = createElm(null, parentVNode, startIdx, parentElm);\n\n      if (childNode) {\n        vnodes[startIdx].$elm$ = childNode;\n        containerElm.insertBefore(childNode, referenceNode(before));\n      }\n    }\n  }\n};\n\nvar removeVnodes = function (vnodes, startIdx, endIdx, vnode, elm) {\n  for (; startIdx <= endIdx; ++startIdx) {\n    if (vnode = vnodes[startIdx]) {\n      elm = vnode.$elm$;\n      callNodeRefs(vnode);\n      {\n        // we're removing this element\n        // so it's possible we need to show slot fallback content now\n        checkSlotFallbackVisibility = true;\n\n        if (elm['s-ol']) {\n          // remove the original location comment\n          elm['s-ol'].remove();\n        } else {\n          // it's possible that child nodes of the node\n          // that's being removed are slot nodes\n          putBackInOriginalLocation(elm, true);\n        }\n      } // remove the vnode's element from the dom\n\n      elm.remove();\n    }\n  }\n};\n\nvar updateChildren = function (parentElm, oldCh, newVNode, newCh) {\n  var oldStartIdx = 0;\n  var newStartIdx = 0;\n  var idxInOld = 0;\n  var i = 0;\n  var oldEndIdx = oldCh.length - 1;\n  var oldStartVnode = oldCh[0];\n  var oldEndVnode = oldCh[oldEndIdx];\n  var newEndIdx = newCh.length - 1;\n  var newStartVnode = newCh[0];\n  var newEndVnode = newCh[newEndIdx];\n  var node;\n  var elmToMove;\n\n  while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n    if (oldStartVnode == null) {\n      // Vnode might have been moved left\n      oldStartVnode = oldCh[++oldStartIdx];\n    } else if (oldEndVnode == null) {\n      oldEndVnode = oldCh[--oldEndIdx];\n    } else if (newStartVnode == null) {\n      newStartVnode = newCh[++newStartIdx];\n    } else if (newEndVnode == null) {\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldStartVnode, newStartVnode)) {\n      patch(oldStartVnode, newStartVnode);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else if (isSameVnode(oldEndVnode, newEndVnode)) {\n      patch(oldEndVnode, newEndVnode);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldStartVnode, newEndVnode)) {\n      // Vnode moved right\n      if (oldStartVnode.$tag$ === 'slot' || newEndVnode.$tag$ === 'slot') {\n        putBackInOriginalLocation(oldStartVnode.$elm$.parentNode, false);\n      }\n\n      patch(oldStartVnode, newEndVnode);\n      parentElm.insertBefore(oldStartVnode.$elm$, oldEndVnode.$elm$.nextSibling);\n      oldStartVnode = oldCh[++oldStartIdx];\n      newEndVnode = newCh[--newEndIdx];\n    } else if (isSameVnode(oldEndVnode, newStartVnode)) {\n      // Vnode moved left\n      if (oldStartVnode.$tag$ === 'slot' || newEndVnode.$tag$ === 'slot') {\n        putBackInOriginalLocation(oldEndVnode.$elm$.parentNode, false);\n      }\n\n      patch(oldEndVnode, newStartVnode);\n      parentElm.insertBefore(oldEndVnode.$elm$, oldStartVnode.$elm$);\n      oldEndVnode = oldCh[--oldEndIdx];\n      newStartVnode = newCh[++newStartIdx];\n    } else {\n      // createKeyToOldIdx\n      idxInOld = -1;\n      {\n        for (i = oldStartIdx; i <= oldEndIdx; ++i) {\n          if (oldCh[i] && oldCh[i].$key$ !== null && oldCh[i].$key$ === newStartVnode.$key$) {\n            idxInOld = i;\n            break;\n          }\n        }\n      }\n\n      if (idxInOld >= 0) {\n        elmToMove = oldCh[idxInOld];\n\n        if (elmToMove.$tag$ !== newStartVnode.$tag$) {\n          node = createElm(oldCh && oldCh[newStartIdx], newVNode, idxInOld, parentElm);\n        } else {\n          patch(elmToMove, newStartVnode);\n          oldCh[idxInOld] = undefined;\n          node = elmToMove.$elm$;\n        }\n\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        // new element\n        node = createElm(oldCh && oldCh[newStartIdx], newVNode, newStartIdx, parentElm);\n        newStartVnode = newCh[++newStartIdx];\n      }\n\n      if (node) {\n        {\n          parentReferenceNode(oldStartVnode.$elm$).insertBefore(node, referenceNode(oldStartVnode.$elm$));\n        }\n      }\n    }\n  }\n\n  if (oldStartIdx > oldEndIdx) {\n    addVnodes(parentElm, newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].$elm$, newVNode, newCh, newStartIdx, newEndIdx);\n  } else if (newStartIdx > newEndIdx) {\n    removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n  }\n};\n\nvar isSameVnode = function (vnode1, vnode2) {\n  // compare if two vnode to see if they're \"technically\" the same\n  // need to have the same element tag, and same key to be the same\n  if (vnode1.$tag$ === vnode2.$tag$) {\n    if (vnode1.$tag$ === 'slot') {\n      return vnode1.$name$ === vnode2.$name$;\n    }\n\n    {\n      return vnode1.$key$ === vnode2.$key$;\n    }\n  }\n\n  return false;\n};\n\nvar referenceNode = function (node) {\n  // this node was relocated to a new location in the dom\n  // because of some other component's slot\n  // but we still have an html comment in place of where\n  // it's original location was according to it's original vdom\n  return node && node['s-ol'] || node;\n};\n\nvar parentReferenceNode = function (node) {\n  return (node['s-ol'] ? node['s-ol'] : node).parentNode;\n};\n\nvar patch = function (oldVNode, newVNode) {\n  var elm = newVNode.$elm$ = oldVNode.$elm$;\n  var oldChildren = oldVNode.$children$;\n  var newChildren = newVNode.$children$;\n  var tag = newVNode.$tag$;\n  var text = newVNode.$text$;\n  var defaultHolder;\n\n  if (text === null) {\n    {\n      // test if we're rendering an svg element, or still rendering nodes inside of one\n      // only add this to the when the compiler sees we're using an svg somewhere\n      isSvgMode = tag === 'svg' ? true : tag === 'foreignObject' ? false : isSvgMode;\n    } // element node\n\n    {\n      if (tag === 'slot') ;else {\n        // either this is the first render of an element OR it's an update\n        // AND we already know it's possible it could have changed\n        // this updates the element's css classes, attrs, props, listeners, etc.\n        updateElement(oldVNode, newVNode, isSvgMode);\n      }\n    }\n\n    if (oldChildren !== null && newChildren !== null) {\n      // looks like there's child vnodes for both the old and new vnodes\n      updateChildren(elm, oldChildren, newVNode, newChildren);\n    } else if (newChildren !== null) {\n      // no old child vnodes, but there are new child vnodes to add\n      if (oldVNode.$text$ !== null) {\n        // the old vnode was text, so be sure to clear it out\n        elm.textContent = '';\n      } // add the new vnode children\n\n\n      addVnodes(elm, null, newVNode, newChildren, 0, newChildren.length - 1);\n    } else if (oldChildren !== null) {\n      // no new child vnodes, but there are old child vnodes to remove\n      removeVnodes(oldChildren, 0, oldChildren.length - 1);\n    }\n\n    if (isSvgMode && tag === 'svg') {\n      isSvgMode = false;\n    }\n  } else if (defaultHolder = elm['s-cr']) {\n    // this element has slotted content\n    defaultHolder.parentNode.textContent = text;\n  } else if (oldVNode.$text$ !== text) {\n    // update the text content for the text only vnode\n    // and also only if the text is different than before\n    elm.data = text;\n  }\n};\n\nvar updateFallbackSlotVisibility = function (elm) {\n  // tslint:disable-next-line: prefer-const\n  var childNodes = elm.childNodes;\n  var childNode;\n  var i;\n  var ilen;\n  var j;\n  var slotNameAttr;\n  var nodeType;\n\n  for (i = 0, ilen = childNodes.length; i < ilen; i++) {\n    childNode = childNodes[i];\n\n    if (childNode.nodeType === 1\n    /* ElementNode */\n    ) {\n        if (childNode['s-sr']) {\n          // this is a slot fallback node\n          // get the slot name for this slot reference node\n          slotNameAttr = childNode['s-sn']; // by default always show a fallback slot node\n          // then hide it if there are other slots in the light dom\n\n          childNode.hidden = false;\n\n          for (j = 0; j < ilen; j++) {\n            if (childNodes[j]['s-hn'] !== childNode['s-hn']) {\n              // this sibling node is from a different component\n              nodeType = childNodes[j].nodeType;\n\n              if (slotNameAttr !== '') {\n                // this is a named fallback slot node\n                if (nodeType === 1\n                /* ElementNode */\n                && slotNameAttr === childNodes[j].getAttribute('slot')) {\n                  childNode.hidden = true;\n                  break;\n                }\n              } else {\n                // this is a default fallback slot node\n                // any element or text node (with content)\n                // should hide the default fallback slot node\n                if (nodeType === 1\n                /* ElementNode */\n                || nodeType === 3\n                /* TextNode */\n                && childNodes[j].textContent.trim() !== '') {\n                  childNode.hidden = true;\n                  break;\n                }\n              }\n            }\n          }\n        } // keep drilling down\n\n\n        updateFallbackSlotVisibility(childNode);\n      }\n  }\n};\n\nvar relocateNodes = [];\n\nvar relocateSlotContent = function (elm) {\n  // tslint:disable-next-line: prefer-const\n  var childNode;\n  var node;\n  var hostContentNodes;\n  var slotNameAttr;\n  var relocateNodeData;\n  var j;\n  var i = 0;\n  var childNodes = elm.childNodes;\n  var ilen = childNodes.length;\n\n  for (; i < ilen; i++) {\n    childNode = childNodes[i];\n\n    if (childNode['s-sr'] && (node = childNode['s-cr'])) {\n      // first got the content reference comment node\n      // then we got it's parent, which is where all the host content is in now\n      hostContentNodes = node.parentNode.childNodes;\n      slotNameAttr = childNode['s-sn'];\n\n      for (j = hostContentNodes.length - 1; j >= 0; j--) {\n        node = hostContentNodes[j];\n\n        if (!node['s-cn'] && !node['s-nr'] && node['s-hn'] !== childNode['s-hn']) {\n          // let's do some relocating to its new home\n          // but never relocate a content reference node\n          // that is suppose to always represent the original content location\n          if (isNodeLocatedInSlot(node, slotNameAttr)) {\n            // it's possible we've already decided to relocate this node\n            relocateNodeData = relocateNodes.find(function (r) {\n              return r.$nodeToRelocate$ === node;\n            }); // made some changes to slots\n            // let's make sure we also double check\n            // fallbacks are correctly hidden or shown\n\n            checkSlotFallbackVisibility = true;\n            node['s-sn'] = node['s-sn'] || slotNameAttr;\n\n            if (relocateNodeData) {\n              // previously we never found a slot home for this node\n              // but turns out we did, so let's remember it now\n              relocateNodeData.$slotRefNode$ = childNode;\n            } else {\n              // add to our list of nodes to relocate\n              relocateNodes.push({\n                $slotRefNode$: childNode,\n                $nodeToRelocate$: node\n              });\n            }\n\n            if (node['s-sr']) {\n              relocateNodes.map(function (relocateNode) {\n                if (isNodeLocatedInSlot(relocateNode.$nodeToRelocate$, node['s-sn'])) {\n                  relocateNodeData = relocateNodes.find(function (r) {\n                    return r.$nodeToRelocate$ === node;\n                  });\n\n                  if (relocateNodeData && !relocateNode.$slotRefNode$) {\n                    relocateNode.$slotRefNode$ = relocateNodeData.$slotRefNode$;\n                  }\n                }\n              });\n            }\n          } else if (!relocateNodes.some(function (r) {\n            return r.$nodeToRelocate$ === node;\n          })) {\n            // so far this element does not have a slot home, not setting slotRefNode on purpose\n            // if we never find a home for this element then we'll need to hide it\n            relocateNodes.push({\n              $nodeToRelocate$: node\n            });\n          }\n        }\n      }\n    }\n\n    if (childNode.nodeType === 1\n    /* ElementNode */\n    ) {\n        relocateSlotContent(childNode);\n      }\n  }\n};\n\nvar isNodeLocatedInSlot = function (nodeToRelocate, slotNameAttr) {\n  if (nodeToRelocate.nodeType === 1\n  /* ElementNode */\n  ) {\n      if (nodeToRelocate.getAttribute('slot') === null && slotNameAttr === '') {\n        return true;\n      }\n\n      if (nodeToRelocate.getAttribute('slot') === slotNameAttr) {\n        return true;\n      }\n\n      return false;\n    }\n\n  if (nodeToRelocate['s-sn'] === slotNameAttr) {\n    return true;\n  }\n\n  return slotNameAttr === '';\n};\n\nvar callNodeRefs = function (vNode) {\n  {\n    vNode.$attrs$ && vNode.$attrs$.ref && vNode.$attrs$.ref(null);\n    vNode.$children$ && vNode.$children$.map(callNodeRefs);\n  }\n};\n\nvar renderVdom = function (hostRef, renderFnResults) {\n  var hostElm = hostRef.$hostElement$;\n  var cmpMeta = hostRef.$cmpMeta$;\n  var oldVNode = hostRef.$vnode$ || newVNode(null, null);\n  var rootVnode = isHost(renderFnResults) ? renderFnResults : h(null, null, renderFnResults);\n  hostTagName = hostElm.tagName;\n\n  if (cmpMeta.$attrsToReflect$) {\n    rootVnode.$attrs$ = rootVnode.$attrs$ || {};\n    cmpMeta.$attrsToReflect$.map(function (_a) {\n      var propName = _a[0],\n          attribute = _a[1];\n      return rootVnode.$attrs$[attribute] = hostElm[propName];\n    });\n  }\n\n  rootVnode.$tag$ = null;\n  rootVnode.$flags$ |= 4\n  /* isHost */\n  ;\n  hostRef.$vnode$ = rootVnode;\n  rootVnode.$elm$ = oldVNode.$elm$ = hostElm.shadowRoot || hostElm;\n  {\n    scopeId = hostElm['s-sc'];\n  }\n  {\n    contentRef = hostElm['s-cr'];\n    useNativeShadowDom = supportsShadow && (cmpMeta.$flags$ & 1\n    /* shadowDomEncapsulation */\n    ) !== 0; // always reset\n\n    checkSlotFallbackVisibility = false;\n  } // synchronous patch\n\n  patch(oldVNode, rootVnode);\n  {\n    // while we're moving nodes around existing nodes, temporarily disable\n    // the disconnectCallback from working\n    plt.$flags$ |= 1\n    /* isTmpDisconnected */\n    ;\n\n    if (checkSlotRelocate) {\n      relocateSlotContent(rootVnode.$elm$);\n      var relocateData = void 0;\n      var nodeToRelocate = void 0;\n      var orgLocationNode = void 0;\n      var parentNodeRef = void 0;\n      var insertBeforeNode = void 0;\n      var refNode = void 0;\n      var i = 0;\n\n      for (; i < relocateNodes.length; i++) {\n        relocateData = relocateNodes[i];\n        nodeToRelocate = relocateData.$nodeToRelocate$;\n\n        if (!nodeToRelocate['s-ol']) {\n          // add a reference node marking this node's original location\n          // keep a reference to this node for later lookups\n          orgLocationNode = doc.createTextNode('');\n          orgLocationNode['s-nr'] = nodeToRelocate;\n          nodeToRelocate.parentNode.insertBefore(nodeToRelocate['s-ol'] = orgLocationNode, nodeToRelocate);\n        }\n      }\n\n      for (i = 0; i < relocateNodes.length; i++) {\n        relocateData = relocateNodes[i];\n        nodeToRelocate = relocateData.$nodeToRelocate$;\n\n        if (relocateData.$slotRefNode$) {\n          // by default we're just going to insert it directly\n          // after the slot reference node\n          parentNodeRef = relocateData.$slotRefNode$.parentNode;\n          insertBeforeNode = relocateData.$slotRefNode$.nextSibling;\n          orgLocationNode = nodeToRelocate['s-ol'];\n\n          while (orgLocationNode = orgLocationNode.previousSibling) {\n            refNode = orgLocationNode['s-nr'];\n\n            if (refNode && refNode['s-sn'] === nodeToRelocate['s-sn'] && parentNodeRef === refNode.parentNode) {\n              refNode = refNode.nextSibling;\n\n              if (!refNode || !refNode['s-nr']) {\n                insertBeforeNode = refNode;\n                break;\n              }\n            }\n          }\n\n          if (!insertBeforeNode && parentNodeRef !== nodeToRelocate.parentNode || nodeToRelocate.nextSibling !== insertBeforeNode) {\n            // we've checked that it's worth while to relocate\n            // since that the node to relocate\n            // has a different next sibling or parent relocated\n            if (nodeToRelocate !== insertBeforeNode) {\n              if (!nodeToRelocate['s-hn'] && nodeToRelocate['s-ol']) {\n                // probably a component in the index.html that doesn't have it's hostname set\n                nodeToRelocate['s-hn'] = nodeToRelocate['s-ol'].parentNode.nodeName;\n              } // add it back to the dom but in its new home\n\n\n              parentNodeRef.insertBefore(nodeToRelocate, insertBeforeNode);\n            }\n          }\n        } else {\n          // this node doesn't have a slot home to go to, so let's hide it\n          if (nodeToRelocate.nodeType === 1\n          /* ElementNode */\n          ) {\n              nodeToRelocate.hidden = true;\n            }\n        }\n      }\n    }\n\n    if (checkSlotFallbackVisibility) {\n      updateFallbackSlotVisibility(rootVnode.$elm$);\n    } // done moving nodes around\n    // allow the disconnect callback to work again\n\n\n    plt.$flags$ &= ~1\n    /* isTmpDisconnected */\n    ; // always reset\n\n    relocateNodes.length = 0;\n  }\n};\n\nvar getElement = function (ref) {\n  return getHostRef(ref).$hostElement$;\n};\n\nvar createEvent = function (ref, name, flags) {\n  var elm = getElement(ref);\n  return {\n    emit: function (detail) {\n      return emitEvent(elm, name, {\n        bubbles: !!(flags & 4\n        /* Bubbles */\n        ),\n        composed: !!(flags & 2\n        /* Composed */\n        ),\n        cancelable: !!(flags & 1\n        /* Cancellable */\n        ),\n        detail: detail\n      });\n    }\n  };\n};\n\nvar emitEvent = function (elm, name, opts) {\n  var ev = plt.ce(name, opts);\n  elm.dispatchEvent(ev);\n  return ev;\n};\n\nvar attachToAncestor = function (hostRef, ancestorComponent) {\n  if (ancestorComponent && !hostRef.$onRenderResolve$ && ancestorComponent['s-p']) {\n    ancestorComponent['s-p'].push(new Promise(function (r) {\n      return hostRef.$onRenderResolve$ = r;\n    }));\n  }\n};\n\nvar scheduleUpdate = function (hostRef, isInitialLoad) {\n  {\n    hostRef.$flags$ |= 16\n    /* isQueuedForUpdate */\n    ;\n  }\n\n  if (hostRef.$flags$ & 4\n  /* isWaitingForChildren */\n  ) {\n      hostRef.$flags$ |= 512\n      /* needsRerender */\n      ;\n      return;\n    }\n\n  attachToAncestor(hostRef, hostRef.$ancestorComponent$); // there is no ancestorc omponent or the ancestor component\n  // has already fired off its lifecycle update then\n  // fire off the initial update\n\n  var dispatch = function () {\n    return dispatchHooks(hostRef, isInitialLoad);\n  };\n\n  return writeTask(dispatch);\n};\n\nvar dispatchHooks = function (hostRef, isInitialLoad) {\n  var endSchedule = createTime('scheduleUpdate', hostRef.$cmpMeta$.$tagName$);\n  var instance = hostRef.$lazyInstance$;\n  var promise;\n\n  if (isInitialLoad) {\n    {\n      hostRef.$flags$ |= 256\n      /* isListenReady */\n      ;\n\n      if (hostRef.$queuedListeners$) {\n        hostRef.$queuedListeners$.map(function (_a) {\n          var methodName = _a[0],\n              event = _a[1];\n          return safeCall(instance, methodName, event);\n        });\n        hostRef.$queuedListeners$ = null;\n      }\n    }\n    {\n      promise = safeCall(instance, 'componentWillLoad');\n    }\n  }\n\n  {\n    promise = then(promise, function () {\n      return safeCall(instance, 'componentWillRender');\n    });\n  }\n  endSchedule();\n  return then(promise, function () {\n    return updateComponent(hostRef, instance, isInitialLoad);\n  });\n};\n\nvar updateComponent = function (hostRef, instance, isInitialLoad) {\n  // updateComponent\n  var elm = hostRef.$hostElement$;\n  var endUpdate = createTime('update', hostRef.$cmpMeta$.$tagName$);\n  var rc = elm['s-rc'];\n\n  if (isInitialLoad) {\n    // DOM WRITE!\n    attachStyles(hostRef);\n  }\n\n  var endRender = createTime('render', hostRef.$cmpMeta$.$tagName$);\n  {\n    {\n      // looks like we've got child nodes to render into this host element\n      // or we need to update the css class/attrs on the host element\n      // DOM WRITE!\n      renderVdom(hostRef, callRender(hostRef, instance));\n    }\n  }\n\n  if (plt.$cssShim$) {\n    plt.$cssShim$.updateHost(elm);\n  }\n\n  if (rc) {\n    // ok, so turns out there are some child host elements\n    // waiting on this parent element to load\n    // let's fire off all update callbacks waiting\n    rc.map(function (cb) {\n      return cb();\n    });\n    elm['s-rc'] = undefined;\n  }\n\n  endRender();\n  endUpdate();\n  {\n    var childrenPromises = elm['s-p'];\n\n    var postUpdate = function () {\n      return postUpdateComponent(hostRef);\n    };\n\n    if (childrenPromises.length === 0) {\n      postUpdate();\n    } else {\n      Promise.all(childrenPromises).then(postUpdate);\n      hostRef.$flags$ |= 4\n      /* isWaitingForChildren */\n      ;\n      childrenPromises.length = 0;\n    }\n  }\n};\n\nvar callRender = function (hostRef, instance) {\n  try {\n    instance = instance.render && instance.render();\n    {\n      hostRef.$flags$ &= ~16\n      /* isQueuedForUpdate */\n      ;\n    }\n    {\n      hostRef.$flags$ |= 2\n      /* hasRendered */\n      ;\n    }\n  } catch (e) {\n    consoleError(e);\n  }\n\n  return instance;\n};\n\nvar postUpdateComponent = function (hostRef) {\n  var tagName = hostRef.$cmpMeta$.$tagName$;\n  var elm = hostRef.$hostElement$;\n  var endPostUpdate = createTime('postUpdate', tagName);\n  var instance = hostRef.$lazyInstance$;\n  var ancestorComponent = hostRef.$ancestorComponent$;\n\n  if (!(hostRef.$flags$ & 64\n  /* hasLoadedComponent */\n  )) {\n    hostRef.$flags$ |= 64\n    /* hasLoadedComponent */\n    ;\n    {\n      // DOM WRITE!\n      addHydratedFlag(elm);\n    }\n    {\n      safeCall(instance, 'componentDidLoad');\n    }\n    endPostUpdate();\n    {\n      hostRef.$onReadyResolve$(elm);\n\n      if (!ancestorComponent) {\n        appDidLoad();\n      }\n    }\n  } else {\n    {\n      safeCall(instance, 'componentDidUpdate');\n    }\n    endPostUpdate();\n  }\n\n  {\n    hostRef.$onInstanceResolve$(elm);\n  } // load events fire from bottom to top\n  // the deepest elements load first then bubbles up\n\n  {\n    if (hostRef.$onRenderResolve$) {\n      hostRef.$onRenderResolve$();\n      hostRef.$onRenderResolve$ = undefined;\n    }\n\n    if (hostRef.$flags$ & 512\n    /* needsRerender */\n    ) {\n        nextTick(function () {\n          return scheduleUpdate(hostRef, false);\n        });\n      }\n\n    hostRef.$flags$ &= ~(4\n    /* isWaitingForChildren */\n    | 512\n    /* needsRerender */\n    );\n  } // ( •_•)\n  // ( •_•)>⌐■-■\n  // (⌐■_■)\n};\n\nvar forceUpdate = function (ref) {\n  {\n    var hostRef = getHostRef(ref);\n    var isConnected = hostRef.$hostElement$.isConnected;\n\n    if (isConnected && (hostRef.$flags$ & (2\n    /* hasRendered */\n    | 16\n    /* isQueuedForUpdate */\n    )) === 2\n    /* hasRendered */\n    ) {\n        scheduleUpdate(hostRef, false);\n      } // Returns \"true\" when the forced update was successfully scheduled\n\n\n    return isConnected;\n  }\n};\n\nvar appDidLoad = function (who) {\n  // on appload\n  // we have finish the first big initial render\n  {\n    addHydratedFlag(doc.documentElement);\n  }\n  {\n    plt.$flags$ |= 2\n    /* appLoaded */\n    ;\n  }\n  nextTick(function () {\n    return emitEvent(win, 'appload', {\n      detail: {\n        namespace: NAMESPACE\n      }\n    });\n  });\n};\n\nvar safeCall = function (instance, method, arg) {\n  if (instance && instance[method]) {\n    try {\n      return instance[method](arg);\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n\n  return undefined;\n};\n\nvar then = function (promise, thenFn) {\n  return promise && promise.then ? promise.then(thenFn) : thenFn();\n};\n\nvar addHydratedFlag = function (elm) {\n  return elm.classList.add('hydrated');\n};\n\nvar initializeClientHydrate = function (hostElm, tagName, hostId, hostRef) {\n  var endHydrate = createTime('hydrateClient', tagName);\n  var shadowRoot = hostElm.shadowRoot;\n  var childRenderNodes = [];\n  var slotNodes = [];\n  var shadowRootNodes = shadowRoot ? [] : null;\n  var vnode = hostRef.$vnode$ = newVNode(tagName, null);\n\n  if (!plt.$orgLocNodes$) {\n    initializeDocumentHydrate(doc.body, plt.$orgLocNodes$ = new Map());\n  }\n\n  hostElm[HYDRATE_ID] = hostId;\n  hostElm.removeAttribute(HYDRATE_ID);\n  clientHydrate(vnode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, hostElm, hostId);\n  childRenderNodes.map(function (c) {\n    var orgLocationId = c.$hostId$ + '.' + c.$nodeId$;\n    var orgLocationNode = plt.$orgLocNodes$.get(orgLocationId);\n    var node = c.$elm$;\n\n    if (orgLocationNode && supportsShadow && orgLocationNode['s-en'] === '') {\n      orgLocationNode.parentNode.insertBefore(node, orgLocationNode.nextSibling);\n    }\n\n    if (!shadowRoot) {\n      node['s-hn'] = tagName;\n\n      if (orgLocationNode) {\n        node['s-ol'] = orgLocationNode;\n        node['s-ol']['s-nr'] = node;\n      }\n    }\n\n    plt.$orgLocNodes$.delete(orgLocationId);\n  });\n\n  if (shadowRoot) {\n    shadowRootNodes.map(function (shadowRootNode) {\n      if (shadowRootNode) {\n        shadowRoot.appendChild(shadowRootNode);\n      }\n    });\n  }\n\n  endHydrate();\n};\n\nvar clientHydrate = function (parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node, hostId) {\n  var childNodeType;\n  var childIdSplt;\n  var childVNode;\n  var i;\n\n  if (node.nodeType === 1\n  /* ElementNode */\n  ) {\n      childNodeType = node.getAttribute(HYDRATE_CHILD_ID);\n\n      if (childNodeType) {\n        // got the node data from the element's attribute\n        // `${hostId}.${nodeId}.${depth}.${index}`\n        childIdSplt = childNodeType.split('.');\n\n        if (childIdSplt[0] === hostId || childIdSplt[0] === '0') {\n          childVNode = {\n            $flags$: 0,\n            $hostId$: childIdSplt[0],\n            $nodeId$: childIdSplt[1],\n            $depth$: childIdSplt[2],\n            $index$: childIdSplt[3],\n            $tag$: node.tagName.toLowerCase(),\n            $elm$: node,\n            $attrs$: null,\n            $children$: null,\n            $key$: null,\n            $name$: null,\n            $text$: null\n          };\n          childRenderNodes.push(childVNode);\n          node.removeAttribute(HYDRATE_CHILD_ID); // this is a new child vnode\n          // so ensure its parent vnode has the vchildren array\n\n          if (!parentVNode.$children$) {\n            parentVNode.$children$ = [];\n          } // add our child vnode to a specific index of the vnode's children\n\n\n          parentVNode.$children$[childVNode.$index$] = childVNode; // this is now the new parent vnode for all the next child checks\n\n          parentVNode = childVNode;\n\n          if (shadowRootNodes && childVNode.$depth$ === '0') {\n            shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n          }\n        }\n      } // recursively drill down, end to start so we can remove nodes\n\n\n      for (i = node.childNodes.length - 1; i >= 0; i--) {\n        clientHydrate(parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node.childNodes[i], hostId);\n      }\n\n      if (node.shadowRoot) {\n        // keep drilling down through the shadow root nodes\n        for (i = node.shadowRoot.childNodes.length - 1; i >= 0; i--) {\n          clientHydrate(parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node.shadowRoot.childNodes[i], hostId);\n        }\n      }\n    } else if (node.nodeType === 8\n  /* CommentNode */\n  ) {\n      // `${COMMENT_TYPE}.${hostId}.${nodeId}.${depth}.${index}`\n      childIdSplt = node.nodeValue.split('.');\n\n      if (childIdSplt[1] === hostId || childIdSplt[1] === '0') {\n        // comment node for either the host id or a 0 host id\n        childNodeType = childIdSplt[0];\n        childVNode = {\n          $flags$: 0,\n          $hostId$: childIdSplt[1],\n          $nodeId$: childIdSplt[2],\n          $depth$: childIdSplt[3],\n          $index$: childIdSplt[4],\n          $elm$: node,\n          $attrs$: null,\n          $children$: null,\n          $key$: null,\n          $name$: null,\n          $tag$: null,\n          $text$: null\n        };\n\n        if (childNodeType === TEXT_NODE_ID) {\n          childVNode.$elm$ = node.nextSibling;\n\n          if (childVNode.$elm$ && childVNode.$elm$.nodeType === 3\n          /* TextNode */\n          ) {\n              childVNode.$text$ = childVNode.$elm$.textContent;\n              childRenderNodes.push(childVNode); // remove the text comment since it's no longer needed\n\n              node.remove();\n\n              if (!parentVNode.$children$) {\n                parentVNode.$children$ = [];\n              }\n\n              parentVNode.$children$[childVNode.$index$] = childVNode;\n\n              if (shadowRootNodes && childVNode.$depth$ === '0') {\n                shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n              }\n            }\n        } else if (childVNode.$hostId$ === hostId) {\n          // this comment node is specifcally for this host id\n          if (childNodeType === SLOT_NODE_ID) {\n            // `${SLOT_NODE_ID}.${hostId}.${nodeId}.${depth}.${index}.${slotName}`;\n            childVNode.$tag$ = 'slot';\n\n            if (childIdSplt[5]) {\n              node['s-sn'] = childVNode.$name$ = childIdSplt[5];\n            } else {\n              node['s-sn'] = '';\n            }\n\n            node['s-sr'] = true;\n\n            if (shadowRootNodes) {\n              // browser support shadowRoot and this is a shadow dom component\n              // create an actual slot element\n              childVNode.$elm$ = doc.createElement(childVNode.$tag$);\n\n              if (childVNode.$name$) {\n                // add the slot name attribute\n                childVNode.$elm$.setAttribute('name', childVNode.$name$);\n              } // insert the new slot element before the slot comment\n\n\n              node.parentNode.insertBefore(childVNode.$elm$, node); // remove the slot comment since it's not needed for shadow\n\n              node.remove();\n\n              if (childVNode.$depth$ === '0') {\n                shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n              }\n            }\n\n            slotNodes.push(childVNode);\n\n            if (!parentVNode.$children$) {\n              parentVNode.$children$ = [];\n            }\n\n            parentVNode.$children$[childVNode.$index$] = childVNode;\n          } else if (childNodeType === CONTENT_REF_ID) {\n            // `${CONTENT_REF_ID}.${hostId}`;\n            if (shadowRootNodes) {\n              // remove the content ref comment since it's not needed for shadow\n              node.remove();\n            } else {\n              hostElm['s-cr'] = node;\n              node['s-cn'] = true;\n            }\n          }\n        }\n      }\n    } else if (parentVNode && parentVNode.$tag$ === 'style') {\n    var vnode = newVNode(null, node.textContent);\n    vnode.$elm$ = node;\n    vnode.$index$ = '0';\n    parentVNode.$children$ = [vnode];\n  }\n};\n\nvar initializeDocumentHydrate = function (node, orgLocNodes) {\n  if (node.nodeType === 1\n  /* ElementNode */\n  ) {\n      var i = 0;\n\n      for (; i < node.childNodes.length; i++) {\n        initializeDocumentHydrate(node.childNodes[i], orgLocNodes);\n      }\n\n      if (node.shadowRoot) {\n        for (i = 0; i < node.shadowRoot.childNodes.length; i++) {\n          initializeDocumentHydrate(node.shadowRoot.childNodes[i], orgLocNodes);\n        }\n      }\n    } else if (node.nodeType === 8\n  /* CommentNode */\n  ) {\n      var childIdSplt = node.nodeValue.split('.');\n\n      if (childIdSplt[0] === ORG_LOCATION_ID) {\n        orgLocNodes.set(childIdSplt[1] + '.' + childIdSplt[2], node);\n        node.nodeValue = ''; // useful to know if the original location is\n        // the root light-dom of a shadow dom component\n\n        node['s-en'] = childIdSplt[3];\n      }\n    }\n};\n\nvar parsePropertyValue = function (propValue, propType) {\n  // ensure this value is of the correct prop type\n  if (propValue != null && !isComplexType(propValue)) {\n    if (propType & 4\n    /* Boolean */\n    ) {\n        // per the HTML spec, any string value means it is a boolean true value\n        // but we'll cheat here and say that the string \"false\" is the boolean false\n        return propValue === 'false' ? false : propValue === '' || !!propValue;\n      }\n\n    if (propType & 2\n    /* Number */\n    ) {\n        // force it to be a number\n        return parseFloat(propValue);\n      }\n\n    if (propType & 1\n    /* String */\n    ) {\n        // could have been passed as a number or boolean\n        // but we still want it as a string\n        return String(propValue);\n      } // redundant return here for better minification\n\n\n    return propValue;\n  } // not sure exactly what type we want\n  // so no need to change to a different type\n\n\n  return propValue;\n};\n\nvar getValue = function (ref, propName) {\n  return getHostRef(ref).$instanceValues$.get(propName);\n};\n\nvar setValue = function (ref, propName, newVal, cmpMeta) {\n  // check our new property value against our internal value\n  var hostRef = getHostRef(ref);\n  var oldVal = hostRef.$instanceValues$.get(propName);\n  var flags = hostRef.$flags$;\n  var instance = hostRef.$lazyInstance$;\n  newVal = parsePropertyValue(newVal, cmpMeta.$members$[propName][0]);\n\n  if ((!(flags & 8\n  /* isConstructingInstance */\n  ) || oldVal === undefined) && newVal !== oldVal) {\n    // gadzooks! the property's value has changed!!\n    // set our new value!\n    hostRef.$instanceValues$.set(propName, newVal);\n\n    if (instance) {\n      // get an array of method names of watch functions to call\n      if (cmpMeta.$watchers$ && flags & 128\n      /* isWatchReady */\n      ) {\n          var watchMethods = cmpMeta.$watchers$[propName];\n\n          if (watchMethods) {\n            // this instance is watching for when this property changed\n            watchMethods.map(function (watchMethodName) {\n              try {\n                // fire off each of the watch methods that are watching this property\n                instance[watchMethodName](newVal, oldVal, propName);\n              } catch (e) {\n                consoleError(e);\n              }\n            });\n          }\n        }\n\n      if ((flags & (2\n      /* hasRendered */\n      | 16\n      /* isQueuedForUpdate */\n      )) === 2\n      /* hasRendered */\n      ) {\n          // looks like this value actually changed, so we've got work to do!\n          // but only if we've already rendered, otherwise just chill out\n          // queue that we need to do an update, but don't worry about queuing\n          // up millions cuz this function ensures it only runs once\n          scheduleUpdate(hostRef, false);\n        }\n    }\n  }\n};\n\nvar proxyComponent = function (Cstr, cmpMeta, flags) {\n  if (cmpMeta.$members$) {\n    if (Cstr.watchers) {\n      cmpMeta.$watchers$ = Cstr.watchers;\n    } // It's better to have a const than two Object.entries()\n\n\n    var members = Object.entries(cmpMeta.$members$);\n    var prototype_1 = Cstr.prototype;\n    members.map(function (_a) {\n      var memberName = _a[0],\n          memberFlags = _a[1][0];\n\n      if (memberFlags & 31\n      /* Prop */\n      || flags & 2\n      /* proxyState */\n      && memberFlags & 32\n      /* State */\n      ) {\n        // proxyComponent - prop\n        Object.defineProperty(prototype_1, memberName, {\n          get: function () {\n            // proxyComponent, get value\n            return getValue(this, memberName);\n          },\n          set: function (newValue) {\n            // proxyComponent, set value\n            setValue(this, memberName, newValue, cmpMeta);\n          },\n          configurable: true,\n          enumerable: true\n        });\n      } else if (flags & 1\n      /* isElementConstructor */\n      && memberFlags & 64\n      /* Method */\n      ) {\n          // proxyComponent - method\n          Object.defineProperty(prototype_1, memberName, {\n            value: function () {\n              var args = [];\n\n              for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n              }\n\n              var ref = getHostRef(this);\n              return ref.$onInstancePromise$.then(function () {\n                var _a;\n\n                return (_a = ref.$lazyInstance$)[memberName].apply(_a, args);\n              });\n            }\n          });\n        }\n    });\n\n    if (flags & 1\n    /* isElementConstructor */\n    ) {\n        var attrNameToPropName_1 = new Map();\n\n        prototype_1.attributeChangedCallback = function (attrName, _oldValue, newValue) {\n          var _this = this;\n\n          plt.jmp(function () {\n            var propName = attrNameToPropName_1.get(attrName);\n            _this[propName] = newValue === null && typeof _this[propName] === 'boolean' ? false : newValue;\n          });\n        }; // create an array of attributes to observe\n        // and also create a map of html attribute name to js property name\n\n\n        Cstr.observedAttributes = members.filter(function (_a) {\n          var _ = _a[0],\n              m = _a[1];\n          return m[0] & 15;\n        }\n        /* HasAttribute */\n        ) // filter to only keep props that should match attributes\n        .map(function (_a) {\n          var propName = _a[0],\n              m = _a[1];\n          var attrName = m[1] || propName;\n          attrNameToPropName_1.set(attrName, propName);\n\n          if (m[0] & 512\n          /* ReflectAttr */\n          ) {\n              cmpMeta.$attrsToReflect$.push([propName, attrName]);\n            }\n\n          return attrName;\n        });\n      }\n  }\n\n  return Cstr;\n};\n\nvar initializeComponent = function (elm, hostRef, cmpMeta, hmrVersionId, Cstr) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var endLoad, endNewInstance, style_1, scopeId_1, endRegisterStyles, ancestorComponent, schedule;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!((hostRef.$flags$ & 32\n          /* hasInitializedComponent */\n          ) === 0)) return [3\n          /*break*/\n          , 5]; // we haven't initialized this element yet\n\n          hostRef.$flags$ |= 32\n          /* hasInitializedComponent */\n          ; // lazy loaded components\n          // request the component's implementation to be\n          // wired up with the host element\n\n          Cstr = loadModule(cmpMeta);\n          if (!Cstr.then) return [3\n          /*break*/\n          , 2];\n          endLoad = uniqueTime();\n          return [4\n          /*yield*/\n          , Cstr];\n\n        case 1:\n          Cstr = _a.sent();\n          endLoad();\n          _a.label = 2;\n\n        case 2:\n          if (!Cstr.isProxied) {\n            // we'eve never proxied this Constructor before\n            // let's add the getters/setters to its prototype before\n            // the first time we create an instance of the implementation\n            {\n              cmpMeta.$watchers$ = Cstr.watchers;\n            }\n            proxyComponent(Cstr, cmpMeta, 2\n            /* proxyState */\n            );\n            Cstr.isProxied = true;\n          }\n\n          endNewInstance = createTime('createInstance', cmpMeta.$tagName$); // ok, time to construct the instance\n          // but let's keep track of when we start and stop\n          // so that the getters/setters don't incorrectly step on data\n\n          {\n            hostRef.$flags$ |= 8\n            /* isConstructingInstance */\n            ;\n          } // construct the lazy-loaded component implementation\n          // passing the hostRef is very important during\n          // construction in order to directly wire together the\n          // host element and the lazy-loaded instance\n\n          try {\n            new Cstr(hostRef);\n          } catch (e) {\n            consoleError(e);\n          }\n\n          {\n            hostRef.$flags$ &= ~8\n            /* isConstructingInstance */\n            ;\n          }\n          {\n            hostRef.$flags$ |= 128\n            /* isWatchReady */\n            ;\n          }\n          endNewInstance();\n          fireConnectedCallback(hostRef.$lazyInstance$);\n          if (!Cstr.style) return [3\n          /*break*/\n          , 5];\n          style_1 = Cstr.style;\n\n          if (typeof style_1 !== 'string') {\n            style_1 = style_1[hostRef.$modeName$ = computeMode(elm)];\n          }\n\n          scopeId_1 = getScopeId(cmpMeta, hostRef.$modeName$);\n          if (!!styles.has(scopeId_1)) return [3\n          /*break*/\n          , 5];\n          endRegisterStyles = createTime('registerStyles', cmpMeta.$tagName$);\n          if (!(cmpMeta.$flags$ & 8)\n          /* needsShadowDomShim */\n          ) return [3\n            /*break*/\n            , 4];\n          /* needsShadowDomShim */\n\n          return [4\n          /*yield*/\n          , import('./shadow-css-c63963b5.js').then(function (m) {\n            return m.scopeCss(style_1, scopeId_1, false);\n          })];\n\n        case 3:\n          style_1 = _a.sent();\n          _a.label = 4;\n\n        case 4:\n          registerStyle(scopeId_1, style_1, !!(cmpMeta.$flags$ & 1\n          /* shadowDomEncapsulation */\n          ));\n          endRegisterStyles();\n          _a.label = 5;\n\n        case 5:\n          ancestorComponent = hostRef.$ancestorComponent$;\n\n          schedule = function () {\n            return scheduleUpdate(hostRef, true);\n          };\n\n          if (ancestorComponent && ancestorComponent['s-rc']) {\n            // this is the intial load and this component it has an ancestor component\n            // but the ancestor component has NOT fired its will update lifecycle yet\n            // so let's just cool our jets and wait for the ancestor to continue first\n            // this will get fired off when the ancestor component\n            // finally gets around to rendering its lazy self\n            // fire off the initial update\n            ancestorComponent['s-rc'].push(schedule);\n          } else {\n            schedule();\n          }\n\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n};\n\nvar fireConnectedCallback = function (instance) {\n  {\n    safeCall(instance, 'connectedCallback');\n  }\n};\n\nvar connectedCallback = function (elm) {\n  if ((plt.$flags$ & 1\n  /* isTmpDisconnected */\n  ) === 0) {\n    var hostRef_1 = getHostRef(elm);\n    var cmpMeta_1 = hostRef_1.$cmpMeta$;\n    var endConnected = createTime('connectedCallback', cmpMeta_1.$tagName$);\n\n    if (!(hostRef_1.$flags$ & 1\n    /* hasConnected */\n    )) {\n      // first time this component has connected\n      hostRef_1.$flags$ |= 1\n      /* hasConnected */\n      ;\n      var hostId = void 0;\n      {\n        hostId = elm.getAttribute(HYDRATE_ID);\n\n        if (hostId) {\n          if (supportsShadow && cmpMeta_1.$flags$ & 1\n          /* shadowDomEncapsulation */\n          ) {\n              var scopeId_2 = addStyle(elm.shadowRoot, cmpMeta_1, elm.getAttribute('s-mode'));\n              elm.classList.remove(scopeId_2 + '-h', scopeId_2 + '-s');\n            }\n\n          initializeClientHydrate(elm, cmpMeta_1.$tagName$, hostId, hostRef_1);\n        }\n      }\n\n      if (!hostId) {\n        // initUpdate\n        // if the slot polyfill is required we'll need to put some nodes\n        // in here to act as original content anchors as we move nodes around\n        // host element has been connected to the DOM\n        if (cmpMeta_1.$flags$ & (4\n        /* hasSlotRelocation */\n        | 8\n        /* needsShadowDomShim */\n        )) {\n          setContentReference(elm);\n        }\n      }\n\n      {\n        // find the first ancestor component (if there is one) and register\n        // this component as one of the actively loading child components for its ancestor\n        var ancestorComponent = elm;\n\n        while (ancestorComponent = ancestorComponent.parentNode || ancestorComponent.host) {\n          // climb up the ancestors looking for the first\n          // component that hasn't finished its lifecycle update yet\n          if (ancestorComponent.nodeType === 1\n          /* ElementNode */\n          && ancestorComponent.hasAttribute('s-id') && ancestorComponent['s-p'] || ancestorComponent['s-p']) {\n            // we found this components first ancestor component\n            // keep a reference to this component's ancestor component\n            attachToAncestor(hostRef_1, hostRef_1.$ancestorComponent$ = ancestorComponent);\n            break;\n          }\n        }\n      } // Lazy properties\n      // https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties\n\n      if (cmpMeta_1.$members$) {\n        Object.entries(cmpMeta_1.$members$).map(function (_a) {\n          var memberName = _a[0],\n              memberFlags = _a[1][0];\n\n          if (memberFlags & 31\n          /* Prop */\n          && elm.hasOwnProperty(memberName)) {\n            var value = elm[memberName];\n            delete elm[memberName];\n            elm[memberName] = value;\n          }\n        });\n      }\n\n      {\n        // connectedCallback, taskQueue, initialLoad\n        // angular sets attribute AFTER connectCallback\n        // https://github.com/angular/angular/issues/18909\n        // https://github.com/angular/angular/issues/19940\n        nextTick(function () {\n          return initializeComponent(elm, hostRef_1, cmpMeta_1);\n        });\n      }\n    } else {\n      // not the first time this has connected\n      // reattach any event listeners to the host\n      // since they would have been removed when disconnected\n      addHostEventListeners(elm, hostRef_1, cmpMeta_1.$listeners$); // fire off connectedCallback() on component instance\n\n      fireConnectedCallback(hostRef_1.$lazyInstance$);\n    }\n\n    endConnected();\n  }\n};\n\nvar setContentReference = function (elm) {\n  // only required when we're NOT using native shadow dom (slot)\n  // or this browser doesn't support native shadow dom\n  // and this host element was NOT created with SSR\n  // let's pick out the inner content for slot projection\n  // create a node to represent where the original\n  // content was first placed, which is useful later on\n  var contentRefElm = elm['s-cr'] = doc.createComment('');\n  contentRefElm['s-cn'] = true;\n  elm.insertBefore(contentRefElm, elm.firstChild);\n};\n\nvar disconnectedCallback = function (elm) {\n  if ((plt.$flags$ & 1\n  /* isTmpDisconnected */\n  ) === 0) {\n    var hostRef = getHostRef(elm);\n    var instance = hostRef.$lazyInstance$;\n    {\n      if (hostRef.$rmListeners$) {\n        hostRef.$rmListeners$.map(function (rmListener) {\n          return rmListener();\n        });\n        hostRef.$rmListeners$ = undefined;\n      }\n    } // clear CSS var-shim tracking\n\n    if (plt.$cssShim$) {\n      plt.$cssShim$.removeHost(elm);\n    }\n\n    {\n      safeCall(instance, 'disconnectedCallback');\n    }\n  }\n};\n\nvar bootstrapLazy = function (lazyBundles, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var endBootstrap = createTime();\n  var cmpTags = [];\n  var exclude = options.exclude || [];\n  var customElements = win.customElements;\n  var head = doc.head;\n  var metaCharset = /*@__PURE__*/head.querySelector('meta[charset]');\n  var visibilityStyle = /*@__PURE__*/doc.createElement('style');\n  var deferredConnectedCallbacks = [];\n  var styles = /*@__PURE__*/doc.querySelectorAll(\"[\" + HYDRATED_STYLE_ID + \"]\");\n  var appLoadFallback;\n  var isBootstrapping = true;\n  var i = 0;\n  Object.assign(plt, options);\n  plt.$resourcesUrl$ = new URL(options.resourcesUrl || './', doc.baseURI).href;\n  {\n    if (options.syncQueue) {\n      plt.$flags$ |= 4\n      /* queueSync */\n      ;\n    }\n  }\n  {\n    // If the app is already hydrated there is not point to disable the\n    // async queue. This will improve the first input delay\n    plt.$flags$ |= 2\n    /* appLoaded */\n    ;\n  }\n  {\n    for (; i < styles.length; i++) {\n      registerStyle(styles[i].getAttribute(HYDRATED_STYLE_ID), convertScopedToShadow(styles[i].innerHTML), true);\n    }\n  }\n  lazyBundles.map(function (lazyBundle) {\n    return lazyBundle[1].map(function (compactMeta) {\n      var cmpMeta = {\n        $flags$: compactMeta[0],\n        $tagName$: compactMeta[1],\n        $members$: compactMeta[2],\n        $listeners$: compactMeta[3]\n      };\n      {\n        cmpMeta.$members$ = compactMeta[2];\n      }\n      {\n        cmpMeta.$listeners$ = compactMeta[3];\n      }\n      {\n        cmpMeta.$attrsToReflect$ = [];\n      }\n      {\n        cmpMeta.$watchers$ = {};\n      }\n\n      if (!supportsShadow && cmpMeta.$flags$ & 1\n      /* shadowDomEncapsulation */\n      ) {\n          cmpMeta.$flags$ |= 8\n          /* needsShadowDomShim */\n          ;\n        }\n\n      var tagName = cmpMeta.$tagName$;\n\n      var HostElement =\n      /** @class */\n      function (_super) {\n        __extends(HostElement, _super); // StencilLazyHost\n\n\n        function HostElement(self) {\n          var _this = // @ts-ignore\n          _super.call(this, self) || this;\n\n          self = _this;\n          registerHost(self, cmpMeta);\n\n          if (cmpMeta.$flags$ & 1\n          /* shadowDomEncapsulation */\n          ) {\n              // this component is using shadow dom\n              // and this browser supports shadow dom\n              // add the read-only property \"shadowRoot\" to the host element\n              // adding the shadow root build conditionals to minimize runtime\n              if (supportsShadow) {\n                {\n                  self.attachShadow({\n                    mode: 'open',\n                    delegatesFocus: !!(cmpMeta.$flags$ & 16\n                    /* shadowDelegatesFocus */\n                    )\n                  });\n                }\n              } else if (!('shadowRoot' in self)) {\n                self.shadowRoot = self;\n              }\n            }\n\n          return _this;\n        }\n\n        HostElement.prototype.connectedCallback = function () {\n          var _this = this;\n\n          if (appLoadFallback) {\n            clearTimeout(appLoadFallback);\n            appLoadFallback = null;\n          }\n\n          if (isBootstrapping) {\n            // connectedCallback will be processed once all components have been registered\n            deferredConnectedCallbacks.push(this);\n          } else {\n            plt.jmp(function () {\n              return connectedCallback(_this);\n            });\n          }\n        };\n\n        HostElement.prototype.disconnectedCallback = function () {\n          var _this = this;\n\n          plt.jmp(function () {\n            return disconnectedCallback(_this);\n          });\n        };\n\n        HostElement.prototype.forceUpdate = function () {\n          forceUpdate(this);\n        };\n\n        HostElement.prototype.componentOnReady = function () {\n          return getHostRef(this).$onReadyPromise$;\n        };\n\n        return HostElement;\n      }(HTMLElement);\n\n      cmpMeta.$lazyBundleId$ = lazyBundle[0];\n\n      if (!exclude.includes(tagName) && !customElements.get(tagName)) {\n        cmpTags.push(tagName);\n        customElements.define(tagName, proxyComponent(HostElement, cmpMeta, 1\n        /* isElementConstructor */\n        ));\n      }\n    });\n  });\n  {\n    visibilityStyle.innerHTML = cmpTags + HYDRATED_CSS;\n    visibilityStyle.setAttribute('data-styles', '');\n    head.insertBefore(visibilityStyle, metaCharset ? metaCharset.nextSibling : head.firstChild);\n  } // Process deferred connectedCallbacks now all components have been registered\n\n  isBootstrapping = false;\n\n  if (deferredConnectedCallbacks.length) {\n    deferredConnectedCallbacks.map(function (host) {\n      return host.connectedCallback();\n    });\n  } else {\n    {\n      plt.jmp(function () {\n        return appLoadFallback = setTimeout(appDidLoad, 30);\n      });\n    }\n  } // Fallback appLoad event\n\n\n  endBootstrap();\n};\n\nvar getAssetPath = function (path) {\n  var assetUrl = new URL(path, plt.$resourcesUrl$);\n  return assetUrl.origin !== win.location.origin ? assetUrl.href : assetUrl.pathname;\n};\n\nvar hostRefs = new WeakMap();\n\nvar getHostRef = function (ref) {\n  return hostRefs.get(ref);\n};\n\nvar registerInstance = function (lazyInstance, hostRef) {\n  return hostRefs.set(hostRef.$lazyInstance$ = lazyInstance, hostRef);\n};\n\nvar registerHost = function (elm, cmpMeta) {\n  var hostRef = {\n    $flags$: 0,\n    $hostElement$: elm,\n    $cmpMeta$: cmpMeta,\n    $instanceValues$: new Map()\n  };\n  {\n    hostRef.$onInstancePromise$ = new Promise(function (r) {\n      return hostRef.$onInstanceResolve$ = r;\n    });\n  }\n  {\n    hostRef.$onReadyPromise$ = new Promise(function (r) {\n      return hostRef.$onReadyResolve$ = r;\n    });\n    elm['s-p'] = [];\n    elm['s-rc'] = [];\n  }\n  addHostEventListeners(elm, hostRef, cmpMeta.$listeners$);\n  return hostRefs.set(elm, hostRef);\n};\n\nvar isMemberInElement = function (elm, memberName) {\n  return memberName in elm;\n};\n\nvar consoleError = function (e) {\n  return console.error(e);\n};\n\nvar cmpModules = /*@__PURE__*/new Map();\n\nvar loadModule = function (cmpMeta, hostRef, hmrVersionId) {\n  // loadModuleImport\n  var exportName = cmpMeta.$tagName$.replace(/-/g, '_');\n  var bundleId = cmpMeta.$lazyBundleId$;\n  var module = cmpModules.get(bundleId);\n\n  if (module) {\n    return module[exportName];\n  }\n\n  return import(\n  /* webpackInclude: /\\.entry\\.js$/ */\n\n  /* webpackExclude: /\\.system\\.entry\\.js$/ */\n\n  /* webpackMode: \"lazy\" */\n  \"./\" + bundleId + \".entry.js\" + '').then(function (importedModule) {\n    {\n      cmpModules.set(bundleId, importedModule);\n    }\n    return importedModule[exportName];\n  }, consoleError);\n};\n\nvar styles = new Map();\nvar modeResolutionChain = [];\nvar queueDomReads = [];\nvar queueDomWrites = [];\nvar queueDomWritesLow = [];\n\nvar queueTask = function (queue, write) {\n  return function (cb) {\n    queue.push(cb);\n\n    if (!queuePending) {\n      queuePending = true;\n\n      if (write && plt.$flags$ & 4\n      /* queueSync */\n      ) {\n          nextTick(flush);\n        } else {\n        plt.raf(flush);\n      }\n    }\n  };\n};\n\nvar consume = function (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    try {\n      queue[i](performance.now());\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n\n  queue.length = 0;\n};\n\nvar consumeTimeout = function (queue, timeout) {\n  var i = 0;\n  var ts = 0;\n\n  while (i < queue.length && (ts = performance.now()) < timeout) {\n    try {\n      queue[i++](ts);\n    } catch (e) {\n      consoleError(e);\n    }\n  }\n\n  if (i === queue.length) {\n    queue.length = 0;\n  } else if (i !== 0) {\n    queue.splice(0, i);\n  }\n};\n\nvar flush = function () {\n  {\n    queueCongestion++;\n  } // always force a bunch of medium callbacks to run, but still have\n  // a throttle on how many can run in a certain time\n  // DOM READS!!!\n\n  consume(queueDomReads); // DOM WRITES!!!\n\n  {\n    var timeout = (plt.$flags$ & 6\n    /* queueMask */\n    ) === 2\n    /* appLoaded */\n    ? performance.now() + 14 * Math.ceil(queueCongestion * (1.0 / 10.0)) : Infinity;\n    consumeTimeout(queueDomWrites, timeout);\n    consumeTimeout(queueDomWritesLow, timeout);\n\n    if (queueDomWrites.length > 0) {\n      queueDomWritesLow.push.apply(queueDomWritesLow, queueDomWrites);\n      queueDomWrites.length = 0;\n    }\n\n    if (queuePending = queueDomReads.length + queueDomWrites.length + queueDomWritesLow.length > 0) {\n      // still more to do yet, but we've run out of time\n      // let's let this thing cool off and try again in the next tick\n      plt.raf(flush);\n    } else {\n      queueCongestion = 0;\n    }\n  }\n};\n\nvar nextTick = /*@__PURE__*/function (cb) {\n  return promiseResolve().then(cb);\n};\n\nvar readTask = /*@__PURE__*/queueTask(queueDomReads, false);\nvar writeTask = /*@__PURE__*/queueTask(queueDomWrites, true);\nvar Build = {\n  isDev: false,\n  isBrowser: true,\n  isServer: false,\n  isTesting: false\n};\nexport { Build as B, CSS as C, Host as H, NAMESPACE as N, promiseResolve as a, bootstrapLazy as b, writeTask as c, doc as d, createEvent as e, readTask as f, getMode as g, h, getElement as i, forceUpdate as j, getAssetPath as k, plt as p, registerInstance as r, setMode as s, win as w };","map":{"version":3,"sources":["/home/sukhans/code/university/industry-4/app/node_modules/@ionic/core/dist/esm-es5/index-92848855.js"],"names":["__awaiter","__extends","__generator","__spreadArrays","NAMESPACE","scopeId","contentRef","hostTagName","useNativeShadowDom","checkSlotFallbackVisibility","checkSlotRelocate","isSvgMode","queueCongestion","queuePending","win","window","CSS","doc","document","head","plt","$flags$","$resourcesUrl$","jmp","h","raf","requestAnimationFrame","ael","el","eventName","listener","opts","addEventListener","rel","removeEventListener","ce","CustomEvent","supportsShadow","attachShadow","indexOf","promiseResolve","v","Promise","resolve","supportsConstructibleStylesheets","CSSStyleSheet","e","addHostEventListeners","elm","hostRef","listeners","attachParentListeners","map","_a","flags","name","method","target","getHostListenerTarget","handler","hostListenerProxy","hostListenerOpts","$rmListeners$","push","methodName","ev","$lazyInstance$","$queuedListeners$","body","CONTENT_REF_ID","ORG_LOCATION_ID","SLOT_NODE_ID","TEXT_NODE_ID","HYDRATE_ID","HYDRATED_STYLE_ID","HYDRATE_CHILD_ID","HYDRATED_CSS","XLINK_NS","createTime","fnName","tagName","uniqueTime","key","measureText","rootAppliedStyles","WeakMap","registerStyle","cssText","allowCS","style","styles","get","replace","set","addStyle","styleContainerNode","cmpMeta","mode","hostElm","getScopeId","nodeType","appliedStyles","styleElm","Set","has","host","querySelector","innerHTML","$cssShim$","createHostStyle","newScopeId","createElement","insertBefore","add","adoptedStyleSheets","includes","attachStyles","$cmpMeta$","$hostElement$","endAttachStyles","$tagName$","shadowRoot","getRootNode","$modeName$","classList","cmp","convertScopedToShadow","css","computeMode","modeResolutionChain","find","m","setMode","getMode","ref","getHostRef","EMPTY_OBJ","SVG_NS","HTML_NS","isDef","noop","isComplexType","o","IS_DENO_ENV","Deno","IS_NODE_ENV","global","require","process","__filename","origin","IS_DENO_WINDOWS_ENV","build","os","getCurrentDirectory","cwd","exit","nodeName","vnodeData","children","_i","arguments","length","child","slotName","simple","lastSimple","vNodeChildren","walk","c","i","Array","isArray","String","$text$","newVNode","classData_1","className","class","Object","keys","filter","k","join","vdomFnUtils","vnode","$attrs$","$children$","$key$","$name$","tag","text","$tag$","$elm$","Host","isHost","node","forEach","cb","convertToPublic","convertToPrivate","vattrs","vchildren","vkey","vname","vtag","vtext","assign","apply","setAccessor","memberName","oldValue","newValue","isSvg","isProp","isMemberInElement","ln","toLowerCase","oldClasses_1","parseClassList","newClasses_1","remove","prop","removeProperty","setProperty","slice","isComplex","n","xlink","getAttribute","removeAttributeNS","removeAttribute","setAttributeNS","setAttribute","parseClassListRegex","value","split","updateElement","oldVnode","newVnode","oldVnodeAttrs","newVnodeAttrs","undefined","createElm","oldParentVNode","newParentVNode","childIndex","parentElm","childNode","oldVNode","createTextNode","createElementNS","appendChild","putBackInOriginalLocation","recursive","oldSlotChildNodes","childNodes","parentReferenceNode","referenceNode","addVnodes","before","parentVNode","vnodes","startIdx","endIdx","containerElm","parentNode","removeVnodes","callNodeRefs","updateChildren","oldCh","newCh","oldStartIdx","newStartIdx","idxInOld","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","elmToMove","isSameVnode","patch","nextSibling","vnode1","vnode2","oldChildren","newChildren","defaultHolder","textContent","data","updateFallbackSlotVisibility","ilen","j","slotNameAttr","hidden","trim","relocateNodes","relocateSlotContent","hostContentNodes","relocateNodeData","isNodeLocatedInSlot","r","$nodeToRelocate$","$slotRefNode$","relocateNode","some","nodeToRelocate","vNode","renderVdom","renderFnResults","$vnode$","rootVnode","$attrsToReflect$","propName","attribute","relocateData","orgLocationNode","parentNodeRef","insertBeforeNode","refNode","previousSibling","getElement","createEvent","emit","detail","emitEvent","bubbles","composed","cancelable","dispatchEvent","attachToAncestor","ancestorComponent","$onRenderResolve$","scheduleUpdate","isInitialLoad","$ancestorComponent$","dispatch","dispatchHooks","writeTask","endSchedule","instance","promise","event","safeCall","then","updateComponent","endUpdate","rc","endRender","callRender","updateHost","childrenPromises","postUpdate","postUpdateComponent","all","render","consoleError","endPostUpdate","addHydratedFlag","$onReadyResolve$","appDidLoad","$onInstanceResolve$","nextTick","forceUpdate","isConnected","who","documentElement","namespace","arg","thenFn","initializeClientHydrate","hostId","endHydrate","childRenderNodes","slotNodes","shadowRootNodes","$orgLocNodes$","initializeDocumentHydrate","Map","clientHydrate","orgLocationId","$hostId$","$nodeId$","delete","shadowRootNode","childNodeType","childIdSplt","childVNode","$depth$","$index$","nodeValue","orgLocNodes","parsePropertyValue","propValue","propType","parseFloat","getValue","$instanceValues$","setValue","newVal","oldVal","$members$","$watchers$","watchMethods","watchMethodName","proxyComponent","Cstr","watchers","members","entries","prototype_1","prototype","memberFlags","defineProperty","configurable","enumerable","args","$onInstancePromise$","attrNameToPropName_1","attributeChangedCallback","attrName","_oldValue","_this","observedAttributes","_","initializeComponent","hmrVersionId","endLoad","endNewInstance","style_1","scopeId_1","endRegisterStyles","schedule","label","loadModule","sent","isProxied","fireConnectedCallback","scopeCss","connectedCallback","hostRef_1","cmpMeta_1","endConnected","scopeId_2","setContentReference","hasAttribute","hasOwnProperty","$listeners$","contentRefElm","createComment","firstChild","disconnectedCallback","rmListener","removeHost","bootstrapLazy","lazyBundles","options","endBootstrap","cmpTags","exclude","customElements","metaCharset","visibilityStyle","deferredConnectedCallbacks","querySelectorAll","appLoadFallback","isBootstrapping","URL","resourcesUrl","baseURI","href","syncQueue","lazyBundle","compactMeta","HostElement","_super","self","call","registerHost","delegatesFocus","clearTimeout","componentOnReady","$onReadyPromise$","HTMLElement","$lazyBundleId$","define","setTimeout","getAssetPath","path","assetUrl","location","pathname","hostRefs","registerInstance","lazyInstance","console","error","cmpModules","exportName","bundleId","module","importedModule","queueDomReads","queueDomWrites","queueDomWritesLow","queueTask","queue","write","flush","consume","performance","now","consumeTimeout","timeout","ts","splice","Math","ceil","Infinity","readTask","Build","isDev","isBrowser","isServer","isTesting","B","C","H","N","a","b","d","f","g","p","s","w"],"mappings":"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","sourcesContent":["import { __awaiter, __extends, __generator, __spreadArrays } from \"tslib\";\nvar NAMESPACE = 'ionic';\nvar scopeId;\nvar contentRef;\nvar hostTagName;\nvar useNativeShadowDom = false;\nvar checkSlotFallbackVisibility = false;\nvar checkSlotRelocate = false;\nvar isSvgMode = false;\nvar queueCongestion = 0;\nvar queuePending = false;\nvar win = typeof window !== 'undefined' ? window : {};\nvar CSS = win.CSS;\nvar doc = win.document || { head: {} };\nvar plt = {\n    $flags$: 0,\n    $resourcesUrl$: '',\n    jmp: function (h) { return h(); },\n    raf: function (h) { return requestAnimationFrame(h); },\n    ael: function (el, eventName, listener, opts) { return el.addEventListener(eventName, listener, opts); },\n    rel: function (el, eventName, listener, opts) { return el.removeEventListener(eventName, listener, opts); },\n    ce: function (eventName, opts) { return new CustomEvent(eventName, opts); },\n};\nvar supportsShadow = /*@__PURE__*/ (function () { return (doc.head.attachShadow + '').indexOf('[native') > -1; })();\nvar promiseResolve = function (v) { return Promise.resolve(v); };\nvar supportsConstructibleStylesheets = /*@__PURE__*/ (function () {\n    try {\n        new CSSStyleSheet();\n        return true;\n    }\n    catch (e) { }\n    return false;\n})();\nvar addHostEventListeners = function (elm, hostRef, listeners, attachParentListeners) {\n    if (listeners) {\n        listeners.map(function (_a) {\n            var flags = _a[0], name = _a[1], method = _a[2];\n            var target = getHostListenerTarget(elm, flags);\n            var handler = hostListenerProxy(hostRef, method);\n            var opts = hostListenerOpts(flags);\n            plt.ael(target, name, handler, opts);\n            (hostRef.$rmListeners$ = hostRef.$rmListeners$ || []).push(function () { return plt.rel(target, name, handler, opts); });\n        });\n    }\n};\nvar hostListenerProxy = function (hostRef, methodName) { return function (ev) {\n    {\n        if (hostRef.$flags$ & 256 /* isListenReady */) {\n            // instance is ready, let's call it's member method for this event\n            hostRef.$lazyInstance$[methodName](ev);\n        }\n        else {\n            (hostRef.$queuedListeners$ = hostRef.$queuedListeners$ || []).push([methodName, ev]);\n        }\n    }\n}; };\nvar getHostListenerTarget = function (elm, flags) {\n    if (flags & 4 /* TargetDocument */)\n        return doc;\n    if (flags & 8 /* TargetWindow */)\n        return win;\n    if (flags & 32 /* TargetBody */)\n        return doc.body;\n    return elm;\n};\n// prettier-ignore\nvar hostListenerOpts = function (flags) { return (flags & 2 /* Capture */) !== 0; };\nvar CONTENT_REF_ID = 'r';\nvar ORG_LOCATION_ID = 'o';\nvar SLOT_NODE_ID = 's';\nvar TEXT_NODE_ID = 't';\nvar HYDRATE_ID = 's-id';\nvar HYDRATED_STYLE_ID = 'sty-id';\nvar HYDRATE_CHILD_ID = 'c-id';\nvar HYDRATED_CSS = '{visibility:hidden}.hydrated{visibility:inherit}';\nvar XLINK_NS = 'http://www.w3.org/1999/xlink';\nvar createTime = function (fnName, tagName) {\n    if (tagName === void 0) { tagName = ''; }\n    {\n        return function () {\n            return;\n        };\n    }\n};\nvar uniqueTime = function (key, measureText) {\n    {\n        return function () {\n            return;\n        };\n    }\n};\nvar rootAppliedStyles = new WeakMap();\nvar registerStyle = function (scopeId, cssText, allowCS) {\n    var style = styles.get(scopeId);\n    if (supportsConstructibleStylesheets && allowCS) {\n        style = (style || new CSSStyleSheet());\n        style.replace(cssText);\n    }\n    else {\n        style = cssText;\n    }\n    styles.set(scopeId, style);\n};\nvar addStyle = function (styleContainerNode, cmpMeta, mode, hostElm) {\n    var scopeId = getScopeId(cmpMeta, mode);\n    var style = styles.get(scopeId);\n    // if an element is NOT connected then getRootNode() will return the wrong root node\n    // so the fallback is to always use the document for the root node in those cases\n    styleContainerNode = styleContainerNode.nodeType === 11 /* DocumentFragment */ ? styleContainerNode : doc;\n    if (style) {\n        if (typeof style === 'string') {\n            styleContainerNode = styleContainerNode.head || styleContainerNode;\n            var appliedStyles = rootAppliedStyles.get(styleContainerNode);\n            var styleElm = void 0;\n            if (!appliedStyles) {\n                rootAppliedStyles.set(styleContainerNode, (appliedStyles = new Set()));\n            }\n            if (!appliedStyles.has(scopeId)) {\n                if (styleContainerNode.host && (styleElm = styleContainerNode.querySelector(\"[\" + HYDRATED_STYLE_ID + \"=\\\"\" + scopeId + \"\\\"]\"))) {\n                    // This is only happening on native shadow-dom, do not needs CSS var shim\n                    styleElm.innerHTML = style;\n                }\n                else {\n                    if (plt.$cssShim$) {\n                        styleElm = plt.$cssShim$.createHostStyle(hostElm, scopeId, style, !!(cmpMeta.$flags$ & 10 /* needsScopedEncapsulation */));\n                        var newScopeId = styleElm['s-sc'];\n                        if (newScopeId) {\n                            scopeId = newScopeId;\n                            // we don't want to add this styleID to the appliedStyles Set\n                            // since the cssVarShim might need to apply several different\n                            // stylesheets for the same component\n                            appliedStyles = null;\n                        }\n                    }\n                    else {\n                        styleElm = doc.createElement('style');\n                        styleElm.innerHTML = style;\n                    }\n                    styleContainerNode.insertBefore(styleElm, styleContainerNode.querySelector('link'));\n                }\n                if (appliedStyles) {\n                    appliedStyles.add(scopeId);\n                }\n            }\n        }\n        else if (!styleContainerNode.adoptedStyleSheets.includes(style)) {\n            styleContainerNode.adoptedStyleSheets = __spreadArrays(styleContainerNode.adoptedStyleSheets, [style]);\n        }\n    }\n    return scopeId;\n};\nvar attachStyles = function (hostRef) {\n    var cmpMeta = hostRef.$cmpMeta$;\n    var elm = hostRef.$hostElement$;\n    var flags = cmpMeta.$flags$;\n    var endAttachStyles = createTime('attachStyles', cmpMeta.$tagName$);\n    var scopeId = addStyle(supportsShadow && elm.shadowRoot ? elm.shadowRoot : elm.getRootNode(), cmpMeta, hostRef.$modeName$, elm);\n    if (flags & 10 /* needsScopedEncapsulation */) {\n        // only required when we're NOT using native shadow dom (slot)\n        // or this browser doesn't support native shadow dom\n        // and this host element was NOT created with SSR\n        // let's pick out the inner content for slot projection\n        // create a node to represent where the original\n        // content was first placed, which is useful later on\n        // DOM WRITE!!\n        elm['s-sc'] = scopeId;\n        elm.classList.add(scopeId + '-h');\n        if (flags & 2 /* scopedCssEncapsulation */) {\n            elm.classList.add(scopeId + '-s');\n        }\n    }\n    endAttachStyles();\n};\nvar getScopeId = function (cmp, mode) { return 'sc-' + (mode && cmp.$flags$ & 32 /* hasMode */ ? cmp.$tagName$ + '-' + mode : cmp.$tagName$); };\nvar convertScopedToShadow = function (css) { return css.replace(/\\/\\*!@([^\\/]+)\\*\\/[^\\{]+\\{/g, '$1{'); };\n// Private\nvar computeMode = function (elm) { return modeResolutionChain.map(function (h) { return h(elm); }).find(function (m) { return !!m; }); };\n// Public\nvar setMode = function (handler) { return modeResolutionChain.push(handler); };\nvar getMode = function (ref) { return getHostRef(ref).$modeName$; };\n/**\n * Default style mode id\n */\n/**\n * Reusable empty obj/array\n * Don't add values to these!!\n */\nvar EMPTY_OBJ = {};\n/**\n * Namespaces\n */\nvar SVG_NS = 'http://www.w3.org/2000/svg';\nvar HTML_NS = 'http://www.w3.org/1999/xhtml';\nvar isDef = function (v) { return v != null; };\nvar noop = function () {\n    /* noop*/\n};\nvar isComplexType = function (o) {\n    // https://jsperf.com/typeof-fn-object/5\n    o = typeof o;\n    return o === 'object' || o === 'function';\n};\nvar IS_DENO_ENV = typeof Deno !== 'undefined';\nvar IS_NODE_ENV = !IS_DENO_ENV &&\n    typeof global !== 'undefined' &&\n    typeof require === 'function' &&\n    !!global.process &&\n    typeof __filename === 'string' &&\n    (!global.origin || typeof global.origin !== 'string');\nvar IS_DENO_WINDOWS_ENV = IS_DENO_ENV && Deno.build.os === 'windows';\nvar getCurrentDirectory = IS_NODE_ENV ? process.cwd : IS_DENO_ENV ? Deno.cwd : function () { return '/'; };\nvar exit = IS_NODE_ENV ? process.exit : IS_DENO_ENV ? Deno.exit : noop;\n/**\n * Production h() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\n// const stack: any[] = [];\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, child?: d.ChildType): d.VNode;\n// export function h(nodeName: string | d.FunctionalComponent, vnodeData: d.PropsType, ...children: d.ChildType[]): d.VNode;\nvar h = function (nodeName, vnodeData) {\n    var children = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        children[_i - 2] = arguments[_i];\n    }\n    var child = null;\n    var key = null;\n    var slotName = null;\n    var simple = false;\n    var lastSimple = false;\n    var vNodeChildren = [];\n    var walk = function (c) {\n        for (var i = 0; i < c.length; i++) {\n            child = c[i];\n            if (Array.isArray(child)) {\n                walk(child);\n            }\n            else if (child != null && typeof child !== 'boolean') {\n                if ((simple = typeof nodeName !== 'function' && !isComplexType(child))) {\n                    child = String(child);\n                }\n                if (simple && lastSimple) {\n                    // If the previous child was simple (string), we merge both\n                    vNodeChildren[vNodeChildren.length - 1].$text$ += child;\n                }\n                else {\n                    // Append a new vNode, if it's text, we create a text vNode\n                    vNodeChildren.push(simple ? newVNode(null, child) : child);\n                }\n                lastSimple = simple;\n            }\n        }\n    };\n    walk(children);\n    if (vnodeData) {\n        // normalize class / classname attributes\n        if (vnodeData.key) {\n            key = vnodeData.key;\n        }\n        if (vnodeData.name) {\n            slotName = vnodeData.name;\n        }\n        {\n            var classData_1 = vnodeData.className || vnodeData.class;\n            if (classData_1) {\n                vnodeData.class =\n                    typeof classData_1 !== 'object'\n                        ? classData_1\n                        : Object.keys(classData_1)\n                            .filter(function (k) { return classData_1[k]; })\n                            .join(' ');\n            }\n        }\n    }\n    if (typeof nodeName === 'function') {\n        // nodeName is a functional component\n        return nodeName(vnodeData === null ? {} : vnodeData, vNodeChildren, vdomFnUtils);\n    }\n    var vnode = newVNode(nodeName, null);\n    vnode.$attrs$ = vnodeData;\n    if (vNodeChildren.length > 0) {\n        vnode.$children$ = vNodeChildren;\n    }\n    {\n        vnode.$key$ = key;\n    }\n    {\n        vnode.$name$ = slotName;\n    }\n    return vnode;\n};\nvar newVNode = function (tag, text) {\n    var vnode = {\n        $flags$: 0,\n        $tag$: tag,\n        $text$: text,\n        $elm$: null,\n        $children$: null,\n    };\n    {\n        vnode.$attrs$ = null;\n    }\n    {\n        vnode.$key$ = null;\n    }\n    {\n        vnode.$name$ = null;\n    }\n    return vnode;\n};\nvar Host = {};\nvar isHost = function (node) { return node && node.$tag$ === Host; };\nvar vdomFnUtils = {\n    forEach: function (children, cb) { return children.map(convertToPublic).forEach(cb); },\n    map: function (children, cb) { return children\n        .map(convertToPublic)\n        .map(cb)\n        .map(convertToPrivate); },\n};\nvar convertToPublic = function (node) { return ({\n    vattrs: node.$attrs$,\n    vchildren: node.$children$,\n    vkey: node.$key$,\n    vname: node.$name$,\n    vtag: node.$tag$,\n    vtext: node.$text$,\n}); };\nvar convertToPrivate = function (node) {\n    if (typeof node.vtag === 'function') {\n        var vnodeData = Object.assign({}, node.vattrs);\n        if (node.vkey) {\n            vnodeData.key = node.vkey;\n        }\n        if (node.vname) {\n            vnodeData.name = node.vname;\n        }\n        return h.apply(void 0, __spreadArrays([node.vtag, vnodeData], node.vchildren || []));\n    }\n    var vnode = newVNode(node.vtag, node.vtext);\n    vnode.$attrs$ = node.vattrs;\n    vnode.$children$ = node.vchildren;\n    vnode.$key$ = node.vkey;\n    vnode.$name$ = node.vname;\n    return vnode;\n};\n/**\n * Production setAccessor() function based on Preact by\n * Jason Miller (@developit)\n * Licensed under the MIT License\n * https://github.com/developit/preact/blob/master/LICENSE\n *\n * Modified for Stencil's compiler and vdom\n */\nvar setAccessor = function (elm, memberName, oldValue, newValue, isSvg, flags) {\n    if (oldValue !== newValue) {\n        var isProp = isMemberInElement(elm, memberName);\n        var ln = memberName.toLowerCase();\n        if (memberName === 'class') {\n            var classList = elm.classList;\n            var oldClasses_1 = parseClassList(oldValue);\n            var newClasses_1 = parseClassList(newValue);\n            classList.remove.apply(classList, oldClasses_1.filter(function (c) { return c && !newClasses_1.includes(c); }));\n            classList.add.apply(classList, newClasses_1.filter(function (c) { return c && !oldClasses_1.includes(c); }));\n        }\n        else if (memberName === 'style') {\n            // update style attribute, css properties and values\n            {\n                for (var prop in oldValue) {\n                    if (!newValue || newValue[prop] == null) {\n                        if (prop.includes('-')) {\n                            elm.style.removeProperty(prop);\n                        }\n                        else {\n                            elm.style[prop] = '';\n                        }\n                    }\n                }\n            }\n            for (var prop in newValue) {\n                if (!oldValue || newValue[prop] !== oldValue[prop]) {\n                    if (prop.includes('-')) {\n                        elm.style.setProperty(prop, newValue[prop]);\n                    }\n                    else {\n                        elm.style[prop] = newValue[prop];\n                    }\n                }\n            }\n        }\n        else if (memberName === 'key')\n            ;\n        else if (memberName === 'ref') {\n            // minifier will clean this up\n            if (newValue) {\n                newValue(elm);\n            }\n        }\n        else if ((!isProp) && memberName[0] === 'o' && memberName[1] === 'n') {\n            // Event Handlers\n            // so if the member name starts with \"on\" and the 3rd characters is\n            // a capital letter, and it's not already a member on the element,\n            // then we're assuming it's an event listener\n            if (memberName[2] === '-') {\n                // on- prefixed events\n                // allows to be explicit about the dom event to listen without any magic\n                // under the hood:\n                // <my-cmp on-click> // listens for \"click\"\n                // <my-cmp on-Click> // listens for \"Click\"\n                // <my-cmp on-ionChange> // listens for \"ionChange\"\n                // <my-cmp on-EVENTS> // listens for \"EVENTS\"\n                memberName = memberName.slice(3);\n            }\n            else if (isMemberInElement(win, ln)) {\n                // standard event\n                // the JSX attribute could have been \"onMouseOver\" and the\n                // member name \"onmouseover\" is on the window's prototype\n                // so let's add the listener \"mouseover\", which is all lowercased\n                memberName = ln.slice(2);\n            }\n            else {\n                // custom event\n                // the JSX attribute could have been \"onMyCustomEvent\"\n                // so let's trim off the \"on\" prefix and lowercase the first character\n                // and add the listener \"myCustomEvent\"\n                // except for the first character, we keep the event name case\n                memberName = ln[2] + memberName.slice(3);\n            }\n            if (oldValue) {\n                plt.rel(elm, memberName, oldValue, false);\n            }\n            if (newValue) {\n                plt.ael(elm, memberName, newValue, false);\n            }\n        }\n        else {\n            // Set property if it exists and it's not a SVG\n            var isComplex = isComplexType(newValue);\n            if ((isProp || (isComplex && newValue !== null)) && !isSvg) {\n                try {\n                    if (!elm.tagName.includes('-')) {\n                        var n = newValue == null ? '' : newValue;\n                        // Workaround for Safari, moving the <input> caret when re-assigning the same valued\n                        if (memberName === 'list') {\n                            isProp = false;\n                            // tslint:disable-next-line: triple-equals\n                        }\n                        else if (oldValue == null || elm[memberName] != n) {\n                            elm[memberName] = n;\n                        }\n                    }\n                    else {\n                        elm[memberName] = newValue;\n                    }\n                }\n                catch (e) { }\n            }\n            /**\n             * Need to manually update attribute if:\n             * - memberName is not an attribute\n             * - if we are rendering the host element in order to reflect attribute\n             * - if it's a SVG, since properties might not work in <svg>\n             * - if the newValue is null/undefined or 'false'.\n             */\n            var xlink = false;\n            {\n                if (ln !== (ln = ln.replace(/^xlink\\:?/, ''))) {\n                    memberName = ln;\n                    xlink = true;\n                }\n            }\n            if (newValue == null || newValue === false) {\n                if (newValue !== false || elm.getAttribute(memberName) === '') {\n                    if (xlink) {\n                        elm.removeAttributeNS(XLINK_NS, memberName);\n                    }\n                    else {\n                        elm.removeAttribute(memberName);\n                    }\n                }\n            }\n            else if ((!isProp || flags & 4 /* isHost */ || isSvg) && !isComplex) {\n                newValue = newValue === true ? '' : newValue;\n                if (xlink) {\n                    elm.setAttributeNS(XLINK_NS, memberName, newValue);\n                }\n                else {\n                    elm.setAttribute(memberName, newValue);\n                }\n            }\n        }\n    }\n};\nvar parseClassListRegex = /\\s/;\nvar parseClassList = function (value) { return (!value ? [] : value.split(parseClassListRegex)); };\nvar updateElement = function (oldVnode, newVnode, isSvgMode, memberName) {\n    // if the element passed in is a shadow root, which is a document fragment\n    // then we want to be adding attrs/props to the shadow root's \"host\" element\n    // if it's not a shadow root, then we add attrs/props to the same element\n    var elm = newVnode.$elm$.nodeType === 11 /* DocumentFragment */ && newVnode.$elm$.host ? newVnode.$elm$.host : newVnode.$elm$;\n    var oldVnodeAttrs = (oldVnode && oldVnode.$attrs$) || EMPTY_OBJ;\n    var newVnodeAttrs = newVnode.$attrs$ || EMPTY_OBJ;\n    {\n        // remove attributes no longer present on the vnode by setting them to undefined\n        for (memberName in oldVnodeAttrs) {\n            if (!(memberName in newVnodeAttrs)) {\n                setAccessor(elm, memberName, oldVnodeAttrs[memberName], undefined, isSvgMode, newVnode.$flags$);\n            }\n        }\n    }\n    // add new & update changed attributes\n    for (memberName in newVnodeAttrs) {\n        setAccessor(elm, memberName, oldVnodeAttrs[memberName], newVnodeAttrs[memberName], isSvgMode, newVnode.$flags$);\n    }\n};\nvar createElm = function (oldParentVNode, newParentVNode, childIndex, parentElm) {\n    // tslint:disable-next-line: prefer-const\n    var newVNode = newParentVNode.$children$[childIndex];\n    var i = 0;\n    var elm;\n    var childNode;\n    var oldVNode;\n    if (!useNativeShadowDom) {\n        // remember for later we need to check to relocate nodes\n        checkSlotRelocate = true;\n        if (newVNode.$tag$ === 'slot') {\n            if (scopeId) {\n                // scoped css needs to add its scoped id to the parent element\n                parentElm.classList.add(scopeId + '-s');\n            }\n            newVNode.$flags$ |= newVNode.$children$\n                ? // slot element has fallback content\n                    2 /* isSlotFallback */\n                : // slot element does not have fallback content\n                    1 /* isSlotReference */;\n        }\n    }\n    if (newVNode.$text$ !== null) {\n        // create text node\n        elm = newVNode.$elm$ = doc.createTextNode(newVNode.$text$);\n    }\n    else if (newVNode.$flags$ & 1 /* isSlotReference */) {\n        // create a slot reference node\n        elm = newVNode.$elm$ = doc.createTextNode('');\n    }\n    else {\n        if (!isSvgMode) {\n            isSvgMode = newVNode.$tag$ === 'svg';\n        }\n        // create element\n        elm = newVNode.$elm$ = (doc.createElementNS(isSvgMode ? SVG_NS : HTML_NS, newVNode.$flags$ & 2 /* isSlotFallback */ ? 'slot-fb' : newVNode.$tag$));\n        if (isSvgMode && newVNode.$tag$ === 'foreignObject') {\n            isSvgMode = false;\n        }\n        // add css classes, attrs, props, listeners, etc.\n        {\n            updateElement(null, newVNode, isSvgMode);\n        }\n        if (isDef(scopeId) && elm['s-si'] !== scopeId) {\n            // if there is a scopeId and this is the initial render\n            // then let's add the scopeId as a css class\n            elm.classList.add((elm['s-si'] = scopeId));\n        }\n        if (newVNode.$children$) {\n            for (i = 0; i < newVNode.$children$.length; ++i) {\n                // create the node\n                childNode = createElm(oldParentVNode, newVNode, i, elm);\n                // return node could have been null\n                if (childNode) {\n                    // append our new node\n                    elm.appendChild(childNode);\n                }\n            }\n        }\n        {\n            if (newVNode.$tag$ === 'svg') {\n                // Only reset the SVG context when we're exiting <svg> element\n                isSvgMode = false;\n            }\n            else if (elm.tagName === 'foreignObject') {\n                // Reenter SVG context when we're exiting <foreignObject> element\n                isSvgMode = true;\n            }\n        }\n    }\n    {\n        elm['s-hn'] = hostTagName;\n        if (newVNode.$flags$ & (2 /* isSlotFallback */ | 1 /* isSlotReference */)) {\n            // remember the content reference comment\n            elm['s-sr'] = true;\n            // remember the content reference comment\n            elm['s-cr'] = contentRef;\n            // remember the slot name, or empty string for default slot\n            elm['s-sn'] = newVNode.$name$ || '';\n            // check if we've got an old vnode for this slot\n            oldVNode = oldParentVNode && oldParentVNode.$children$ && oldParentVNode.$children$[childIndex];\n            if (oldVNode && oldVNode.$tag$ === newVNode.$tag$ && oldParentVNode.$elm$) {\n                // we've got an old slot vnode and the wrapper is being replaced\n                // so let's move the old slot content back to it's original location\n                putBackInOriginalLocation(oldParentVNode.$elm$, false);\n            }\n        }\n    }\n    return elm;\n};\nvar putBackInOriginalLocation = function (parentElm, recursive) {\n    plt.$flags$ |= 1 /* isTmpDisconnected */;\n    var oldSlotChildNodes = parentElm.childNodes;\n    for (var i = oldSlotChildNodes.length - 1; i >= 0; i--) {\n        var childNode = oldSlotChildNodes[i];\n        if (childNode['s-hn'] !== hostTagName && childNode['s-ol']) {\n            // // this child node in the old element is from another component\n            // // remove this node from the old slot's parent\n            // childNode.remove();\n            // and relocate it back to it's original location\n            parentReferenceNode(childNode).insertBefore(childNode, referenceNode(childNode));\n            // remove the old original location comment entirely\n            // later on the patch function will know what to do\n            // and move this to the correct spot in need be\n            childNode['s-ol'].remove();\n            childNode['s-ol'] = undefined;\n            checkSlotRelocate = true;\n        }\n        if (recursive) {\n            putBackInOriginalLocation(childNode, recursive);\n        }\n    }\n    plt.$flags$ &= ~1 /* isTmpDisconnected */;\n};\nvar addVnodes = function (parentElm, before, parentVNode, vnodes, startIdx, endIdx) {\n    var containerElm = ((parentElm['s-cr'] && parentElm['s-cr'].parentNode) || parentElm);\n    var childNode;\n    if (containerElm.shadowRoot && containerElm.tagName === hostTagName) {\n        containerElm = containerElm.shadowRoot;\n    }\n    for (; startIdx <= endIdx; ++startIdx) {\n        if (vnodes[startIdx]) {\n            childNode = createElm(null, parentVNode, startIdx, parentElm);\n            if (childNode) {\n                vnodes[startIdx].$elm$ = childNode;\n                containerElm.insertBefore(childNode, referenceNode(before));\n            }\n        }\n    }\n};\nvar removeVnodes = function (vnodes, startIdx, endIdx, vnode, elm) {\n    for (; startIdx <= endIdx; ++startIdx) {\n        if ((vnode = vnodes[startIdx])) {\n            elm = vnode.$elm$;\n            callNodeRefs(vnode);\n            {\n                // we're removing this element\n                // so it's possible we need to show slot fallback content now\n                checkSlotFallbackVisibility = true;\n                if (elm['s-ol']) {\n                    // remove the original location comment\n                    elm['s-ol'].remove();\n                }\n                else {\n                    // it's possible that child nodes of the node\n                    // that's being removed are slot nodes\n                    putBackInOriginalLocation(elm, true);\n                }\n            }\n            // remove the vnode's element from the dom\n            elm.remove();\n        }\n    }\n};\nvar updateChildren = function (parentElm, oldCh, newVNode, newCh) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var idxInOld = 0;\n    var i = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var node;\n    var elmToMove;\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n        if (oldStartVnode == null) {\n            // Vnode might have been moved left\n            oldStartVnode = oldCh[++oldStartIdx];\n        }\n        else if (oldEndVnode == null) {\n            oldEndVnode = oldCh[--oldEndIdx];\n        }\n        else if (newStartVnode == null) {\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (newEndVnode == null) {\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldStartVnode, newStartVnode)) {\n            patch(oldStartVnode, newStartVnode);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else if (isSameVnode(oldEndVnode, newEndVnode)) {\n            patch(oldEndVnode, newEndVnode);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldStartVnode, newEndVnode)) {\n            // Vnode moved right\n            if ((oldStartVnode.$tag$ === 'slot' || newEndVnode.$tag$ === 'slot')) {\n                putBackInOriginalLocation(oldStartVnode.$elm$.parentNode, false);\n            }\n            patch(oldStartVnode, newEndVnode);\n            parentElm.insertBefore(oldStartVnode.$elm$, oldEndVnode.$elm$.nextSibling);\n            oldStartVnode = oldCh[++oldStartIdx];\n            newEndVnode = newCh[--newEndIdx];\n        }\n        else if (isSameVnode(oldEndVnode, newStartVnode)) {\n            // Vnode moved left\n            if ((oldStartVnode.$tag$ === 'slot' || newEndVnode.$tag$ === 'slot')) {\n                putBackInOriginalLocation(oldEndVnode.$elm$.parentNode, false);\n            }\n            patch(oldEndVnode, newStartVnode);\n            parentElm.insertBefore(oldEndVnode.$elm$, oldStartVnode.$elm$);\n            oldEndVnode = oldCh[--oldEndIdx];\n            newStartVnode = newCh[++newStartIdx];\n        }\n        else {\n            // createKeyToOldIdx\n            idxInOld = -1;\n            {\n                for (i = oldStartIdx; i <= oldEndIdx; ++i) {\n                    if (oldCh[i] && oldCh[i].$key$ !== null && oldCh[i].$key$ === newStartVnode.$key$) {\n                        idxInOld = i;\n                        break;\n                    }\n                }\n            }\n            if (idxInOld >= 0) {\n                elmToMove = oldCh[idxInOld];\n                if (elmToMove.$tag$ !== newStartVnode.$tag$) {\n                    node = createElm(oldCh && oldCh[newStartIdx], newVNode, idxInOld, parentElm);\n                }\n                else {\n                    patch(elmToMove, newStartVnode);\n                    oldCh[idxInOld] = undefined;\n                    node = elmToMove.$elm$;\n                }\n                newStartVnode = newCh[++newStartIdx];\n            }\n            else {\n                // new element\n                node = createElm(oldCh && oldCh[newStartIdx], newVNode, newStartIdx, parentElm);\n                newStartVnode = newCh[++newStartIdx];\n            }\n            if (node) {\n                {\n                    parentReferenceNode(oldStartVnode.$elm$).insertBefore(node, referenceNode(oldStartVnode.$elm$));\n                }\n            }\n        }\n    }\n    if (oldStartIdx > oldEndIdx) {\n        addVnodes(parentElm, newCh[newEndIdx + 1] == null ? null : newCh[newEndIdx + 1].$elm$, newVNode, newCh, newStartIdx, newEndIdx);\n    }\n    else if (newStartIdx > newEndIdx) {\n        removeVnodes(oldCh, oldStartIdx, oldEndIdx);\n    }\n};\nvar isSameVnode = function (vnode1, vnode2) {\n    // compare if two vnode to see if they're \"technically\" the same\n    // need to have the same element tag, and same key to be the same\n    if (vnode1.$tag$ === vnode2.$tag$) {\n        if (vnode1.$tag$ === 'slot') {\n            return vnode1.$name$ === vnode2.$name$;\n        }\n        {\n            return vnode1.$key$ === vnode2.$key$;\n        }\n    }\n    return false;\n};\nvar referenceNode = function (node) {\n    // this node was relocated to a new location in the dom\n    // because of some other component's slot\n    // but we still have an html comment in place of where\n    // it's original location was according to it's original vdom\n    return (node && node['s-ol']) || node;\n};\nvar parentReferenceNode = function (node) { return (node['s-ol'] ? node['s-ol'] : node).parentNode; };\nvar patch = function (oldVNode, newVNode) {\n    var elm = (newVNode.$elm$ = oldVNode.$elm$);\n    var oldChildren = oldVNode.$children$;\n    var newChildren = newVNode.$children$;\n    var tag = newVNode.$tag$;\n    var text = newVNode.$text$;\n    var defaultHolder;\n    if (text === null) {\n        {\n            // test if we're rendering an svg element, or still rendering nodes inside of one\n            // only add this to the when the compiler sees we're using an svg somewhere\n            isSvgMode = tag === 'svg' ? true : tag === 'foreignObject' ? false : isSvgMode;\n        }\n        // element node\n        {\n            if (tag === 'slot')\n                ;\n            else {\n                // either this is the first render of an element OR it's an update\n                // AND we already know it's possible it could have changed\n                // this updates the element's css classes, attrs, props, listeners, etc.\n                updateElement(oldVNode, newVNode, isSvgMode);\n            }\n        }\n        if (oldChildren !== null && newChildren !== null) {\n            // looks like there's child vnodes for both the old and new vnodes\n            updateChildren(elm, oldChildren, newVNode, newChildren);\n        }\n        else if (newChildren !== null) {\n            // no old child vnodes, but there are new child vnodes to add\n            if (oldVNode.$text$ !== null) {\n                // the old vnode was text, so be sure to clear it out\n                elm.textContent = '';\n            }\n            // add the new vnode children\n            addVnodes(elm, null, newVNode, newChildren, 0, newChildren.length - 1);\n        }\n        else if (oldChildren !== null) {\n            // no new child vnodes, but there are old child vnodes to remove\n            removeVnodes(oldChildren, 0, oldChildren.length - 1);\n        }\n        if (isSvgMode && tag === 'svg') {\n            isSvgMode = false;\n        }\n    }\n    else if ((defaultHolder = elm['s-cr'])) {\n        // this element has slotted content\n        defaultHolder.parentNode.textContent = text;\n    }\n    else if (oldVNode.$text$ !== text) {\n        // update the text content for the text only vnode\n        // and also only if the text is different than before\n        elm.data = text;\n    }\n};\nvar updateFallbackSlotVisibility = function (elm) {\n    // tslint:disable-next-line: prefer-const\n    var childNodes = elm.childNodes;\n    var childNode;\n    var i;\n    var ilen;\n    var j;\n    var slotNameAttr;\n    var nodeType;\n    for (i = 0, ilen = childNodes.length; i < ilen; i++) {\n        childNode = childNodes[i];\n        if (childNode.nodeType === 1 /* ElementNode */) {\n            if (childNode['s-sr']) {\n                // this is a slot fallback node\n                // get the slot name for this slot reference node\n                slotNameAttr = childNode['s-sn'];\n                // by default always show a fallback slot node\n                // then hide it if there are other slots in the light dom\n                childNode.hidden = false;\n                for (j = 0; j < ilen; j++) {\n                    if (childNodes[j]['s-hn'] !== childNode['s-hn']) {\n                        // this sibling node is from a different component\n                        nodeType = childNodes[j].nodeType;\n                        if (slotNameAttr !== '') {\n                            // this is a named fallback slot node\n                            if (nodeType === 1 /* ElementNode */ && slotNameAttr === childNodes[j].getAttribute('slot')) {\n                                childNode.hidden = true;\n                                break;\n                            }\n                        }\n                        else {\n                            // this is a default fallback slot node\n                            // any element or text node (with content)\n                            // should hide the default fallback slot node\n                            if (nodeType === 1 /* ElementNode */ || (nodeType === 3 /* TextNode */ && childNodes[j].textContent.trim() !== '')) {\n                                childNode.hidden = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n            // keep drilling down\n            updateFallbackSlotVisibility(childNode);\n        }\n    }\n};\nvar relocateNodes = [];\nvar relocateSlotContent = function (elm) {\n    // tslint:disable-next-line: prefer-const\n    var childNode;\n    var node;\n    var hostContentNodes;\n    var slotNameAttr;\n    var relocateNodeData;\n    var j;\n    var i = 0;\n    var childNodes = elm.childNodes;\n    var ilen = childNodes.length;\n    for (; i < ilen; i++) {\n        childNode = childNodes[i];\n        if (childNode['s-sr'] && (node = childNode['s-cr'])) {\n            // first got the content reference comment node\n            // then we got it's parent, which is where all the host content is in now\n            hostContentNodes = node.parentNode.childNodes;\n            slotNameAttr = childNode['s-sn'];\n            for (j = hostContentNodes.length - 1; j >= 0; j--) {\n                node = hostContentNodes[j];\n                if (!node['s-cn'] && !node['s-nr'] && node['s-hn'] !== childNode['s-hn']) {\n                    // let's do some relocating to its new home\n                    // but never relocate a content reference node\n                    // that is suppose to always represent the original content location\n                    if (isNodeLocatedInSlot(node, slotNameAttr)) {\n                        // it's possible we've already decided to relocate this node\n                        relocateNodeData = relocateNodes.find(function (r) { return r.$nodeToRelocate$ === node; });\n                        // made some changes to slots\n                        // let's make sure we also double check\n                        // fallbacks are correctly hidden or shown\n                        checkSlotFallbackVisibility = true;\n                        node['s-sn'] = node['s-sn'] || slotNameAttr;\n                        if (relocateNodeData) {\n                            // previously we never found a slot home for this node\n                            // but turns out we did, so let's remember it now\n                            relocateNodeData.$slotRefNode$ = childNode;\n                        }\n                        else {\n                            // add to our list of nodes to relocate\n                            relocateNodes.push({\n                                $slotRefNode$: childNode,\n                                $nodeToRelocate$: node,\n                            });\n                        }\n                        if (node['s-sr']) {\n                            relocateNodes.map(function (relocateNode) {\n                                if (isNodeLocatedInSlot(relocateNode.$nodeToRelocate$, node['s-sn'])) {\n                                    relocateNodeData = relocateNodes.find(function (r) { return r.$nodeToRelocate$ === node; });\n                                    if (relocateNodeData && !relocateNode.$slotRefNode$) {\n                                        relocateNode.$slotRefNode$ = relocateNodeData.$slotRefNode$;\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    else if (!relocateNodes.some(function (r) { return r.$nodeToRelocate$ === node; })) {\n                        // so far this element does not have a slot home, not setting slotRefNode on purpose\n                        // if we never find a home for this element then we'll need to hide it\n                        relocateNodes.push({\n                            $nodeToRelocate$: node,\n                        });\n                    }\n                }\n            }\n        }\n        if (childNode.nodeType === 1 /* ElementNode */) {\n            relocateSlotContent(childNode);\n        }\n    }\n};\nvar isNodeLocatedInSlot = function (nodeToRelocate, slotNameAttr) {\n    if (nodeToRelocate.nodeType === 1 /* ElementNode */) {\n        if (nodeToRelocate.getAttribute('slot') === null && slotNameAttr === '') {\n            return true;\n        }\n        if (nodeToRelocate.getAttribute('slot') === slotNameAttr) {\n            return true;\n        }\n        return false;\n    }\n    if (nodeToRelocate['s-sn'] === slotNameAttr) {\n        return true;\n    }\n    return slotNameAttr === '';\n};\nvar callNodeRefs = function (vNode) {\n    {\n        vNode.$attrs$ && vNode.$attrs$.ref && vNode.$attrs$.ref(null);\n        vNode.$children$ && vNode.$children$.map(callNodeRefs);\n    }\n};\nvar renderVdom = function (hostRef, renderFnResults) {\n    var hostElm = hostRef.$hostElement$;\n    var cmpMeta = hostRef.$cmpMeta$;\n    var oldVNode = hostRef.$vnode$ || newVNode(null, null);\n    var rootVnode = isHost(renderFnResults) ? renderFnResults : h(null, null, renderFnResults);\n    hostTagName = hostElm.tagName;\n    if (cmpMeta.$attrsToReflect$) {\n        rootVnode.$attrs$ = rootVnode.$attrs$ || {};\n        cmpMeta.$attrsToReflect$.map(function (_a) {\n            var propName = _a[0], attribute = _a[1];\n            return (rootVnode.$attrs$[attribute] = hostElm[propName]);\n        });\n    }\n    rootVnode.$tag$ = null;\n    rootVnode.$flags$ |= 4 /* isHost */;\n    hostRef.$vnode$ = rootVnode;\n    rootVnode.$elm$ = oldVNode.$elm$ = (hostElm.shadowRoot || hostElm);\n    {\n        scopeId = hostElm['s-sc'];\n    }\n    {\n        contentRef = hostElm['s-cr'];\n        useNativeShadowDom = supportsShadow && (cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) !== 0;\n        // always reset\n        checkSlotFallbackVisibility = false;\n    }\n    // synchronous patch\n    patch(oldVNode, rootVnode);\n    {\n        // while we're moving nodes around existing nodes, temporarily disable\n        // the disconnectCallback from working\n        plt.$flags$ |= 1 /* isTmpDisconnected */;\n        if (checkSlotRelocate) {\n            relocateSlotContent(rootVnode.$elm$);\n            var relocateData = void 0;\n            var nodeToRelocate = void 0;\n            var orgLocationNode = void 0;\n            var parentNodeRef = void 0;\n            var insertBeforeNode = void 0;\n            var refNode = void 0;\n            var i = 0;\n            for (; i < relocateNodes.length; i++) {\n                relocateData = relocateNodes[i];\n                nodeToRelocate = relocateData.$nodeToRelocate$;\n                if (!nodeToRelocate['s-ol']) {\n                    // add a reference node marking this node's original location\n                    // keep a reference to this node for later lookups\n                    orgLocationNode = doc.createTextNode('');\n                    orgLocationNode['s-nr'] = nodeToRelocate;\n                    nodeToRelocate.parentNode.insertBefore((nodeToRelocate['s-ol'] = orgLocationNode), nodeToRelocate);\n                }\n            }\n            for (i = 0; i < relocateNodes.length; i++) {\n                relocateData = relocateNodes[i];\n                nodeToRelocate = relocateData.$nodeToRelocate$;\n                if (relocateData.$slotRefNode$) {\n                    // by default we're just going to insert it directly\n                    // after the slot reference node\n                    parentNodeRef = relocateData.$slotRefNode$.parentNode;\n                    insertBeforeNode = relocateData.$slotRefNode$.nextSibling;\n                    orgLocationNode = nodeToRelocate['s-ol'];\n                    while ((orgLocationNode = orgLocationNode.previousSibling)) {\n                        refNode = orgLocationNode['s-nr'];\n                        if (refNode && refNode['s-sn'] === nodeToRelocate['s-sn'] && parentNodeRef === refNode.parentNode) {\n                            refNode = refNode.nextSibling;\n                            if (!refNode || !refNode['s-nr']) {\n                                insertBeforeNode = refNode;\n                                break;\n                            }\n                        }\n                    }\n                    if ((!insertBeforeNode && parentNodeRef !== nodeToRelocate.parentNode) || nodeToRelocate.nextSibling !== insertBeforeNode) {\n                        // we've checked that it's worth while to relocate\n                        // since that the node to relocate\n                        // has a different next sibling or parent relocated\n                        if (nodeToRelocate !== insertBeforeNode) {\n                            if (!nodeToRelocate['s-hn'] && nodeToRelocate['s-ol']) {\n                                // probably a component in the index.html that doesn't have it's hostname set\n                                nodeToRelocate['s-hn'] = nodeToRelocate['s-ol'].parentNode.nodeName;\n                            }\n                            // add it back to the dom but in its new home\n                            parentNodeRef.insertBefore(nodeToRelocate, insertBeforeNode);\n                        }\n                    }\n                }\n                else {\n                    // this node doesn't have a slot home to go to, so let's hide it\n                    if (nodeToRelocate.nodeType === 1 /* ElementNode */) {\n                        nodeToRelocate.hidden = true;\n                    }\n                }\n            }\n        }\n        if (checkSlotFallbackVisibility) {\n            updateFallbackSlotVisibility(rootVnode.$elm$);\n        }\n        // done moving nodes around\n        // allow the disconnect callback to work again\n        plt.$flags$ &= ~1 /* isTmpDisconnected */;\n        // always reset\n        relocateNodes.length = 0;\n    }\n};\nvar getElement = function (ref) { return (getHostRef(ref).$hostElement$); };\nvar createEvent = function (ref, name, flags) {\n    var elm = getElement(ref);\n    return {\n        emit: function (detail) {\n            return emitEvent(elm, name, {\n                bubbles: !!(flags & 4 /* Bubbles */),\n                composed: !!(flags & 2 /* Composed */),\n                cancelable: !!(flags & 1 /* Cancellable */),\n                detail: detail,\n            });\n        },\n    };\n};\nvar emitEvent = function (elm, name, opts) {\n    var ev = plt.ce(name, opts);\n    elm.dispatchEvent(ev);\n    return ev;\n};\nvar attachToAncestor = function (hostRef, ancestorComponent) {\n    if (ancestorComponent && !hostRef.$onRenderResolve$ && ancestorComponent['s-p']) {\n        ancestorComponent['s-p'].push(new Promise(function (r) { return (hostRef.$onRenderResolve$ = r); }));\n    }\n};\nvar scheduleUpdate = function (hostRef, isInitialLoad) {\n    {\n        hostRef.$flags$ |= 16 /* isQueuedForUpdate */;\n    }\n    if (hostRef.$flags$ & 4 /* isWaitingForChildren */) {\n        hostRef.$flags$ |= 512 /* needsRerender */;\n        return;\n    }\n    attachToAncestor(hostRef, hostRef.$ancestorComponent$);\n    // there is no ancestorc omponent or the ancestor component\n    // has already fired off its lifecycle update then\n    // fire off the initial update\n    var dispatch = function () { return dispatchHooks(hostRef, isInitialLoad); };\n    return writeTask(dispatch);\n};\nvar dispatchHooks = function (hostRef, isInitialLoad) {\n    var endSchedule = createTime('scheduleUpdate', hostRef.$cmpMeta$.$tagName$);\n    var instance = hostRef.$lazyInstance$;\n    var promise;\n    if (isInitialLoad) {\n        {\n            hostRef.$flags$ |= 256 /* isListenReady */;\n            if (hostRef.$queuedListeners$) {\n                hostRef.$queuedListeners$.map(function (_a) {\n                    var methodName = _a[0], event = _a[1];\n                    return safeCall(instance, methodName, event);\n                });\n                hostRef.$queuedListeners$ = null;\n            }\n        }\n        {\n            promise = safeCall(instance, 'componentWillLoad');\n        }\n    }\n    {\n        promise = then(promise, function () { return safeCall(instance, 'componentWillRender'); });\n    }\n    endSchedule();\n    return then(promise, function () { return updateComponent(hostRef, instance, isInitialLoad); });\n};\nvar updateComponent = function (hostRef, instance, isInitialLoad) {\n    // updateComponent\n    var elm = hostRef.$hostElement$;\n    var endUpdate = createTime('update', hostRef.$cmpMeta$.$tagName$);\n    var rc = elm['s-rc'];\n    if (isInitialLoad) {\n        // DOM WRITE!\n        attachStyles(hostRef);\n    }\n    var endRender = createTime('render', hostRef.$cmpMeta$.$tagName$);\n    {\n        {\n            // looks like we've got child nodes to render into this host element\n            // or we need to update the css class/attrs on the host element\n            // DOM WRITE!\n            renderVdom(hostRef, callRender(hostRef, instance));\n        }\n    }\n    if (plt.$cssShim$) {\n        plt.$cssShim$.updateHost(elm);\n    }\n    if (rc) {\n        // ok, so turns out there are some child host elements\n        // waiting on this parent element to load\n        // let's fire off all update callbacks waiting\n        rc.map(function (cb) { return cb(); });\n        elm['s-rc'] = undefined;\n    }\n    endRender();\n    endUpdate();\n    {\n        var childrenPromises = elm['s-p'];\n        var postUpdate = function () { return postUpdateComponent(hostRef); };\n        if (childrenPromises.length === 0) {\n            postUpdate();\n        }\n        else {\n            Promise.all(childrenPromises).then(postUpdate);\n            hostRef.$flags$ |= 4 /* isWaitingForChildren */;\n            childrenPromises.length = 0;\n        }\n    }\n};\nvar callRender = function (hostRef, instance) {\n    try {\n        instance = instance.render && instance.render();\n        {\n            hostRef.$flags$ &= ~16 /* isQueuedForUpdate */;\n        }\n        {\n            hostRef.$flags$ |= 2 /* hasRendered */;\n        }\n    }\n    catch (e) {\n        consoleError(e);\n    }\n    return instance;\n};\nvar postUpdateComponent = function (hostRef) {\n    var tagName = hostRef.$cmpMeta$.$tagName$;\n    var elm = hostRef.$hostElement$;\n    var endPostUpdate = createTime('postUpdate', tagName);\n    var instance = hostRef.$lazyInstance$;\n    var ancestorComponent = hostRef.$ancestorComponent$;\n    if (!(hostRef.$flags$ & 64 /* hasLoadedComponent */)) {\n        hostRef.$flags$ |= 64 /* hasLoadedComponent */;\n        {\n            // DOM WRITE!\n            addHydratedFlag(elm);\n        }\n        {\n            safeCall(instance, 'componentDidLoad');\n        }\n        endPostUpdate();\n        {\n            hostRef.$onReadyResolve$(elm);\n            if (!ancestorComponent) {\n                appDidLoad();\n            }\n        }\n    }\n    else {\n        {\n            safeCall(instance, 'componentDidUpdate');\n        }\n        endPostUpdate();\n    }\n    {\n        hostRef.$onInstanceResolve$(elm);\n    }\n    // load events fire from bottom to top\n    // the deepest elements load first then bubbles up\n    {\n        if (hostRef.$onRenderResolve$) {\n            hostRef.$onRenderResolve$();\n            hostRef.$onRenderResolve$ = undefined;\n        }\n        if (hostRef.$flags$ & 512 /* needsRerender */) {\n            nextTick(function () { return scheduleUpdate(hostRef, false); });\n        }\n        hostRef.$flags$ &= ~(4 /* isWaitingForChildren */ | 512 /* needsRerender */);\n    }\n    // ( •_•)\n    // ( •_•)>⌐■-■\n    // (⌐■_■)\n};\nvar forceUpdate = function (ref) {\n    {\n        var hostRef = getHostRef(ref);\n        var isConnected = hostRef.$hostElement$.isConnected;\n        if (isConnected && (hostRef.$flags$ & (2 /* hasRendered */ | 16 /* isQueuedForUpdate */)) === 2 /* hasRendered */) {\n            scheduleUpdate(hostRef, false);\n        }\n        // Returns \"true\" when the forced update was successfully scheduled\n        return isConnected;\n    }\n};\nvar appDidLoad = function (who) {\n    // on appload\n    // we have finish the first big initial render\n    {\n        addHydratedFlag(doc.documentElement);\n    }\n    {\n        plt.$flags$ |= 2 /* appLoaded */;\n    }\n    nextTick(function () { return emitEvent(win, 'appload', { detail: { namespace: NAMESPACE } }); });\n};\nvar safeCall = function (instance, method, arg) {\n    if (instance && instance[method]) {\n        try {\n            return instance[method](arg);\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    return undefined;\n};\nvar then = function (promise, thenFn) {\n    return promise && promise.then ? promise.then(thenFn) : thenFn();\n};\nvar addHydratedFlag = function (elm) { return (elm.classList.add('hydrated')); };\nvar initializeClientHydrate = function (hostElm, tagName, hostId, hostRef) {\n    var endHydrate = createTime('hydrateClient', tagName);\n    var shadowRoot = hostElm.shadowRoot;\n    var childRenderNodes = [];\n    var slotNodes = [];\n    var shadowRootNodes = shadowRoot ? [] : null;\n    var vnode = (hostRef.$vnode$ = newVNode(tagName, null));\n    if (!plt.$orgLocNodes$) {\n        initializeDocumentHydrate(doc.body, (plt.$orgLocNodes$ = new Map()));\n    }\n    hostElm[HYDRATE_ID] = hostId;\n    hostElm.removeAttribute(HYDRATE_ID);\n    clientHydrate(vnode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, hostElm, hostId);\n    childRenderNodes.map(function (c) {\n        var orgLocationId = c.$hostId$ + '.' + c.$nodeId$;\n        var orgLocationNode = plt.$orgLocNodes$.get(orgLocationId);\n        var node = c.$elm$;\n        if (orgLocationNode && supportsShadow && orgLocationNode['s-en'] === '') {\n            orgLocationNode.parentNode.insertBefore(node, orgLocationNode.nextSibling);\n        }\n        if (!shadowRoot) {\n            node['s-hn'] = tagName;\n            if (orgLocationNode) {\n                node['s-ol'] = orgLocationNode;\n                node['s-ol']['s-nr'] = node;\n            }\n        }\n        plt.$orgLocNodes$.delete(orgLocationId);\n    });\n    if (shadowRoot) {\n        shadowRootNodes.map(function (shadowRootNode) {\n            if (shadowRootNode) {\n                shadowRoot.appendChild(shadowRootNode);\n            }\n        });\n    }\n    endHydrate();\n};\nvar clientHydrate = function (parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node, hostId) {\n    var childNodeType;\n    var childIdSplt;\n    var childVNode;\n    var i;\n    if (node.nodeType === 1 /* ElementNode */) {\n        childNodeType = node.getAttribute(HYDRATE_CHILD_ID);\n        if (childNodeType) {\n            // got the node data from the element's attribute\n            // `${hostId}.${nodeId}.${depth}.${index}`\n            childIdSplt = childNodeType.split('.');\n            if (childIdSplt[0] === hostId || childIdSplt[0] === '0') {\n                childVNode = {\n                    $flags$: 0,\n                    $hostId$: childIdSplt[0],\n                    $nodeId$: childIdSplt[1],\n                    $depth$: childIdSplt[2],\n                    $index$: childIdSplt[3],\n                    $tag$: node.tagName.toLowerCase(),\n                    $elm$: node,\n                    $attrs$: null,\n                    $children$: null,\n                    $key$: null,\n                    $name$: null,\n                    $text$: null,\n                };\n                childRenderNodes.push(childVNode);\n                node.removeAttribute(HYDRATE_CHILD_ID);\n                // this is a new child vnode\n                // so ensure its parent vnode has the vchildren array\n                if (!parentVNode.$children$) {\n                    parentVNode.$children$ = [];\n                }\n                // add our child vnode to a specific index of the vnode's children\n                parentVNode.$children$[childVNode.$index$] = childVNode;\n                // this is now the new parent vnode for all the next child checks\n                parentVNode = childVNode;\n                if (shadowRootNodes && childVNode.$depth$ === '0') {\n                    shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n                }\n            }\n        }\n        // recursively drill down, end to start so we can remove nodes\n        for (i = node.childNodes.length - 1; i >= 0; i--) {\n            clientHydrate(parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node.childNodes[i], hostId);\n        }\n        if (node.shadowRoot) {\n            // keep drilling down through the shadow root nodes\n            for (i = node.shadowRoot.childNodes.length - 1; i >= 0; i--) {\n                clientHydrate(parentVNode, childRenderNodes, slotNodes, shadowRootNodes, hostElm, node.shadowRoot.childNodes[i], hostId);\n            }\n        }\n    }\n    else if (node.nodeType === 8 /* CommentNode */) {\n        // `${COMMENT_TYPE}.${hostId}.${nodeId}.${depth}.${index}`\n        childIdSplt = node.nodeValue.split('.');\n        if (childIdSplt[1] === hostId || childIdSplt[1] === '0') {\n            // comment node for either the host id or a 0 host id\n            childNodeType = childIdSplt[0];\n            childVNode = {\n                $flags$: 0,\n                $hostId$: childIdSplt[1],\n                $nodeId$: childIdSplt[2],\n                $depth$: childIdSplt[3],\n                $index$: childIdSplt[4],\n                $elm$: node,\n                $attrs$: null,\n                $children$: null,\n                $key$: null,\n                $name$: null,\n                $tag$: null,\n                $text$: null,\n            };\n            if (childNodeType === TEXT_NODE_ID) {\n                childVNode.$elm$ = node.nextSibling;\n                if (childVNode.$elm$ && childVNode.$elm$.nodeType === 3 /* TextNode */) {\n                    childVNode.$text$ = childVNode.$elm$.textContent;\n                    childRenderNodes.push(childVNode);\n                    // remove the text comment since it's no longer needed\n                    node.remove();\n                    if (!parentVNode.$children$) {\n                        parentVNode.$children$ = [];\n                    }\n                    parentVNode.$children$[childVNode.$index$] = childVNode;\n                    if (shadowRootNodes && childVNode.$depth$ === '0') {\n                        shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n                    }\n                }\n            }\n            else if (childVNode.$hostId$ === hostId) {\n                // this comment node is specifcally for this host id\n                if (childNodeType === SLOT_NODE_ID) {\n                    // `${SLOT_NODE_ID}.${hostId}.${nodeId}.${depth}.${index}.${slotName}`;\n                    childVNode.$tag$ = 'slot';\n                    if (childIdSplt[5]) {\n                        node['s-sn'] = childVNode.$name$ = childIdSplt[5];\n                    }\n                    else {\n                        node['s-sn'] = '';\n                    }\n                    node['s-sr'] = true;\n                    if (shadowRootNodes) {\n                        // browser support shadowRoot and this is a shadow dom component\n                        // create an actual slot element\n                        childVNode.$elm$ = doc.createElement(childVNode.$tag$);\n                        if (childVNode.$name$) {\n                            // add the slot name attribute\n                            childVNode.$elm$.setAttribute('name', childVNode.$name$);\n                        }\n                        // insert the new slot element before the slot comment\n                        node.parentNode.insertBefore(childVNode.$elm$, node);\n                        // remove the slot comment since it's not needed for shadow\n                        node.remove();\n                        if (childVNode.$depth$ === '0') {\n                            shadowRootNodes[childVNode.$index$] = childVNode.$elm$;\n                        }\n                    }\n                    slotNodes.push(childVNode);\n                    if (!parentVNode.$children$) {\n                        parentVNode.$children$ = [];\n                    }\n                    parentVNode.$children$[childVNode.$index$] = childVNode;\n                }\n                else if (childNodeType === CONTENT_REF_ID) {\n                    // `${CONTENT_REF_ID}.${hostId}`;\n                    if (shadowRootNodes) {\n                        // remove the content ref comment since it's not needed for shadow\n                        node.remove();\n                    }\n                    else {\n                        hostElm['s-cr'] = node;\n                        node['s-cn'] = true;\n                    }\n                }\n            }\n        }\n    }\n    else if (parentVNode && parentVNode.$tag$ === 'style') {\n        var vnode = newVNode(null, node.textContent);\n        vnode.$elm$ = node;\n        vnode.$index$ = '0';\n        parentVNode.$children$ = [vnode];\n    }\n};\nvar initializeDocumentHydrate = function (node, orgLocNodes) {\n    if (node.nodeType === 1 /* ElementNode */) {\n        var i = 0;\n        for (; i < node.childNodes.length; i++) {\n            initializeDocumentHydrate(node.childNodes[i], orgLocNodes);\n        }\n        if (node.shadowRoot) {\n            for (i = 0; i < node.shadowRoot.childNodes.length; i++) {\n                initializeDocumentHydrate(node.shadowRoot.childNodes[i], orgLocNodes);\n            }\n        }\n    }\n    else if (node.nodeType === 8 /* CommentNode */) {\n        var childIdSplt = node.nodeValue.split('.');\n        if (childIdSplt[0] === ORG_LOCATION_ID) {\n            orgLocNodes.set(childIdSplt[1] + '.' + childIdSplt[2], node);\n            node.nodeValue = '';\n            // useful to know if the original location is\n            // the root light-dom of a shadow dom component\n            node['s-en'] = childIdSplt[3];\n        }\n    }\n};\nvar parsePropertyValue = function (propValue, propType) {\n    // ensure this value is of the correct prop type\n    if (propValue != null && !isComplexType(propValue)) {\n        if (propType & 4 /* Boolean */) {\n            // per the HTML spec, any string value means it is a boolean true value\n            // but we'll cheat here and say that the string \"false\" is the boolean false\n            return propValue === 'false' ? false : propValue === '' || !!propValue;\n        }\n        if (propType & 2 /* Number */) {\n            // force it to be a number\n            return parseFloat(propValue);\n        }\n        if (propType & 1 /* String */) {\n            // could have been passed as a number or boolean\n            // but we still want it as a string\n            return String(propValue);\n        }\n        // redundant return here for better minification\n        return propValue;\n    }\n    // not sure exactly what type we want\n    // so no need to change to a different type\n    return propValue;\n};\nvar getValue = function (ref, propName) { return getHostRef(ref).$instanceValues$.get(propName); };\nvar setValue = function (ref, propName, newVal, cmpMeta) {\n    // check our new property value against our internal value\n    var hostRef = getHostRef(ref);\n    var oldVal = hostRef.$instanceValues$.get(propName);\n    var flags = hostRef.$flags$;\n    var instance = hostRef.$lazyInstance$;\n    newVal = parsePropertyValue(newVal, cmpMeta.$members$[propName][0]);\n    if ((!(flags & 8 /* isConstructingInstance */) || oldVal === undefined) && newVal !== oldVal) {\n        // gadzooks! the property's value has changed!!\n        // set our new value!\n        hostRef.$instanceValues$.set(propName, newVal);\n        if (instance) {\n            // get an array of method names of watch functions to call\n            if (cmpMeta.$watchers$ && flags & 128 /* isWatchReady */) {\n                var watchMethods = cmpMeta.$watchers$[propName];\n                if (watchMethods) {\n                    // this instance is watching for when this property changed\n                    watchMethods.map(function (watchMethodName) {\n                        try {\n                            // fire off each of the watch methods that are watching this property\n                            instance[watchMethodName](newVal, oldVal, propName);\n                        }\n                        catch (e) {\n                            consoleError(e);\n                        }\n                    });\n                }\n            }\n            if ((flags & (2 /* hasRendered */ | 16 /* isQueuedForUpdate */)) === 2 /* hasRendered */) {\n                // looks like this value actually changed, so we've got work to do!\n                // but only if we've already rendered, otherwise just chill out\n                // queue that we need to do an update, but don't worry about queuing\n                // up millions cuz this function ensures it only runs once\n                scheduleUpdate(hostRef, false);\n            }\n        }\n    }\n};\nvar proxyComponent = function (Cstr, cmpMeta, flags) {\n    if (cmpMeta.$members$) {\n        if (Cstr.watchers) {\n            cmpMeta.$watchers$ = Cstr.watchers;\n        }\n        // It's better to have a const than two Object.entries()\n        var members = Object.entries(cmpMeta.$members$);\n        var prototype_1 = Cstr.prototype;\n        members.map(function (_a) {\n            var memberName = _a[0], memberFlags = _a[1][0];\n            if ((memberFlags & 31 /* Prop */ || ((flags & 2 /* proxyState */) && memberFlags & 32 /* State */))) {\n                // proxyComponent - prop\n                Object.defineProperty(prototype_1, memberName, {\n                    get: function () {\n                        // proxyComponent, get value\n                        return getValue(this, memberName);\n                    },\n                    set: function (newValue) {\n                        // proxyComponent, set value\n                        setValue(this, memberName, newValue, cmpMeta);\n                    },\n                    configurable: true,\n                    enumerable: true,\n                });\n            }\n            else if (flags & 1 /* isElementConstructor */ && memberFlags & 64 /* Method */) {\n                // proxyComponent - method\n                Object.defineProperty(prototype_1, memberName, {\n                    value: function () {\n                        var args = [];\n                        for (var _i = 0; _i < arguments.length; _i++) {\n                            args[_i] = arguments[_i];\n                        }\n                        var ref = getHostRef(this);\n                        return ref.$onInstancePromise$.then(function () {\n                            var _a;\n                            return (_a = ref.$lazyInstance$)[memberName].apply(_a, args);\n                        });\n                    },\n                });\n            }\n        });\n        if ((flags & 1 /* isElementConstructor */)) {\n            var attrNameToPropName_1 = new Map();\n            prototype_1.attributeChangedCallback = function (attrName, _oldValue, newValue) {\n                var _this = this;\n                plt.jmp(function () {\n                    var propName = attrNameToPropName_1.get(attrName);\n                    _this[propName] = newValue === null && typeof _this[propName] === 'boolean' ? false : newValue;\n                });\n            };\n            // create an array of attributes to observe\n            // and also create a map of html attribute name to js property name\n            Cstr.observedAttributes = members\n                .filter(function (_a) {\n                var _ = _a[0], m = _a[1];\n                return m[0] & 15;\n            } /* HasAttribute */) // filter to only keep props that should match attributes\n                .map(function (_a) {\n                var propName = _a[0], m = _a[1];\n                var attrName = m[1] || propName;\n                attrNameToPropName_1.set(attrName, propName);\n                if (m[0] & 512 /* ReflectAttr */) {\n                    cmpMeta.$attrsToReflect$.push([propName, attrName]);\n                }\n                return attrName;\n            });\n        }\n    }\n    return Cstr;\n};\nvar initializeComponent = function (elm, hostRef, cmpMeta, hmrVersionId, Cstr) { return __awaiter(void 0, void 0, void 0, function () {\n    var endLoad, endNewInstance, style_1, scopeId_1, endRegisterStyles, ancestorComponent, schedule;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                if (!((hostRef.$flags$ & 32 /* hasInitializedComponent */) === 0)) return [3 /*break*/, 5];\n                // we haven't initialized this element yet\n                hostRef.$flags$ |= 32 /* hasInitializedComponent */;\n                // lazy loaded components\n                // request the component's implementation to be\n                // wired up with the host element\n                Cstr = loadModule(cmpMeta);\n                if (!Cstr.then) return [3 /*break*/, 2];\n                endLoad = uniqueTime();\n                return [4 /*yield*/, Cstr];\n            case 1:\n                Cstr = _a.sent();\n                endLoad();\n                _a.label = 2;\n            case 2:\n                if (!Cstr.isProxied) {\n                    // we'eve never proxied this Constructor before\n                    // let's add the getters/setters to its prototype before\n                    // the first time we create an instance of the implementation\n                    {\n                        cmpMeta.$watchers$ = Cstr.watchers;\n                    }\n                    proxyComponent(Cstr, cmpMeta, 2 /* proxyState */);\n                    Cstr.isProxied = true;\n                }\n                endNewInstance = createTime('createInstance', cmpMeta.$tagName$);\n                // ok, time to construct the instance\n                // but let's keep track of when we start and stop\n                // so that the getters/setters don't incorrectly step on data\n                {\n                    hostRef.$flags$ |= 8 /* isConstructingInstance */;\n                }\n                // construct the lazy-loaded component implementation\n                // passing the hostRef is very important during\n                // construction in order to directly wire together the\n                // host element and the lazy-loaded instance\n                try {\n                    new Cstr(hostRef);\n                }\n                catch (e) {\n                    consoleError(e);\n                }\n                {\n                    hostRef.$flags$ &= ~8 /* isConstructingInstance */;\n                }\n                {\n                    hostRef.$flags$ |= 128 /* isWatchReady */;\n                }\n                endNewInstance();\n                fireConnectedCallback(hostRef.$lazyInstance$);\n                if (!Cstr.style) return [3 /*break*/, 5];\n                style_1 = Cstr.style;\n                if (typeof style_1 !== 'string') {\n                    style_1 = style_1[(hostRef.$modeName$ = computeMode(elm))];\n                }\n                scopeId_1 = getScopeId(cmpMeta, hostRef.$modeName$);\n                if (!!styles.has(scopeId_1)) return [3 /*break*/, 5];\n                endRegisterStyles = createTime('registerStyles', cmpMeta.$tagName$);\n                if (!(cmpMeta.$flags$ & 8) /* needsShadowDomShim */) return [3 /*break*/, 4]; /* needsShadowDomShim */\n                return [4 /*yield*/, import('./shadow-css-c63963b5.js').then(function (m) { return m.scopeCss(style_1, scopeId_1, false); })];\n            case 3:\n                style_1 = _a.sent();\n                _a.label = 4;\n            case 4:\n                registerStyle(scopeId_1, style_1, !!(cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */));\n                endRegisterStyles();\n                _a.label = 5;\n            case 5:\n                ancestorComponent = hostRef.$ancestorComponent$;\n                schedule = function () { return scheduleUpdate(hostRef, true); };\n                if (ancestorComponent && ancestorComponent['s-rc']) {\n                    // this is the intial load and this component it has an ancestor component\n                    // but the ancestor component has NOT fired its will update lifecycle yet\n                    // so let's just cool our jets and wait for the ancestor to continue first\n                    // this will get fired off when the ancestor component\n                    // finally gets around to rendering its lazy self\n                    // fire off the initial update\n                    ancestorComponent['s-rc'].push(schedule);\n                }\n                else {\n                    schedule();\n                }\n                return [2 /*return*/];\n        }\n    });\n}); };\nvar fireConnectedCallback = function (instance) {\n    {\n        safeCall(instance, 'connectedCallback');\n    }\n};\nvar connectedCallback = function (elm) {\n    if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n        var hostRef_1 = getHostRef(elm);\n        var cmpMeta_1 = hostRef_1.$cmpMeta$;\n        var endConnected = createTime('connectedCallback', cmpMeta_1.$tagName$);\n        if (!(hostRef_1.$flags$ & 1 /* hasConnected */)) {\n            // first time this component has connected\n            hostRef_1.$flags$ |= 1 /* hasConnected */;\n            var hostId = void 0;\n            {\n                hostId = elm.getAttribute(HYDRATE_ID);\n                if (hostId) {\n                    if (supportsShadow && cmpMeta_1.$flags$ & 1 /* shadowDomEncapsulation */) {\n                        var scopeId_2 = addStyle(elm.shadowRoot, cmpMeta_1, elm.getAttribute('s-mode'));\n                        elm.classList.remove(scopeId_2 + '-h', scopeId_2 + '-s');\n                    }\n                    initializeClientHydrate(elm, cmpMeta_1.$tagName$, hostId, hostRef_1);\n                }\n            }\n            if (!hostId) {\n                // initUpdate\n                // if the slot polyfill is required we'll need to put some nodes\n                // in here to act as original content anchors as we move nodes around\n                // host element has been connected to the DOM\n                if ((cmpMeta_1.$flags$ & (4 /* hasSlotRelocation */ | 8 /* needsShadowDomShim */))) {\n                    setContentReference(elm);\n                }\n            }\n            {\n                // find the first ancestor component (if there is one) and register\n                // this component as one of the actively loading child components for its ancestor\n                var ancestorComponent = elm;\n                while ((ancestorComponent = ancestorComponent.parentNode || ancestorComponent.host)) {\n                    // climb up the ancestors looking for the first\n                    // component that hasn't finished its lifecycle update yet\n                    if ((ancestorComponent.nodeType === 1 /* ElementNode */ && ancestorComponent.hasAttribute('s-id') && ancestorComponent['s-p']) ||\n                        ancestorComponent['s-p']) {\n                        // we found this components first ancestor component\n                        // keep a reference to this component's ancestor component\n                        attachToAncestor(hostRef_1, (hostRef_1.$ancestorComponent$ = ancestorComponent));\n                        break;\n                    }\n                }\n            }\n            // Lazy properties\n            // https://developers.google.com/web/fundamentals/web-components/best-practices#lazy-properties\n            if (cmpMeta_1.$members$) {\n                Object.entries(cmpMeta_1.$members$).map(function (_a) {\n                    var memberName = _a[0], memberFlags = _a[1][0];\n                    if (memberFlags & 31 /* Prop */ && elm.hasOwnProperty(memberName)) {\n                        var value = elm[memberName];\n                        delete elm[memberName];\n                        elm[memberName] = value;\n                    }\n                });\n            }\n            {\n                // connectedCallback, taskQueue, initialLoad\n                // angular sets attribute AFTER connectCallback\n                // https://github.com/angular/angular/issues/18909\n                // https://github.com/angular/angular/issues/19940\n                nextTick(function () { return initializeComponent(elm, hostRef_1, cmpMeta_1); });\n            }\n        }\n        else {\n            // not the first time this has connected\n            // reattach any event listeners to the host\n            // since they would have been removed when disconnected\n            addHostEventListeners(elm, hostRef_1, cmpMeta_1.$listeners$);\n            // fire off connectedCallback() on component instance\n            fireConnectedCallback(hostRef_1.$lazyInstance$);\n        }\n        endConnected();\n    }\n};\nvar setContentReference = function (elm) {\n    // only required when we're NOT using native shadow dom (slot)\n    // or this browser doesn't support native shadow dom\n    // and this host element was NOT created with SSR\n    // let's pick out the inner content for slot projection\n    // create a node to represent where the original\n    // content was first placed, which is useful later on\n    var contentRefElm = (elm['s-cr'] = doc.createComment(''));\n    contentRefElm['s-cn'] = true;\n    elm.insertBefore(contentRefElm, elm.firstChild);\n};\nvar disconnectedCallback = function (elm) {\n    if ((plt.$flags$ & 1 /* isTmpDisconnected */) === 0) {\n        var hostRef = getHostRef(elm);\n        var instance = hostRef.$lazyInstance$;\n        {\n            if (hostRef.$rmListeners$) {\n                hostRef.$rmListeners$.map(function (rmListener) { return rmListener(); });\n                hostRef.$rmListeners$ = undefined;\n            }\n        }\n        // clear CSS var-shim tracking\n        if (plt.$cssShim$) {\n            plt.$cssShim$.removeHost(elm);\n        }\n        {\n            safeCall(instance, 'disconnectedCallback');\n        }\n    }\n};\nvar bootstrapLazy = function (lazyBundles, options) {\n    if (options === void 0) { options = {}; }\n    var endBootstrap = createTime();\n    var cmpTags = [];\n    var exclude = options.exclude || [];\n    var customElements = win.customElements;\n    var head = doc.head;\n    var metaCharset = /*@__PURE__*/ head.querySelector('meta[charset]');\n    var visibilityStyle = /*@__PURE__*/ doc.createElement('style');\n    var deferredConnectedCallbacks = [];\n    var styles = /*@__PURE__*/ doc.querySelectorAll(\"[\" + HYDRATED_STYLE_ID + \"]\");\n    var appLoadFallback;\n    var isBootstrapping = true;\n    var i = 0;\n    Object.assign(plt, options);\n    plt.$resourcesUrl$ = new URL(options.resourcesUrl || './', doc.baseURI).href;\n    {\n        if (options.syncQueue) {\n            plt.$flags$ |= 4 /* queueSync */;\n        }\n    }\n    {\n        // If the app is already hydrated there is not point to disable the\n        // async queue. This will improve the first input delay\n        plt.$flags$ |= 2 /* appLoaded */;\n    }\n    {\n        for (; i < styles.length; i++) {\n            registerStyle(styles[i].getAttribute(HYDRATED_STYLE_ID), convertScopedToShadow(styles[i].innerHTML), true);\n        }\n    }\n    lazyBundles.map(function (lazyBundle) { return lazyBundle[1].map(function (compactMeta) {\n        var cmpMeta = {\n            $flags$: compactMeta[0],\n            $tagName$: compactMeta[1],\n            $members$: compactMeta[2],\n            $listeners$: compactMeta[3],\n        };\n        {\n            cmpMeta.$members$ = compactMeta[2];\n        }\n        {\n            cmpMeta.$listeners$ = compactMeta[3];\n        }\n        {\n            cmpMeta.$attrsToReflect$ = [];\n        }\n        {\n            cmpMeta.$watchers$ = {};\n        }\n        if (!supportsShadow && cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n            cmpMeta.$flags$ |= 8 /* needsShadowDomShim */;\n        }\n        var tagName = cmpMeta.$tagName$;\n        var HostElement = /** @class */ (function (_super) {\n            __extends(HostElement, _super);\n            // StencilLazyHost\n            function HostElement(self) {\n                var _this = \n                // @ts-ignore\n                _super.call(this, self) || this;\n                self = _this;\n                registerHost(self, cmpMeta);\n                if (cmpMeta.$flags$ & 1 /* shadowDomEncapsulation */) {\n                    // this component is using shadow dom\n                    // and this browser supports shadow dom\n                    // add the read-only property \"shadowRoot\" to the host element\n                    // adding the shadow root build conditionals to minimize runtime\n                    if (supportsShadow) {\n                        {\n                            self.attachShadow({\n                                mode: 'open',\n                                delegatesFocus: !!(cmpMeta.$flags$ & 16 /* shadowDelegatesFocus */),\n                            });\n                        }\n                    }\n                    else if (!('shadowRoot' in self)) {\n                        self.shadowRoot = self;\n                    }\n                }\n                return _this;\n            }\n            HostElement.prototype.connectedCallback = function () {\n                var _this = this;\n                if (appLoadFallback) {\n                    clearTimeout(appLoadFallback);\n                    appLoadFallback = null;\n                }\n                if (isBootstrapping) {\n                    // connectedCallback will be processed once all components have been registered\n                    deferredConnectedCallbacks.push(this);\n                }\n                else {\n                    plt.jmp(function () { return connectedCallback(_this); });\n                }\n            };\n            HostElement.prototype.disconnectedCallback = function () {\n                var _this = this;\n                plt.jmp(function () { return disconnectedCallback(_this); });\n            };\n            HostElement.prototype.forceUpdate = function () {\n                forceUpdate(this);\n            };\n            HostElement.prototype.componentOnReady = function () {\n                return getHostRef(this).$onReadyPromise$;\n            };\n            return HostElement;\n        }(HTMLElement));\n        cmpMeta.$lazyBundleId$ = lazyBundle[0];\n        if (!exclude.includes(tagName) && !customElements.get(tagName)) {\n            cmpTags.push(tagName);\n            customElements.define(tagName, proxyComponent(HostElement, cmpMeta, 1 /* isElementConstructor */));\n        }\n    }); });\n    {\n        visibilityStyle.innerHTML = cmpTags + HYDRATED_CSS;\n        visibilityStyle.setAttribute('data-styles', '');\n        head.insertBefore(visibilityStyle, metaCharset ? metaCharset.nextSibling : head.firstChild);\n    }\n    // Process deferred connectedCallbacks now all components have been registered\n    isBootstrapping = false;\n    if (deferredConnectedCallbacks.length) {\n        deferredConnectedCallbacks.map(function (host) { return host.connectedCallback(); });\n    }\n    else {\n        {\n            plt.jmp(function () { return (appLoadFallback = setTimeout(appDidLoad, 30)); });\n        }\n    }\n    // Fallback appLoad event\n    endBootstrap();\n};\nvar getAssetPath = function (path) {\n    var assetUrl = new URL(path, plt.$resourcesUrl$);\n    return assetUrl.origin !== win.location.origin ? assetUrl.href : assetUrl.pathname;\n};\nvar hostRefs = new WeakMap();\nvar getHostRef = function (ref) { return hostRefs.get(ref); };\nvar registerInstance = function (lazyInstance, hostRef) { return hostRefs.set((hostRef.$lazyInstance$ = lazyInstance), hostRef); };\nvar registerHost = function (elm, cmpMeta) {\n    var hostRef = {\n        $flags$: 0,\n        $hostElement$: elm,\n        $cmpMeta$: cmpMeta,\n        $instanceValues$: new Map(),\n    };\n    {\n        hostRef.$onInstancePromise$ = new Promise(function (r) { return (hostRef.$onInstanceResolve$ = r); });\n    }\n    {\n        hostRef.$onReadyPromise$ = new Promise(function (r) { return (hostRef.$onReadyResolve$ = r); });\n        elm['s-p'] = [];\n        elm['s-rc'] = [];\n    }\n    addHostEventListeners(elm, hostRef, cmpMeta.$listeners$);\n    return hostRefs.set(elm, hostRef);\n};\nvar isMemberInElement = function (elm, memberName) { return memberName in elm; };\nvar consoleError = function (e) { return console.error(e); };\nvar cmpModules = /*@__PURE__*/ new Map();\nvar loadModule = function (cmpMeta, hostRef, hmrVersionId) {\n    // loadModuleImport\n    var exportName = cmpMeta.$tagName$.replace(/-/g, '_');\n    var bundleId = cmpMeta.$lazyBundleId$;\n    var module = cmpModules.get(bundleId);\n    if (module) {\n        return module[exportName];\n    }\n    return import(\n    /* webpackInclude: /\\.entry\\.js$/ */\n    /* webpackExclude: /\\.system\\.entry\\.js$/ */\n    /* webpackMode: \"lazy\" */\n    \"./\" + bundleId + \".entry.js\" + '').then(function (importedModule) {\n        {\n            cmpModules.set(bundleId, importedModule);\n        }\n        return importedModule[exportName];\n    }, consoleError);\n};\nvar styles = new Map();\nvar modeResolutionChain = [];\nvar queueDomReads = [];\nvar queueDomWrites = [];\nvar queueDomWritesLow = [];\nvar queueTask = function (queue, write) { return function (cb) {\n    queue.push(cb);\n    if (!queuePending) {\n        queuePending = true;\n        if (write && plt.$flags$ & 4 /* queueSync */) {\n            nextTick(flush);\n        }\n        else {\n            plt.raf(flush);\n        }\n    }\n}; };\nvar consume = function (queue) {\n    for (var i = 0; i < queue.length; i++) {\n        try {\n            queue[i](performance.now());\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    queue.length = 0;\n};\nvar consumeTimeout = function (queue, timeout) {\n    var i = 0;\n    var ts = 0;\n    while (i < queue.length && (ts = performance.now()) < timeout) {\n        try {\n            queue[i++](ts);\n        }\n        catch (e) {\n            consoleError(e);\n        }\n    }\n    if (i === queue.length) {\n        queue.length = 0;\n    }\n    else if (i !== 0) {\n        queue.splice(0, i);\n    }\n};\nvar flush = function () {\n    {\n        queueCongestion++;\n    }\n    // always force a bunch of medium callbacks to run, but still have\n    // a throttle on how many can run in a certain time\n    // DOM READS!!!\n    consume(queueDomReads);\n    // DOM WRITES!!!\n    {\n        var timeout = (plt.$flags$ & 6 /* queueMask */) === 2 /* appLoaded */ ? performance.now() + 14 * Math.ceil(queueCongestion * (1.0 / 10.0)) : Infinity;\n        consumeTimeout(queueDomWrites, timeout);\n        consumeTimeout(queueDomWritesLow, timeout);\n        if (queueDomWrites.length > 0) {\n            queueDomWritesLow.push.apply(queueDomWritesLow, queueDomWrites);\n            queueDomWrites.length = 0;\n        }\n        if ((queuePending = queueDomReads.length + queueDomWrites.length + queueDomWritesLow.length > 0)) {\n            // still more to do yet, but we've run out of time\n            // let's let this thing cool off and try again in the next tick\n            plt.raf(flush);\n        }\n        else {\n            queueCongestion = 0;\n        }\n    }\n};\nvar nextTick = /*@__PURE__*/ function (cb) { return promiseResolve().then(cb); };\nvar readTask = /*@__PURE__*/ queueTask(queueDomReads, false);\nvar writeTask = /*@__PURE__*/ queueTask(queueDomWrites, true);\nvar Build = {\n    isDev: false,\n    isBrowser: true,\n    isServer: false,\n    isTesting: false,\n};\nexport { Build as B, CSS as C, Host as H, NAMESPACE as N, promiseResolve as a, bootstrapLazy as b, writeTask as c, doc as d, createEvent as e, readTask as f, getMode as g, h, getElement as i, forceUpdate as j, getAssetPath as k, plt as p, registerInstance as r, setMode as s, win as w };\n"]},"metadata":{},"sourceType":"module"}