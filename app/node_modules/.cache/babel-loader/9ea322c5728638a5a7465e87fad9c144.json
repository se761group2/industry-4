{"ast":null,"code":"import { __awaiter, __generator } from \"tslib\";\nimport { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-92848855.js';\nimport { b as getIonMode } from './ionic-global-23e7365a.js';\nimport { d as debounceEvent, f as findItemLabel } from './helpers-5c745fbd.js';\nimport { c as createColorClasses } from './theme-5641d27f.js';\nvar inputIosCss = \".sc-ion-input-ios-h{--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--background:transparent;--color:initial;display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-align:center;align-items:center;width:100%;padding:0 !important;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);z-index:2}ion-item.sc-ion-input-ios-h:not(.item-label),ion-item:not(.item-label) .sc-ion-input-ios-h{--padding-start:0}.ion-color.sc-ion-input-ios-h{color:var(--ion-color-base)}.native-input.sc-ion-input-ios{border-radius:var(--border-radius);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:inline-block;-ms-flex:1;flex:1;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-input.sc-ion-input-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-input.sc-ion-input-ios::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios:-webkit-autofill{background-color:transparent}.native-input.sc-ion-input-ios:invalid{-webkit-box-shadow:none;box-shadow:none}.native-input.sc-ion-input-ios::-ms-clear{display:none}.native-input[disabled].sc-ion-input-ios{opacity:0.4}.cloned-input.sc-ion-input-ios{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-input-ios .cloned-input.sc-ion-input-ios,[dir=rtl].sc-ion-input-ios-h .cloned-input.sc-ion-input-ios,[dir=rtl] .sc-ion-input-ios-h .cloned-input.sc-ion-input-ios{left:unset;right:unset;right:0}.input-clear-icon.sc-ion-input-ios{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;background-position:center;border:0;outline:none;background-color:transparent;background-repeat:no-repeat;visibility:hidden;-webkit-appearance:none;-moz-appearance:none;appearance:none}.input-clear-icon.sc-ion-input-ios:focus{opacity:0.5}.has-value.sc-ion-input-ios-h .input-clear-icon.sc-ion-input-ios{visibility:visible}.has-focus.sc-ion-input-ios-h{pointer-events:none}.has-focus.sc-ion-input-ios-h input.sc-ion-input-ios,.has-focus.sc-ion-input-ios-h a.sc-ion-input-ios,.has-focus.sc-ion-input-ios-h button.sc-ion-input-ios{pointer-events:auto}.sc-ion-input-ios-h{--padding-top:10px;--padding-end:10px;--padding-bottom:10px;--padding-start:0;font-size:inherit}.item-label-stacked.sc-ion-input-ios-h,.item-label-stacked .sc-ion-input-ios-h,.item-label-floating.sc-ion-input-ios-h,.item-label-floating .sc-ion-input-ios-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0px}.input-clear-icon.sc-ion-input-ios{background-image:url(\\\"data:image/svg+xml;charset=utf-8,<svg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20512%20512'><path%20fill='var(--ion-color-step-600,%20%23666666)'%20d='M403.1,108.9c-81.2-81.2-212.9-81.2-294.2,0s-81.2,212.9,0,294.2c81.2,81.2,212.9,81.2,294.2,0S484.3,190.1,403.1,108.9z%20M352,340.2L340.2,352l-84.4-84.2l-84,83.8L160,339.8l84-83.8l-84-83.8l11.8-11.8l84,83.8l84.4-84.2l11.8,11.8L267.6,256L352,340.2z'/></svg>\\\");width:30px;height:30px;background-size:18px}\";\nvar inputMdCss = \".sc-ion-input-md-h{--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--background:transparent;--color:initial;display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-align:center;align-items:center;width:100%;padding:0 !important;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);z-index:2}ion-item.sc-ion-input-md-h:not(.item-label),ion-item:not(.item-label) .sc-ion-input-md-h{--padding-start:0}.ion-color.sc-ion-input-md-h{color:var(--ion-color-base)}.native-input.sc-ion-input-md{border-radius:var(--border-radius);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:inline-block;-ms-flex:1;flex:1;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-input.sc-ion-input-md{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-input.sc-ion-input-md::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md:-webkit-autofill{background-color:transparent}.native-input.sc-ion-input-md:invalid{-webkit-box-shadow:none;box-shadow:none}.native-input.sc-ion-input-md::-ms-clear{display:none}.native-input[disabled].sc-ion-input-md{opacity:0.4}.cloned-input.sc-ion-input-md{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-input-md .cloned-input.sc-ion-input-md,[dir=rtl].sc-ion-input-md-h .cloned-input.sc-ion-input-md,[dir=rtl] .sc-ion-input-md-h .cloned-input.sc-ion-input-md{left:unset;right:unset;right:0}.input-clear-icon.sc-ion-input-md{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;background-position:center;border:0;outline:none;background-color:transparent;background-repeat:no-repeat;visibility:hidden;-webkit-appearance:none;-moz-appearance:none;appearance:none}.input-clear-icon.sc-ion-input-md:focus{opacity:0.5}.has-value.sc-ion-input-md-h .input-clear-icon.sc-ion-input-md{visibility:visible}.has-focus.sc-ion-input-md-h{pointer-events:none}.has-focus.sc-ion-input-md-h input.sc-ion-input-md,.has-focus.sc-ion-input-md-h a.sc-ion-input-md,.has-focus.sc-ion-input-md-h button.sc-ion-input-md{pointer-events:auto}.sc-ion-input-md-h{--padding-top:10px;--padding-end:0;--padding-bottom:10px;--padding-start:8px;font-size:inherit}.item-label-stacked.sc-ion-input-md-h,.item-label-stacked .sc-ion-input-md-h,.item-label-floating.sc-ion-input-md-h,.item-label-floating .sc-ion-input-md-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0}.input-clear-icon.sc-ion-input-md{background-image:url(\\\"data:image/svg+xml;charset=utf-8,<svg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20512%20512'><polygon%20fill='var(--ion-color-step-600,%20%23666666)'%20points='405,136.798%20375.202,107%20256,226.202%20136.798,107%20107,136.798%20226.202,256%20107,375.202%20136.798,405%20256,285.798%20375.202,405%20405,375.202%20285.798,256'/></svg>\\\");width:30px;height:30px;background-size:22px}\";\n\nvar Input =\n/** @class */\nfunction () {\n  function class_1(hostRef) {\n    var _this = this;\n\n    registerInstance(this, hostRef);\n    this.ionInput = createEvent(this, \"ionInput\", 7);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.inputId = \"ion-input-\" + inputIds++;\n    this.didBlurAfterEdit = false;\n    /**\n     * This is required for a WebKit bug which requires us to\n     * blur and focus an input to properly focus the input in\n     * an item with delegatesFocus. It will no longer be needed\n     * with iOS 14.\n     *\n     * @internal\n     */\n\n    this.fireFocusEvents = true;\n    this.hasFocus = false;\n    /**\n     * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\n     */\n\n    this.autocapitalize = 'off';\n    /**\n     * Indicates whether the value of the control can be automatically completed by the browser.\n     */\n\n    this.autocomplete = 'off';\n    /**\n     * Whether auto correction should be enabled when the user is entering/editing the text value.\n     */\n\n    this.autocorrect = 'off';\n    /**\n     * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\n     */\n\n    this.autofocus = false;\n    /**\n     * If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input.\n     */\n\n    this.clearInput = false;\n    /**\n     * Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke.\n     */\n\n    this.debounce = 0;\n    /**\n     * If `true`, the user cannot interact with the input.\n     */\n\n    this.disabled = false;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n\n    this.name = this.inputId;\n    /**\n     * If `true`, the user cannot modify the value.\n     */\n\n    this.readonly = false;\n    /**\n     * If `true`, the user must fill in a value before submitting a form.\n     */\n\n    this.required = false;\n    /**\n     * If `true`, the element will have its spelling and grammar checked.\n     */\n\n    this.spellcheck = false;\n    /**\n     * The type of control to display. The default type is text.\n     */\n\n    this.type = 'text';\n    /**\n     * The value of the input.\n     */\n\n    this.value = '';\n\n    this.onInput = function (ev) {\n      var input = ev.target;\n\n      if (input) {\n        _this.value = input.value || '';\n      }\n\n      _this.ionInput.emit(ev);\n    };\n\n    this.onBlur = function (ev) {\n      _this.hasFocus = false;\n\n      _this.focusChanged();\n\n      _this.emitStyle();\n\n      if (_this.fireFocusEvents) {\n        _this.ionBlur.emit(ev);\n      }\n    };\n\n    this.onFocus = function (ev) {\n      _this.hasFocus = true;\n\n      _this.focusChanged();\n\n      _this.emitStyle();\n\n      if (_this.fireFocusEvents) {\n        _this.ionFocus.emit(ev);\n      }\n    };\n\n    this.onKeydown = function (ev) {\n      if (_this.shouldClearOnEdit()) {\n        // Did the input value change after it was blurred and edited?\n        // Do not clear if user is hitting Enter to submit form\n        if (_this.didBlurAfterEdit && _this.hasValue() && ev.key !== 'Enter') {\n          // Clear the input\n          _this.clearTextInput();\n        } // Reset the flag\n\n\n        _this.didBlurAfterEdit = false;\n      }\n    };\n\n    this.clearTextOnEnter = function (ev) {\n      if (ev.key === 'Enter') {\n        _this.clearTextInput(ev);\n      }\n    };\n\n    this.clearTextInput = function (ev) {\n      if (_this.clearInput && !_this.readonly && !_this.disabled && ev) {\n        ev.preventDefault();\n        ev.stopPropagation(); // Attempt to focus input again after pressing clear button\n\n        _this.setFocus();\n      }\n\n      _this.value = '';\n      /**\n       * This is needed for clearOnEdit\n       * Otherwise the value will not be cleared\n       * if user is inside the input\n       */\n\n      if (_this.nativeInput) {\n        _this.nativeInput.value = '';\n      }\n    };\n  }\n\n  class_1.prototype.debounceChanged = function () {\n    this.ionChange = debounceEvent(this.ionChange, this.debounce);\n  };\n\n  class_1.prototype.disabledChanged = function () {\n    this.emitStyle();\n  };\n  /**\n   * Update the native input element when the value changes\n   */\n\n\n  class_1.prototype.valueChanged = function () {\n    this.emitStyle();\n    this.ionChange.emit({\n      value: this.value == null ? this.value : this.value.toString()\n    });\n  };\n\n  class_1.prototype.componentWillLoad = function () {\n    // If the ion-input has a tabindex attribute we get the value\n    // and pass it down to the native input, then remove it from the\n    // ion-input to avoid causing tabbing twice on the same element\n    if (this.el.hasAttribute('tabindex')) {\n      var tabindex = this.el.getAttribute('tabindex');\n      this.tabindex = tabindex !== null ? tabindex : undefined;\n      this.el.removeAttribute('tabindex');\n    }\n  };\n\n  class_1.prototype.connectedCallback = function () {\n    this.emitStyle();\n    this.debounceChanged();\n    {\n      document.dispatchEvent(new CustomEvent('ionInputDidLoad', {\n        detail: this.el\n      }));\n    }\n  };\n\n  class_1.prototype.disconnectedCallback = function () {\n    {\n      document.dispatchEvent(new CustomEvent('ionInputDidUnload', {\n        detail: this.el\n      }));\n    }\n  };\n  /**\n   * Sets focus on the native `input` in `ion-input`. Use this method instead of the global\n   * `input.focus()`.\n   */\n\n\n  class_1.prototype.setFocus = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (this.nativeInput) {\n          this.nativeInput.focus();\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n  /**\n   * Sets blur on the native `input` in `ion-input`. Use this method instead of the global\n   * `input.blur()`.\n   * @internal\n   */\n\n\n  class_1.prototype.setBlur = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (this.nativeInput) {\n          this.nativeInput.blur();\n        }\n\n        return [2\n        /*return*/\n        ];\n      });\n    });\n  };\n  /**\n   * Returns the native `<input>` element used under the hood.\n   */\n\n\n  class_1.prototype.getInputElement = function () {\n    return Promise.resolve(this.nativeInput);\n  };\n\n  class_1.prototype.shouldClearOnEdit = function () {\n    var _a = this,\n        type = _a.type,\n        clearOnEdit = _a.clearOnEdit;\n\n    return clearOnEdit === undefined ? type === 'password' : clearOnEdit;\n  };\n\n  class_1.prototype.getValue = function () {\n    return typeof this.value === 'number' ? this.value.toString() : (this.value || '').toString();\n  };\n\n  class_1.prototype.emitStyle = function () {\n    this.ionStyle.emit({\n      'interactive': true,\n      'input': true,\n      'has-placeholder': this.placeholder != null,\n      'has-value': this.hasValue(),\n      'has-focus': this.hasFocus,\n      'interactive-disabled': this.disabled\n    });\n  };\n\n  class_1.prototype.focusChanged = function () {\n    // If clearOnEdit is enabled and the input blurred but has a value, set a flag\n    if (!this.hasFocus && this.shouldClearOnEdit() && this.hasValue()) {\n      this.didBlurAfterEdit = true;\n    }\n  };\n\n  class_1.prototype.hasValue = function () {\n    return this.getValue().length > 0;\n  };\n\n  class_1.prototype.render = function () {\n    var _a;\n\n    var _this = this;\n\n    var mode = getIonMode(this);\n    var value = this.getValue();\n    var labelId = this.inputId + '-lbl';\n    var label = findItemLabel(this.el);\n\n    if (label) {\n      label.id = labelId;\n    }\n\n    return h(Host, {\n      \"aria-disabled\": this.disabled ? 'true' : null,\n      class: createColorClasses(this.color, (_a = {}, _a[mode] = true, _a['has-value'] = this.hasValue(), _a['has-focus'] = this.hasFocus, _a))\n    }, h(\"input\", {\n      class: \"native-input\",\n      ref: function (input) {\n        return _this.nativeInput = input;\n      },\n      \"aria-labelledby\": labelId,\n      disabled: this.disabled,\n      accept: this.accept,\n      autoCapitalize: this.autocapitalize,\n      autoComplete: this.autocomplete,\n      autoCorrect: this.autocorrect,\n      autoFocus: this.autofocus,\n      enterKeyHint: this.enterkeyhint,\n      inputMode: this.inputmode,\n      min: this.min,\n      max: this.max,\n      minLength: this.minlength,\n      maxLength: this.maxlength,\n      multiple: this.multiple,\n      name: this.name,\n      pattern: this.pattern,\n      placeholder: this.placeholder || '',\n      readOnly: this.readonly,\n      required: this.required,\n      spellcheck: this.spellcheck,\n      step: this.step,\n      size: this.size,\n      tabindex: this.tabindex,\n      type: this.type,\n      value: value,\n      onInput: this.onInput,\n      onBlur: this.onBlur,\n      onFocus: this.onFocus,\n      onKeyDown: this.onKeydown\n    }), this.clearInput && !this.readonly && !this.disabled && h(\"button\", {\n      \"aria-label\": \"reset\",\n      type: \"button\",\n      class: \"input-clear-icon\",\n      onTouchStart: this.clearTextInput,\n      onMouseDown: this.clearTextInput,\n      onKeyDown: this.clearTextOnEnter\n    }));\n  };\n\n  Object.defineProperty(class_1.prototype, \"el\", {\n    get: function () {\n      return getElement(this);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(class_1, \"watchers\", {\n    get: function () {\n      return {\n        \"debounce\": [\"debounceChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"value\": [\"valueChanged\"]\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return class_1;\n}();\n\nvar inputIds = 0;\nInput.style = {\n  ios: inputIosCss,\n  md: inputMdCss\n};\nexport { Input as ion_input };","map":{"version":3,"sources":["/home/sukhans/code/university/industry-4/app/node_modules/@ionic/core/dist/esm-es5/ion-input.entry.js"],"names":["__awaiter","__generator","r","registerInstance","e","createEvent","h","H","Host","i","getElement","b","getIonMode","d","debounceEvent","f","findItemLabel","c","createColorClasses","inputIosCss","inputMdCss","Input","class_1","hostRef","_this","ionInput","ionChange","ionBlur","ionFocus","ionStyle","inputId","inputIds","didBlurAfterEdit","fireFocusEvents","hasFocus","autocapitalize","autocomplete","autocorrect","autofocus","clearInput","debounce","disabled","name","readonly","required","spellcheck","type","value","onInput","ev","input","target","emit","onBlur","focusChanged","emitStyle","onFocus","onKeydown","shouldClearOnEdit","hasValue","key","clearTextInput","clearTextOnEnter","preventDefault","stopPropagation","setFocus","nativeInput","prototype","debounceChanged","disabledChanged","valueChanged","toString","componentWillLoad","el","hasAttribute","tabindex","getAttribute","undefined","removeAttribute","connectedCallback","document","dispatchEvent","CustomEvent","detail","disconnectedCallback","_a","focus","setBlur","blur","getInputElement","Promise","resolve","clearOnEdit","getValue","placeholder","length","render","mode","labelId","label","id","class","color","ref","accept","autoCapitalize","autoComplete","autoCorrect","autoFocus","enterKeyHint","enterkeyhint","inputMode","inputmode","min","max","minLength","minlength","maxLength","maxlength","multiple","pattern","readOnly","step","size","onKeyDown","onTouchStart","onMouseDown","Object","defineProperty","get","enumerable","configurable","style","ios","md","ion_input"],"mappings":"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","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nimport { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-92848855.js';\nimport { b as getIonMode } from './ionic-global-23e7365a.js';\nimport { d as debounceEvent, f as findItemLabel } from './helpers-5c745fbd.js';\nimport { c as createColorClasses } from './theme-5641d27f.js';\nvar inputIosCss = \".sc-ion-input-ios-h{--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--background:transparent;--color:initial;display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-align:center;align-items:center;width:100%;padding:0 !important;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);z-index:2}ion-item.sc-ion-input-ios-h:not(.item-label),ion-item:not(.item-label) .sc-ion-input-ios-h{--padding-start:0}.ion-color.sc-ion-input-ios-h{color:var(--ion-color-base)}.native-input.sc-ion-input-ios{border-radius:var(--border-radius);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:inline-block;-ms-flex:1;flex:1;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-input.sc-ion-input-ios{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-input.sc-ion-input-ios::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-ios:-webkit-autofill{background-color:transparent}.native-input.sc-ion-input-ios:invalid{-webkit-box-shadow:none;box-shadow:none}.native-input.sc-ion-input-ios::-ms-clear{display:none}.native-input[disabled].sc-ion-input-ios{opacity:0.4}.cloned-input.sc-ion-input-ios{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-input-ios .cloned-input.sc-ion-input-ios,[dir=rtl].sc-ion-input-ios-h .cloned-input.sc-ion-input-ios,[dir=rtl] .sc-ion-input-ios-h .cloned-input.sc-ion-input-ios{left:unset;right:unset;right:0}.input-clear-icon.sc-ion-input-ios{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;background-position:center;border:0;outline:none;background-color:transparent;background-repeat:no-repeat;visibility:hidden;-webkit-appearance:none;-moz-appearance:none;appearance:none}.input-clear-icon.sc-ion-input-ios:focus{opacity:0.5}.has-value.sc-ion-input-ios-h .input-clear-icon.sc-ion-input-ios{visibility:visible}.has-focus.sc-ion-input-ios-h{pointer-events:none}.has-focus.sc-ion-input-ios-h input.sc-ion-input-ios,.has-focus.sc-ion-input-ios-h a.sc-ion-input-ios,.has-focus.sc-ion-input-ios-h button.sc-ion-input-ios{pointer-events:auto}.sc-ion-input-ios-h{--padding-top:10px;--padding-end:10px;--padding-bottom:10px;--padding-start:0;font-size:inherit}.item-label-stacked.sc-ion-input-ios-h,.item-label-stacked .sc-ion-input-ios-h,.item-label-floating.sc-ion-input-ios-h,.item-label-floating .sc-ion-input-ios-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0px}.input-clear-icon.sc-ion-input-ios{background-image:url(\\\"data:image/svg+xml;charset=utf-8,<svg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20512%20512'><path%20fill='var(--ion-color-step-600,%20%23666666)'%20d='M403.1,108.9c-81.2-81.2-212.9-81.2-294.2,0s-81.2,212.9,0,294.2c81.2,81.2,212.9,81.2,294.2,0S484.3,190.1,403.1,108.9z%20M352,340.2L340.2,352l-84.4-84.2l-84,83.8L160,339.8l84-83.8l-84-83.8l11.8-11.8l84,83.8l84.4-84.2l11.8,11.8L267.6,256L352,340.2z'/></svg>\\\");width:30px;height:30px;background-size:18px}\";\nvar inputMdCss = \".sc-ion-input-md-h{--placeholder-color:initial;--placeholder-font-style:initial;--placeholder-font-weight:initial;--placeholder-opacity:.5;--padding-top:0;--padding-end:0;--padding-bottom:0;--padding-start:0;--background:transparent;--color:initial;display:-ms-flexbox;display:flex;position:relative;-ms-flex:1;flex:1;-ms-flex-align:center;align-items:center;width:100%;padding:0 !important;background:var(--background);color:var(--color);font-family:var(--ion-font-family, inherit);z-index:2}ion-item.sc-ion-input-md-h:not(.item-label),ion-item:not(.item-label) .sc-ion-input-md-h{--padding-start:0}.ion-color.sc-ion-input-md-h{color:var(--ion-color-base)}.native-input.sc-ion-input-md{border-radius:var(--border-radius);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;display:inline-block;-ms-flex:1;flex:1;width:100%;max-width:100%;max-height:100%;border:0;outline:none;background:transparent;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.native-input.sc-ion-input-md{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.native-input.sc-ion-input-md::-webkit-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md::-moz-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md:-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md::-ms-input-placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md::placeholder{color:var(--placeholder-color);font-family:inherit;font-style:var(--placeholder-font-style);font-weight:var(--placeholder-font-weight);opacity:var(--placeholder-opacity)}.native-input.sc-ion-input-md:-webkit-autofill{background-color:transparent}.native-input.sc-ion-input-md:invalid{-webkit-box-shadow:none;box-shadow:none}.native-input.sc-ion-input-md::-ms-clear{display:none}.native-input[disabled].sc-ion-input-md{opacity:0.4}.cloned-input.sc-ion-input-md{left:0;top:0;position:absolute;pointer-events:none}[dir=rtl].sc-ion-input-md .cloned-input.sc-ion-input-md,[dir=rtl].sc-ion-input-md-h .cloned-input.sc-ion-input-md,[dir=rtl] .sc-ion-input-md-h .cloned-input.sc-ion-input-md{left:unset;right:unset;right:0}.input-clear-icon.sc-ion-input-md{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;background-position:center;border:0;outline:none;background-color:transparent;background-repeat:no-repeat;visibility:hidden;-webkit-appearance:none;-moz-appearance:none;appearance:none}.input-clear-icon.sc-ion-input-md:focus{opacity:0.5}.has-value.sc-ion-input-md-h .input-clear-icon.sc-ion-input-md{visibility:visible}.has-focus.sc-ion-input-md-h{pointer-events:none}.has-focus.sc-ion-input-md-h input.sc-ion-input-md,.has-focus.sc-ion-input-md-h a.sc-ion-input-md,.has-focus.sc-ion-input-md-h button.sc-ion-input-md{pointer-events:auto}.sc-ion-input-md-h{--padding-top:10px;--padding-end:0;--padding-bottom:10px;--padding-start:8px;font-size:inherit}.item-label-stacked.sc-ion-input-md-h,.item-label-stacked .sc-ion-input-md-h,.item-label-floating.sc-ion-input-md-h,.item-label-floating .sc-ion-input-md-h{--padding-top:8px;--padding-bottom:8px;--padding-start:0}.input-clear-icon.sc-ion-input-md{background-image:url(\\\"data:image/svg+xml;charset=utf-8,<svg%20xmlns='http://www.w3.org/2000/svg'%20viewBox='0%200%20512%20512'><polygon%20fill='var(--ion-color-step-600,%20%23666666)'%20points='405,136.798%20375.202,107%20256,226.202%20136.798,107%20107,136.798%20226.202,256%20107,375.202%20136.798,405%20256,285.798%20375.202,405%20405,375.202%20285.798,256'/></svg>\\\");width:30px;height:30px;background-size:22px}\";\nvar Input = /** @class */ (function () {\n    function class_1(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        this.ionInput = createEvent(this, \"ionInput\", 7);\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n        this.inputId = \"ion-input-\" + inputIds++;\n        this.didBlurAfterEdit = false;\n        /**\n         * This is required for a WebKit bug which requires us to\n         * blur and focus an input to properly focus the input in\n         * an item with delegatesFocus. It will no longer be needed\n         * with iOS 14.\n         *\n         * @internal\n         */\n        this.fireFocusEvents = true;\n        this.hasFocus = false;\n        /**\n         * Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\n         */\n        this.autocapitalize = 'off';\n        /**\n         * Indicates whether the value of the control can be automatically completed by the browser.\n         */\n        this.autocomplete = 'off';\n        /**\n         * Whether auto correction should be enabled when the user is entering/editing the text value.\n         */\n        this.autocorrect = 'off';\n        /**\n         * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\n         */\n        this.autofocus = false;\n        /**\n         * If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input.\n         */\n        this.clearInput = false;\n        /**\n         * Set the amount of time, in milliseconds, to wait to trigger the `ionChange` event after each keystroke.\n         */\n        this.debounce = 0;\n        /**\n         * If `true`, the user cannot interact with the input.\n         */\n        this.disabled = false;\n        /**\n         * The name of the control, which is submitted with the form data.\n         */\n        this.name = this.inputId;\n        /**\n         * If `true`, the user cannot modify the value.\n         */\n        this.readonly = false;\n        /**\n         * If `true`, the user must fill in a value before submitting a form.\n         */\n        this.required = false;\n        /**\n         * If `true`, the element will have its spelling and grammar checked.\n         */\n        this.spellcheck = false;\n        /**\n         * The type of control to display. The default type is text.\n         */\n        this.type = 'text';\n        /**\n         * The value of the input.\n         */\n        this.value = '';\n        this.onInput = function (ev) {\n            var input = ev.target;\n            if (input) {\n                _this.value = input.value || '';\n            }\n            _this.ionInput.emit(ev);\n        };\n        this.onBlur = function (ev) {\n            _this.hasFocus = false;\n            _this.focusChanged();\n            _this.emitStyle();\n            if (_this.fireFocusEvents) {\n                _this.ionBlur.emit(ev);\n            }\n        };\n        this.onFocus = function (ev) {\n            _this.hasFocus = true;\n            _this.focusChanged();\n            _this.emitStyle();\n            if (_this.fireFocusEvents) {\n                _this.ionFocus.emit(ev);\n            }\n        };\n        this.onKeydown = function (ev) {\n            if (_this.shouldClearOnEdit()) {\n                // Did the input value change after it was blurred and edited?\n                // Do not clear if user is hitting Enter to submit form\n                if (_this.didBlurAfterEdit && _this.hasValue() && ev.key !== 'Enter') {\n                    // Clear the input\n                    _this.clearTextInput();\n                }\n                // Reset the flag\n                _this.didBlurAfterEdit = false;\n            }\n        };\n        this.clearTextOnEnter = function (ev) {\n            if (ev.key === 'Enter') {\n                _this.clearTextInput(ev);\n            }\n        };\n        this.clearTextInput = function (ev) {\n            if (_this.clearInput && !_this.readonly && !_this.disabled && ev) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                // Attempt to focus input again after pressing clear button\n                _this.setFocus();\n            }\n            _this.value = '';\n            /**\n             * This is needed for clearOnEdit\n             * Otherwise the value will not be cleared\n             * if user is inside the input\n             */\n            if (_this.nativeInput) {\n                _this.nativeInput.value = '';\n            }\n        };\n    }\n    class_1.prototype.debounceChanged = function () {\n        this.ionChange = debounceEvent(this.ionChange, this.debounce);\n    };\n    class_1.prototype.disabledChanged = function () {\n        this.emitStyle();\n    };\n    /**\n     * Update the native input element when the value changes\n     */\n    class_1.prototype.valueChanged = function () {\n        this.emitStyle();\n        this.ionChange.emit({ value: this.value == null ? this.value : this.value.toString() });\n    };\n    class_1.prototype.componentWillLoad = function () {\n        // If the ion-input has a tabindex attribute we get the value\n        // and pass it down to the native input, then remove it from the\n        // ion-input to avoid causing tabbing twice on the same element\n        if (this.el.hasAttribute('tabindex')) {\n            var tabindex = this.el.getAttribute('tabindex');\n            this.tabindex = tabindex !== null ? tabindex : undefined;\n            this.el.removeAttribute('tabindex');\n        }\n    };\n    class_1.prototype.connectedCallback = function () {\n        this.emitStyle();\n        this.debounceChanged();\n        {\n            document.dispatchEvent(new CustomEvent('ionInputDidLoad', {\n                detail: this.el\n            }));\n        }\n    };\n    class_1.prototype.disconnectedCallback = function () {\n        {\n            document.dispatchEvent(new CustomEvent('ionInputDidUnload', {\n                detail: this.el\n            }));\n        }\n    };\n    /**\n     * Sets focus on the native `input` in `ion-input`. Use this method instead of the global\n     * `input.focus()`.\n     */\n    class_1.prototype.setFocus = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (this.nativeInput) {\n                    this.nativeInput.focus();\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Sets blur on the native `input` in `ion-input`. Use this method instead of the global\n     * `input.blur()`.\n     * @internal\n     */\n    class_1.prototype.setBlur = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                if (this.nativeInput) {\n                    this.nativeInput.blur();\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * Returns the native `<input>` element used under the hood.\n     */\n    class_1.prototype.getInputElement = function () {\n        return Promise.resolve(this.nativeInput);\n    };\n    class_1.prototype.shouldClearOnEdit = function () {\n        var _a = this, type = _a.type, clearOnEdit = _a.clearOnEdit;\n        return (clearOnEdit === undefined)\n            ? type === 'password'\n            : clearOnEdit;\n    };\n    class_1.prototype.getValue = function () {\n        return typeof this.value === 'number' ? this.value.toString() :\n            (this.value || '').toString();\n    };\n    class_1.prototype.emitStyle = function () {\n        this.ionStyle.emit({\n            'interactive': true,\n            'input': true,\n            'has-placeholder': this.placeholder != null,\n            'has-value': this.hasValue(),\n            'has-focus': this.hasFocus,\n            'interactive-disabled': this.disabled,\n        });\n    };\n    class_1.prototype.focusChanged = function () {\n        // If clearOnEdit is enabled and the input blurred but has a value, set a flag\n        if (!this.hasFocus && this.shouldClearOnEdit() && this.hasValue()) {\n            this.didBlurAfterEdit = true;\n        }\n    };\n    class_1.prototype.hasValue = function () {\n        return this.getValue().length > 0;\n    };\n    class_1.prototype.render = function () {\n        var _a;\n        var _this = this;\n        var mode = getIonMode(this);\n        var value = this.getValue();\n        var labelId = this.inputId + '-lbl';\n        var label = findItemLabel(this.el);\n        if (label) {\n            label.id = labelId;\n        }\n        return (h(Host, { \"aria-disabled\": this.disabled ? 'true' : null, class: createColorClasses(this.color, (_a = {},\n                _a[mode] = true,\n                _a['has-value'] = this.hasValue(),\n                _a['has-focus'] = this.hasFocus,\n                _a)) }, h(\"input\", { class: \"native-input\", ref: function (input) { return _this.nativeInput = input; }, \"aria-labelledby\": labelId, disabled: this.disabled, accept: this.accept, autoCapitalize: this.autocapitalize, autoComplete: this.autocomplete, autoCorrect: this.autocorrect, autoFocus: this.autofocus, enterKeyHint: this.enterkeyhint, inputMode: this.inputmode, min: this.min, max: this.max, minLength: this.minlength, maxLength: this.maxlength, multiple: this.multiple, name: this.name, pattern: this.pattern, placeholder: this.placeholder || '', readOnly: this.readonly, required: this.required, spellcheck: this.spellcheck, step: this.step, size: this.size, tabindex: this.tabindex, type: this.type, value: value, onInput: this.onInput, onBlur: this.onBlur, onFocus: this.onFocus, onKeyDown: this.onKeydown }), (this.clearInput && !this.readonly && !this.disabled) && h(\"button\", { \"aria-label\": \"reset\", type: \"button\", class: \"input-clear-icon\", onTouchStart: this.clearTextInput, onMouseDown: this.clearTextInput, onKeyDown: this.clearTextOnEnter })));\n    };\n    Object.defineProperty(class_1.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(class_1, \"watchers\", {\n        get: function () {\n            return {\n                \"debounce\": [\"debounceChanged\"],\n                \"disabled\": [\"disabledChanged\"],\n                \"value\": [\"valueChanged\"]\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return class_1;\n}());\nvar inputIds = 0;\nInput.style = {\n    ios: inputIosCss,\n    md: inputMdCss\n};\nexport { Input as ion_input };\n"]},"metadata":{},"sourceType":"module"}